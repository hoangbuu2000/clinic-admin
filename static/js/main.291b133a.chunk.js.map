{"version":3,"sources":["components/Button.js","API.js","components/DataTable.js","URL.js","currentEndpoint.js","pages/management/roles/index.js","components/FormRole.js","components/UploadFile.js","pages/management/roles/details.js","pages/management/accounts/index.js","pages/management/medicines/index.js","components/FormMedicine.js","pages/management/shifts/index.js","components/FormShift.js","components/FormInformation.js","pages/management/accounts/details.js","pages/management/admins/index.js","pages/management/doctors/index.js","pages/management/employees/index.js","components/FormSchedule.js","pages/management/schedules/index.js","pages/management/bookings/index.js","components/FormBooking.js","pages/management/patients/index.js","components/FormPrescription.js","pages/management/prescriptions/index.js","pages/management/invoices/index.js","components/FormInvoice.js","pages/management/Drawer.js","components/ForgotPassword.js","ProtectedAuth.js","components/Login.js","components/UserDetails.js","pages/management/categories/index.js","components/FormCategory.js","components/dashboard/ChartPrescription.js","components/dashboard/ChartService.js","components/dashboard/LatestBookings.js","components/dashboard/LatestMedicines.js","components/dashboard/TotalBookings.js","components/dashboard/TotalPatients.js","components/dashboard/TotalSales.js","pages/management/dashboard/index.js","components/chart/ChartMedicine.js","components/chart/ChartPatient.js","components/chart/ChartSale.js","pages/management/charts/Chart.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonCustom","props","bgColor","color","red","lightBlue","styles","background","Object","assign","style","Button","id","onClick","type","variant","title","endpoints","axios","create","baseURL","useStyles","makeStyles","theme","typoContainer","padding","width","margin","typo","borderRadius","textAlign","fontSize","root","backgroundColor","DataTable","classes","className","header","Typography","getRowClassName","params","getValue","rows","columns","pageSize","checkboxSelection","disableSelectionOnClick","paginationMode","server","filterMode","filter","onCellEditCommit","handleCellEditCommit","rowCount","onPageChange","handlePageChange","page","currentPage","autoHeight","selectionModel","onSelectionModelChange","handleSelectionChange","isRowSelectable","btnTitle","createURL","to","textDecoration","position","right","top","url","indexToSubStrCurrentEndpoint","height","spacing","marginTop","breakpoints","down","table","display","Roles","useState","roles","setRoles","loading","setLoading","history","useHistory","context","React","AuthContext","getRole","API","get","headers","localStorage","getItem","then","response","data","content","i","length","action","catch","error","status","window","confirm","clear","push","useEffect","setPage","location","href","substring","field","headerName","renderCell","editable","fill","align","swal","icon","buttons","cancel","inactive","text","value","delete","method","name","active","config","console","log","useCallback","res","err","src","process","btn","fontWeight","FormRole","setName","onSubmit","e","document","querySelector","innerText","preventDefault","TextField","required","onChange","target","label","goBack","marginLeft","UploadFile","image","setImage","htmlFor","event","png","toLowerCase","endsWith","jpg","jpeg","svg","URL","createObjectURL","getElementById","files","img","onload","revokeObjectURL","startIcon","CloudUpload","component","cursor","card","maxWidth","media","pagination","info","marginBottom","form","paddingTop","formLoading","opacity","pointerEvents","backgroundImage","backgroundSize","backgroundPosition","createTheme","palette","primary","main","RoleDetails","roleId","useParams","role","setRole","setFormLoading","username","setUsername","password","setPassword","useContext","tempRole","getAccountsOfRole","search","accounts","totalElements","totalPages","parseInt","number","alert","message","handleChange","Grid","container","item","xs","md","map","a","Card","CardActionArea","CardMedia","CardContent","gutterBottom","myForm","formData","FormData","Array","isArray","FormControl","ThemeProvider","Pagination","count","showFirstButton","showLastButton","roleInfo","Accounts","setAccounts","setTotalPages","hasInfo","setFilter","promises","getAccounts","apiURL","handleFilter","temp","result","totalAccounts","Promise","all","Select","MenuItem","r","idx","imageContainer","left","updateLoading","imageScale","btnClose","btnUpload","Medicines","medicines","setMedicines","categories","setCategories","setUpdateLoading","setTotalElements","setCurrentPage","currentImageID","setCurrentImageID","getMedicines","m","category_id","categoryIds","categoryArr","handleFileChange","file","obj","append","description","price","unit","currentAuth","imgScale","imgContainer","alt","category","c","unitInStock","newPage","click","FormMedicine","setDescription","setPrice","setUnit","setUnitInStock","setCategory","isCategoryShow","setCategoryShow","infoC","setInfoC","getCategories","validators","errorMessages","minWidth","Tooltip","arrow","Dialog","fullScreen","open","DialogTitle","IconButton","edge","DialogContent","DialogContentText","newSelection","Shifts","shifts","setShifts","getShifts","FormShift","secondary","FormInformation","information","setInformation","disabled","setDisabled","Date","selectedDate","handleDateChange","hometown","setHometown","handleSubmit","firstName","lastName","gender","dateOfBirth","email","phone","idCardNumber","address","roleEndpoint","account_id","accountId","handleGoBack","ValidatorForm","addValidationRule","RegExp","test","removeValidationRule","from","elements","forEach","formElement","utils","DateFnsUtils","format","date","h","formAccountLoading","AccountDetails","account","setAccount","disableForm","setDisableForm","getAccount","role_id","roleID","handleChangeAccount","border","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","labelId","Admins","admins","setAdmins","hide","readOnly","InputProps","getAdmins","accountIds","blue","Doctors","doctors","setDoctors","getDoctors","Employees","employees","setEmployees","getEmployees","fontFamily","Transition","forwardRef","ref","Slide","direction","FormSchedules","currentPageDoctor","setCurrentPageDoctor","totalElementsDoctor","setTotalElementsDoctor","isDoctorOpen","setDoctorOpen","isShiftOpen","setShiftOpen","isDateOpen","setDateOpen","doctorId","setDoctorId","shiftId","setShiftId","doctor","setDoctor","shift","setShift","setSelectedDate","setOpen","columnsDoctor","handleClose","handleClick","parentElement","getDate","getMonth","getYear","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","minDate","details","flexDirection","flex","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","Schedules","schedules","setSchedules","totalPagesDoctor","setTotalPagesDoctor","imageDetail","setImageDetail","d","accountArr","handleViewDetails","Set","s","shift_id","shiftIds","shiftArr","sh","getFullYear","Divider","DialogActions","Bookings","bookings","setBookings","services","setServices","tokens","setTokens","isDoctorShow","setDoctorShow","isShiftShow","setShiftShow","pdfRef","useRef","bookingToPDF","setBookingToPDF","actionLoading","setActionLoading","onDoubleClick","handleChooseDateDoctorShift","doctor_id","service_id","service","booking_id","token","t","time","confirmedAt","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","canceledAt","handleConfirm","handleCancel","handleDelete","handleConvert","trigger","onBeforeGetContent","current","getBookings","doctorIds","b","serviceIds","bookingIds","promises1","doctorArr","promises2","promises3","tokenArr","promises4","serviceArr","currentDate","bookingId","refresh","includes","ok","patient_id","v","fullName","split","slice","join","TableContainer","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","FormBooking","booking","setBooking","selectedDOB","setSelectedDOB","openChoosePhone","setOpenChoosePhone","openChoosePatient","setOpenChoosePatient","doctorSelected","setDoctorSelected","shiftSelected","setShiftSelected","infoD","setInfoD","infoS","setInfoS","patients","setPatients","patientSelected","setPatientSelected","valueGetter","columnsPatient","handleChooseDoctor","promise","handleChooseShift","isMaxArr","isMax","handleSave","handleCloseChoosePhone","handleCloseChoosePatient","param","input","row","Patients","trim","url1","getPatients","FormPrescription","patientShow","setPatientShow","medicineShow","setMedicineShow","currentPagePatient","setCurrentPagePatient","currentPageMedicine","setCurrentPageMedicine","totalElementsPatient","setTotalElementsPatient","totalElementsMedicine","setTotalElementsMedicine","bookingSelected","setBookingSelected","setService","medicineSelected","setMedicineSelected","setSelectionModel","authContext","reRender","setReRender","columnsMedicine","columnsBooking","patientId","medicineArr","quantity","fee","userId","serviceFee","serviceName","prescription","disableEnforceFocus","Chip","marginRight","onDelete","TextareaAutosize","maxRows","placeholder","overflow","arial-label","medicineId","medicine","rowSpan","Prescriptions","prescriptions","setPrescriptions","prescriptionDetails","setPrescriptionDetails","openDetails","setOpenDetails","getPrescriptionDetails","patient","p","getPrescriptions","promise1","promise2","patientArr","presId","medicine_id","medicineIds","unitPrice","totalPrice","reduce","Invoices","invoices","setInvoices","headerAlign","employee_id","employee","prescriptionIds","prescription_id","employeeIds","prescriptionArr","employeeArr","getInvoices","FormInvoice","prescriptionSelected","setPrescriptionSelected","uuid","setUUID","uuidv4","size","level","includeMargin","formData1","drawerWidth","SideBarContext","createContext","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","up","toolbar","justifyContent","mixins","flexGrow","MiniDrawer","useTheme","anchorEl1","setAnchorEl1","anchorEl2","setAnchorEl2","notifications","setNotifications","countNoti","setCountNoti","handleClose1","handleClose2","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getDatabase","notiListRef","onValue","snapshot","array","childSnapshot","childData","val","Provider","CssBaseline","AppBar","clsx","Toolbar","noWrap","isAuth","Badge","badgeContent","currentTarget","anchorEl","Boolean","n","Avatar","setAuth","Drawer","paper","List","ListItem","button","selected","Link","ListItemIcon","ListItemText","AccessibleForward","LocalPharmacy","Category","ForgotPassword","confirmPassword","setConfirmPassword","getElementsByName","Container","Box","LockOutlined","substr","autoFocus","fullWidth","ProtectedRoute","Component","rest","render","pathname","Copyright","Login","user","setUser","forgotPassword","setForgotPassword","activeStep","setActiveStep","infoValid","setInfoValid","usernameToResetPassword","setUsernameToResetPassword","userCaptcha","setUserCaptcha","setItem","accessToken","setTimeout","setCurrentAuth","sm","backgroundRepeat","mode","grey","elevation","square","Checkbox","loadCaptchaEnginge","Facebook","Twitter","GTranslate","Stepper","alternativeLabel","index","Step","StepLabel","prevActiveStep","validateCaptcha","monthNames","UserDetails","isCovidTestShow","setCovidTestShow","isHealthRecordsShow","setHealthRecordsShow","prescriptionsWithVaccine","setPrescriptionsWithVaccine","isVaccineShow","setVaccineShow","prescriptionsWithCovidTest","setPrescriptionsWithCovidTest","prescriptionWithCovidTest","setPrescriptionWithCovidTest","isPrescriptionDetailsShow","setPrescriptionDetailsShow","isCovidTestDetailsShow","setCovidTestDetailsShow","doctorOfPrescription","setDoctorOfPrescription","valueTab","setValueTab","detailsArr","getHealthRecords","pres","getUser","Tabs","orientation","indicatorColor","textColor","newValue","Tab","textTransform","shape","PaperProps","pd","Categories","FormCategory","ChartPatient","labelsSevenDays","setTotalPrescriptions","setData","totalArr","today","labels","datasets","CardHeader","disableUnderline","footer","CardActions","ChartService","totalService1","setTotalService1","totalService2","setTotalService2","totalService3","setTotalService3","borderColor","borderWidth","getData","parseFloat","toFixed","LatestBookings","getLatestBookings","LatestMedicines","updatedDate","TotalBookings","totalBookings","setTotalBookings","TotalPatients","totalPatients","setTotalPatients","TotalSales","totalSales","setTotalSales","Math","round","Dashboard","ChartMedicine","month","year","dialog","setDialog","getBookingsByDate","ChartSale","Chart","sender","receiver","Chat","isOpen","messages","setMessages","setMessage","tabValue","setTabValue","uid","bottom","db","getFirestore","onSnapshot","collection","snapShot","arr","docs","doc","q","query","where","documentId","getDocs","element","messageId","sx","borderRight","photoURL","displayName","setUTCSeconds","seconds","toString","Timestamp","now","docId","docRef","setDoc","merge","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.291b133a.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\"\r\nimport { lightBlue, red } from '@material-ui/core/colors';\r\n\r\nexport default function ButtonCustom(props) {\r\n    let bgColor;\r\n    let color;\r\n    if (props.color === 'primary') {\r\n        bgColor = '#e1f5fe';\r\n        color = 'black';\r\n    }\r\n    else if (props.color === 'secondary') {\r\n        bgColor = red['A400'];\r\n        color = 'white';\r\n    } \r\n    else if (props.color === 'lightPrimary') {\r\n        bgColor = '#ffffff';\r\n        color = '#000000';\r\n    }\r\n    else if (props.color === 'darkPrimary') {\r\n        bgColor = '#afc2cb';\r\n        color = '#000000';\r\n    }\r\n    else if (props.color === 'darkSecondary') {\r\n        bgColor = '#cbcbcb';\r\n        color = '#000000';\r\n    }\r\n    else if (props.color === 'white') {\r\n        bgColor = 'white';\r\n        color = lightBlue['A400'];\r\n    }\r\n\r\n    let styles = {\r\n        color: color,\r\n        background: bgColor\r\n    }\r\n    Object.assign(styles, props.style)\r\n\r\n    return (\r\n        <Button id={props.id} onClick={props.onClick} type={props.type} \r\n        variant={props.variant ? props.variant : \"contained\"} style={styles}>\r\n            {props.title}\r\n        </Button>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport let endpoints = {\r\n    'roles': 'roles',\r\n    'accounts': 'accounts',\r\n    'medicines': 'medicines',\r\n    'shifts': 'shifts',\r\n    'admins': 'admins',\r\n    'doctors': 'doctors',\r\n    'employees': 'employees',\r\n    'schedules': 'schedules',\r\n    'bookings': 'bookings',\r\n    'patients': 'patients',\r\n    'prescriptions': 'prescriptions',\r\n    'invoices': 'invoices',\r\n    'services': 'services',\r\n    'categories': 'categories'\r\n}\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8080/'\r\n})","import { makeStyles, Typography } from \"@material-ui/core\"\r\nimport ButtonCustom from \"./Button\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typoContainer: {\r\n        padding: 30,\r\n        width: '30%',\r\n        margin: '0 auto'\r\n    },\r\n    typo: {\r\n        borderRadius: 6,\r\n        textAlign: 'center',\r\n        background: '#e1f5fe',\r\n        fontSize: 24,\r\n        padding: 5,\r\n        color: '#000000'\r\n    },\r\n    root: {\r\n        '& .super-app-theme--Max': {\r\n            backgroundColor: '#ef9a9a',\r\n            '&:hover': {\r\n                backgroundColor: '#ffcdd2'\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function DataTable(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.header ? (\r\n                <div className={classes.typoContainer}>\r\n                <Typography className={classes.typo} variant=\"h4\">{props.header}</Typography>\r\n                </div>\r\n            ) : ''}\r\n            <DataGrid\r\n            getRowClassName={(params) => params.getValue(params.id, 'isMax') === true ? `super-app-theme--Max` : ''}\r\n            className={props.className}\r\n            rows={props.rows}\r\n            columns={props.columns}\r\n            pageSize={props.pageSize}\r\n            checkboxSelection={!props.checkboxSelection ? props.checkboxSelection : true}\r\n            disableSelectionOnClick={!props.disableSelectionOnClick ? props.disableSelectionOnClick : true }\r\n            paginationMode={props.server ? 'server' : 'client'}\r\n            filterMode={props.filter ? 'server' : 'client'}\r\n            onCellEditCommit={props.handleCellEditCommit}\r\n            rowCount={props.rowCount}\r\n            onPageChange={props.handlePageChange}\r\n            page={props.currentPage}\r\n            autoHeight={true}\r\n            selectionModel={props.selectionModel}\r\n            onSelectionModelChange={props.handleSelectionChange}\r\n            checkboxSelection={props.checkboxSelection ? true : false}\r\n            isRowSelectable={props.isRowSelectable}\r\n            />\r\n            <br/>\r\n            {props.btnTitle !== \"\" && props.createURL !== \"\" ? (\r\n                <Link to={props.createURL} style={{textDecoration: 'none', position: 'fixed', right: 0, top: 100}}>\r\n                    <ButtonCustom title={props.btnTitle} color=\"primary\" />\r\n                </Link>\r\n            ) : \"\"}\r\n        </div>\r\n    )\r\n}","export let url = {\r\n    'login': '/login'\r\n}","export let indexToSubStrCurrentEndpoint = 21;\r\nexport let indexToSubStrGetAccountId = 22;","import * as React from 'react';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport ButtonCustom from '../../../components/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport API, { endpoints } from '../../../API';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DataTable from '../../../components/DataTable';\r\nimport { url } from '../../../URL';\r\nimport { SideBarContext } from '../Drawer';\r\nimport { indexToSubStrCurrentEndpoint } from '../../../currentEndpoint';\r\nimport { AuthContext } from '../../../App';\r\n\r\nconst colorTrue = '#b3e5fc';\r\nconst colorFalse = '#afc2cb';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { \r\n    height: theme.spacing(50), \r\n    width: '100%', \r\n    marginTop: theme.spacing(6) + 2,\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: theme.spacing(6) + 2\r\n    }, \r\n    background: 'white'\r\n  },\r\n  table: {\r\n    display: 'block'\r\n  }\r\n}))\r\n\r\nexport default function Roles() {\r\n  const [roles, setRoles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const context = React.useContext(AuthContext);\r\n  const classes = useStyles();\r\n\r\n  function getRole() {\r\n    setLoading(true);\r\n\r\n    API.get(endpoints.roles, {\r\n      headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    }).then(response => {\r\n          let rows = response.data.content;\r\n          for(let i = 0; i < rows.length; i++) {\r\n            Object.assign(rows[i], {action: 'Delete'});\r\n          }\r\n          setRoles(rows);\r\n          setLoading(false);\r\n    }).catch(error => {\r\n      if (error?.response?.status === 401) {\r\n        if (window.confirm('Login expired! Please login again.')) {\r\n          localStorage.clear();\r\n          history.push(url['login']);\r\n        }\r\n      }\r\n    }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    getRole();\r\n    context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n  }, [])\r\n\r\n  const columns = [\r\n    { \r\n      field: 'id', \r\n      headerName: 'ID', \r\n      width: 200,\r\n      renderCell: (params) => {\r\n        const id = params.getValue(params.id, \"id\");\r\n        let url = \"/roles/\" + id;\r\n        return (\r\n          <Link style={{textDecoration: 'none', color: 'black', width: '100%'}} to={url}>{id}</Link>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 700,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      width: 200,\r\n      editable: true,\r\n      type: 'boolean',\r\n      renderCell: (params) => {\r\n        if (params.getValue(params.id, 'active') === true)\r\n          return (\r\n            <CheckCircleIcon style={{fill: colorTrue}} />\r\n          )\r\n        else if (params.getValue(params.id, 'active') === false)\r\n          return (\r\n            <CancelIcon style={{fill: colorFalse}} />\r\n          )\r\n      }\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: ' ',\r\n      width: 150,\r\n      align: 'center',\r\n      renderCell: (params) => (<ButtonCustom onClick={() => {\r\n        const id = params.getValue(params.id, \"id\");\r\n        swal({\r\n          title: \"Are you sure to delete?\",\r\n          icon: \"warning\",\r\n          buttons: {\r\n            cancel: 'Cancel',\r\n            inactive: {\r\n              text: 'Inactivate',\r\n              value: 'inactive'\r\n            },\r\n            delete: {\r\n              text: 'Delete anyway',\r\n              value: 'delete'\r\n            }\r\n          }\r\n        }).then((value) => {\r\n          switch(value) {\r\n            case \"inactive\":\r\n              return axios(`http://localhost:8080/roles/${id}`, {\r\n                method: 'put',\r\n                headers: {\r\n                  \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                },\r\n                data: {\r\n                  name: params.getValue(params.id, \"name\"),\r\n                  active: false\r\n                }\r\n              })\r\n            case \"delete\":\r\n              return axios(`http://localhost:8080/roles/${id}`, {\r\n                method: 'delete',\r\n                headers: {\r\n                  \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                }\r\n              })\r\n            default:\r\n              return\r\n          }\r\n        }).then(response => {\r\n          if (response?.status === 200) {\r\n            if (response?.config?.method === 'put') {\r\n              swal(\"Inactivated\", \"\", \"success\");\r\n              getRole();\r\n            } else if (response?.config?.method === 'delete') {\r\n              swal(\"Deleted\", \"\", \"success\");\r\n              getRole();\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          console.log(error.response);\r\n          if (error?.response?.status === 401) {\r\n            if (window.confirm('Login expired! Please login again.')) {\r\n              localStorage.clear();\r\n              history.push(url['login']);\r\n            }\r\n          }\r\n        })\r\n      }} color='primary' title='Delete' />),\r\n    },\r\n  ];\r\n\r\n  const handleCellEditCommit = useCallback(({id, field, value}) => {\r\n    let data = {};\r\n\r\n    API(`${endpoints['roles']}/${id}`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    }).then(res => {\r\n      data = res.data;\r\n      data[field] = value;\r\n\r\n      API(`${endpoints['roles']}/${id}`, {\r\n        method: 'put',\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: data\r\n      }).then(res => console.log(res))\r\n        .catch(err => {\r\n          if (err.response.status === 401)\r\n            if (window.confirm('Login expired! Please login again.')) {\r\n              localStorage.clear();\r\n              history.push(url['login']);\r\n            }\r\n        })\r\n    })\r\n    .catch(error => {\r\n        if (error.response.status === 401)\r\n            if (window.confirm('Login expired! Please login again.')) {\r\n              localStorage.clear();\r\n              history.push(url['login']);\r\n            }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading ? (\r\n        <img style={{width: '100%', height: 600}} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n      ) : (\r\n        <DataTable className={classes.table} header=\"LIST ROLE\" rows={roles} columns={columns} pageSize={5} \r\n        handleCellEditCommit={handleCellEditCommit} createURL=\"/roles/create\"\r\n        btnTitle=\"Create\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { TextField, Typography, RadioGroup, FormControlLabel, Radio, makeStyles } from \"@material-ui/core\"\r\nimport { useState } from \"react\";\r\nimport ButtonCustom from \"./Button\"\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'white',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n        borderRadius: 3,\r\n        display: 'flex',\r\n        padding: 100,\r\n        marginTop: 20,\r\n        boxShadow: '0 3px 5px 2px rgba(189, 225, 255, 1)',\r\n        borderRadius: '0% 100% 0% 100% / 77% 0% 100% 23% '\r\n    },\r\n    btn: {\r\n        margin: 10\r\n    },\r\n    error: {\r\n        color: red['A400'],\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default function FormRole(props) {\r\n    const [name, setName] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    function handleSubmit(e) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8080/roles',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                name: name\r\n            }\r\n        }).then(response => {\r\n            console.log(response.data);\r\n            history.push('/roles');\r\n        }).catch(error => {\r\n            if (error.response?.status === 400) {\r\n                let e = document.querySelector('#error');\r\n                e.innerText = 'This field is required';\r\n            }\r\n            console.log(error);\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    function handleChange(e) {\r\n        if (e.target.name === 'name') {\r\n            setName(e.target.value);\r\n            if (e.target.value !== '') {\r\n                let e = document.querySelector('#error');\r\n                e.innerText = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <form onSubmit={handleSubmit}>\r\n            <Typography style={{color:'black'}} variant='h4'>CREATE ROLE</Typography>\r\n            <div>\r\n            <TextField required id=\"standard-required\" value={name} onChange={handleChange} label=\"Name\" name=\"name\" />\r\n            <p id=\"error\" className={classes.error}></p>\r\n            </div>\r\n            <ButtonCustom style={{margin: '10px 0px 0px 0px'}} title={props.type} type='submit' color=\"primary\" />\r\n            <ButtonCustom style={{margin: '10px 0px 0px 10px'}} onClick={handleGoBack} title='Go Back' \r\n            color=\"darkPrimary\" />\r\n        </form>\r\n        <img style={{height: '400px', marginLeft: '300px'}} src={process.env.PUBLIC_URL + '/images/gui1.svg'} />\r\n        </div>\r\n    )\r\n}","import { Button } from \"@material-ui/core\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport swal from \"sweetalert\";\r\nimport { useState } from \"react\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\n\r\nexport default function UploadFile (props) {\r\n    const [image, setImage] = useState('');\r\n\r\n    function fileChange(event) {\r\n        let png = event.target.value.toLowerCase().endsWith('.png');\r\n        let jpg = event.target.value.toLowerCase().endsWith('.jpg');\r\n        let jpeg = event.target.value.toLowerCase().endsWith('.jpeg');\r\n        let svg = event.target.value.toLowerCase().endsWith('.svg');\r\n        if (png || jpg || jpeg || svg)    {\r\n            const src = URL.createObjectURL(document.getElementById('update-photo').files[0]);\r\n            let img = document.getElementById(\"img-container\");\r\n            img.style.display = 'block';\r\n            setImage(src);\r\n            img.onload = () => {\r\n                URL.revokeObjectURL(this.src);\r\n            }\r\n        }\r\n        else {\r\n            swal('Pls choose a file with valid extension', '', 'warning');\r\n            event.target.value = '';\r\n        }\r\n    }\r\n\r\n    function handleClose() {\r\n        let file = document.getElementById(\"update-photo\");\r\n        file.value = '';\r\n        setImage('');\r\n        let img = document.getElementById(\"img-container\");\r\n        img.style.display = 'none';\r\n    }\r\n\r\n    return (\r\n        <div style={props.style}>\r\n        <label htmlFor=\"update-photo\">\r\n            <input id=\"update-photo\" name=\"file\" onChange={fileChange} style={{ display: 'none' }} type=\"file\" />\r\n            <Button startIcon={<CloudUpload />} style={{background:'#e1f5fe', color:'black'}} variant=\"contained\" component=\"span\">\r\n                Upload photo\r\n            </Button>\r\n        </label>\r\n        <div id=\"img-container\" style={{display: 'none'}}>\r\n            <img id=\"img\" src={image} width='150' height='150' style={{marginTop: '20px'}} />\r\n            <CancelIcon style={{cursor: 'pointer'}} onClick={handleClose} />\r\n        </div>\r\n        </div>\r\n    )\r\n}","import { Grid, Card, CardActionArea, CardMedia, Typography, CardContent, \r\n    createTheme, ThemeProvider, TextField, FormControl, Button } from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router\"\r\nimport API, { endpoints } from \"../../../API\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport swal from \"sweetalert\";\r\nimport UploadFile from \"../../../components/UploadFile\";\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 200,\r\n    },\r\n    pagination: {\r\n        marginTop: 30\r\n    },\r\n    info: {\r\n        marginTop: 30,\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        // fontWeight: 'bold',\r\n        '& p': {\r\n            borderRadius: 10,\r\n            background: '#e1f5fe',\r\n            // boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n            color: 'black',\r\n            width: '50%',\r\n            margin: '0 auto',\r\n            marginBottom: 15,\r\n            padding: 10,\r\n        }\r\n    },\r\n    form: {\r\n        background: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '170px !important'        \r\n    },\r\n    formLoading : {\r\n        background: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '170px !important',  \r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    }\r\n});\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function RoleDetails(props) {\r\n    const classes = useStyles();\r\n    const { roleId } = useParams();\r\n    const history = useHistory();\r\n    const [role, setRole] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [formLoading, setFormLoading] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const context = useContext(AuthContext);\r\n    let tempRole = {};\r\n\r\n    function getRole() {\r\n        API.get(`${endpoints['roles']}/${roleId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(res => {\r\n            Object.assign(tempRole, res.data);\r\n            getAccountsOfRole(window.location.search).then(res => {\r\n                Object.assign(tempRole, {\r\n                    accounts: res.data.content,\r\n                    totalElements: res.data.totalElements,\r\n                    totalPages: res.data.totalPages,\r\n                    currentPage: parseInt(res.data.number) + 1\r\n                });\r\n                setRole(tempRole);\r\n                setLoading(false);\r\n            })\r\n        }).catch(error => {\r\n            if (error.response?.status === 404) {\r\n                alert(error.response?.data?.message);\r\n            } else if (error.response?.status === 401) {\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function getAccountsOfRole(page=\"?p=1\") {\r\n        return API.get(`${endpoints['roles']}/${roleId}/${endpoints['accounts']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRole();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    function handlePageChange(event, value) {\r\n        history.push(`/roles/${roleId}?p=${value}`);\r\n        setPage(value);\r\n        getRole();\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let myForm = document.getElementById('formAccount');\r\n        let formData = new FormData(myForm);\r\n        \r\n        setFormLoading(true);\r\n\r\n        API(`${endpoints['roles']}/${roleId}/${endpoints['accounts']}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-type': 'multipart/form-data'\r\n            },\r\n            data: formData\r\n        }).then(res => {\r\n            getRole();\r\n            setFormLoading(false);\r\n        }).catch(error => {\r\n            console.log(error.response);\r\n            if (error.response.status === 401)\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n\r\n            if (error.response?.data?.message) {\r\n                swal(error.response?.data?.message, '', 'error');\r\n            } else if (Array.isArray(error.response?.data)) {\r\n                for (let i = 0; i < error.response.data.length; i++) {\r\n                    swal('', error.response.data[i].message, 'warning');\r\n                }\r\n            }\r\n            setFormLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        if (event.target.name === 'username') {\r\n            setUsername(event.target.value);\r\n        } else if (event.target.name === 'password') {\r\n            setPassword(event.target.value);\r\n        }\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Grid container spacing={4} style={{ display: 'flex' }}>\r\n                    {loading ? (\r\n                        <img src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n                    ) : (\r\n                        <Grid container item xs={6} spacing={4}>\r\n                            <Grid className={classes.info} item md={12}>\r\n                                <p>Role name: {role?.name}</p>\r\n                                <p>Total accounts: {role?.totalElements}</p>\r\n                            </Grid>\r\n                            {role?.accounts?.map(a => (\r\n                                <Grid key={a.id} item xs={4}>\r\n                                    <Card onClick={() => history.push(`/accounts/${a.id}`)} className={classes.card}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image={a.image}\r\n                                                title=\"Contemplative Reptile\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {a.username}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    )}\r\n                    <Grid item xs={6} className={formLoading ? classes.formLoading : classes.form}>\r\n                        <h3>ADD ACCOUNT</h3>\r\n                        <form id='formAccount' onSubmit={handleSubmit}>\r\n                            <FormControl>\r\n                                <TextField required id=\"standard-required\" value={username}\r\n                                    label=\"Username\" name=\"username\" onChange={handleChange} />\r\n                                <p className={classes.error}></p>\r\n                            </FormControl> <br />\r\n                            <FormControl>\r\n                                <TextField required id=\"standard-required\" type=\"password\"\r\n                                    value={password} label=\"Password\" name=\"password\" onChange={handleChange} />\r\n                                <p className={classes.error}></p>\r\n                            </FormControl> <br />\r\n                            <FormControl>\r\n                                <UploadFile style={{margin: '0px 0px 20px 0px'}} />\r\n                            </FormControl> <br />\r\n                            <ButtonCustom style={{ margin: '10px 0px 0px 0px' }} title=\"Create\" type='submit'\r\n                                color=\"darkPrimary\" />\r\n                            <ButtonCustom style={{ margin: '10px 0px 0px 10px' }} onClick={handleGoBack}\r\n                                title='Go Back' color=\"darkSecondary\" />\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n                <ThemeProvider theme={theme}>\r\n                    <Pagination color=\"primary\" className={classes.pagination}\r\n                        page={page} count={role?.totalPages}\r\n                        showFirstButton showLastButton onChange={handlePageChange} />\r\n                </ThemeProvider>\r\n            </>\r\n        </div>\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\"\r\nimport API, { endpoints } from \"../../../API\";\r\nimport { Grid, Card, CardActionArea, CardMedia, CardContent,Typography, \r\n    ThemeProvider, createTheme, makeStyles, Divider, TextField, Select, MenuItem } from '@material-ui/core';\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport { Pagination, usePagination } from \"@material-ui/lab\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { useHistory } from \"react-router\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 200,\r\n    },\r\n    pagination: {\r\n        marginTop: 30\r\n    },\r\n    info: {\r\n        marginTop: 30,\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        '& p': {\r\n            borderRadius: 5,\r\n            background: '#e1f5fe',\r\n            color: 'black',\r\n            width: '50%',\r\n            margin: '0 auto',\r\n            marginBottom: 15,\r\n            padding: 10,\r\n        }\r\n    },\r\n    action: {\r\n        background: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '180px !important'        \r\n    },\r\n    roleInfo: {\r\n        position: 'relative',\r\n        background: '#e1f5fe',\r\n        color: 'black',\r\n        padding: '30px 10px 10px 10px',\r\n        height: 150,\r\n        margin: '0 auto',\r\n        fontSize: 16,\r\n        cursor: 'pointer'\r\n    },\r\n    form: {\r\n        position: 'absolute',\r\n        top: 80,\r\n        marginLeft: 22\r\n    },\r\n});\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function Accounts() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [filter, setFilter] = useState({\r\n        username: '',\r\n        role: '0',\r\n        hasInfo: ''\r\n    });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const context = useContext(AuthContext);\r\n    let promises = [];\r\n\r\n    useEffect(() => {\r\n        getRoles();\r\n        getAccounts(window.location.search, filter);\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    function getAccounts(page=\"?p=1\", {username, role, hasInfo}) {\r\n        setLoading(true);\r\n\r\n        let apiURL;\r\n        if (username === \"\" && role === \"0\" && hasInfo === \"\")\r\n            apiURL = `${endpoints['accounts']}${page}`;\r\n        else if (role !== \"0\" && username !== \"\" && hasInfo !== \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&role=${role}&username=${username}&hasInfo=${hasInfo}`;\r\n        else if (role !== \"0\" && username === \"\" && hasInfo === \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&role=${role}`;\r\n        else if (role !== \"0\" && username !== \"\" && hasInfo === \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&role=${role}&username=${username}`;\r\n        else if (role === \"0\" && username !== \"\" && hasInfo === \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&username=${username}`;\r\n        else if (role === \"0\" && username !== \"\" && hasInfo !== \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&username=${username}&hasInfo=${hasInfo}`;\r\n        else if (role === \"0\" && username === \"\" && hasInfo !== \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&hasInfo=${hasInfo}`;\r\n        else if (role !== \"0\" && username === \"\" && hasInfo !== \"\")\r\n            apiURL = `${endpoints['accounts']}${page}&role=${role}&hasInfo=${hasInfo}`;\r\n\r\n        API.get(apiURL, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setFilter({...filter, username: username});\r\n            setAccounts(res.data.content);\r\n            setLoading(false);\r\n            setPage(res.data.number + 1);\r\n            setTotalPages(res.data.totalPages);\r\n        })\r\n        .catch(err => {\r\n            if (err.response?.status === 401) {\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n            console.log(err.response);\r\n        })\r\n    }\r\n\r\n    function getRoles() {\r\n        API.get(`${endpoints['roles']}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            let result = res.data.content;\r\n            for (let i = 0; i < result.length; i++) {\r\n                promises.push(getAccountsOfRole(result[i].id)\r\n                .then(value => {\r\n                    Object.assign(result[i], {totalAccounts: value})\r\n                }));\r\n            }\r\n\r\n            Promise.all(promises).then(() => setRoles(result));\r\n        }).catch(err => {\r\n            if (err.response.status === 401) \r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n        })\r\n    }\r\n\r\n    async function getAccountsOfRole(roleId) {\r\n        return API.get(`${endpoints['roles']}/${roleId}/${endpoints['accounts']}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => res.data.totalElements);\r\n    }\r\n\r\n    function handlePageChange(event, value) {\r\n        history.push(`/accounts?p=${value}`);\r\n        setPage(value);\r\n        if (filter) {\r\n            getAccounts(\"?p=\" + value, filter)\r\n        }\r\n        else {\r\n            getAccounts(\"?p=\" + value);\r\n        }\r\n    }\r\n\r\n    function handleClick(roleId) {\r\n        history.push(`/roles/${roleId}`);\r\n        context.setPage('/roles');\r\n    }\r\n\r\n    function handleFilter(event) {\r\n        let temp = filter;\r\n        temp[event.target.name] = event.target.value;\r\n        setFilter(temp);\r\n        getAccounts(`?p=${page}`, filter);\r\n    }\r\n\r\n    return (\r\n        <div>   \r\n            <>\r\n                <Grid container spacing={4} style={{ display: 'flex' }}>\r\n                    {loading ? (\r\n                        <img src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n                    ) : (\r\n                        <Grid container item xs={6} spacing={4}>\r\n                            <Grid className={classes.info} item md={12}>\r\n                                <p>LIST ACCOUNT</p>\r\n                            </Grid>\r\n                            {accounts?.map(a => (\r\n                                <Grid key={a.id} item xs={4}>\r\n                                    <Card onClick={() => history.push(`/accounts/${a.id}`)} className={classes.card}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image={a.image}\r\n                                                title=\"Contemplative Reptile\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                    {a.username}\r\n                                                </Typography>\r\n                                                {a.active ? <CheckCircleIcon /> : <CancelIcon />}\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    )}\r\n                    <Grid container item xs={6} className={classes.action}>\r\n                        {roles.length > 0 ? (\r\n                            <form className={classes.form}>\r\n                                <TextField variant=\"outlined\" onChange={handleFilter} required id=\"standard-required\"\r\n                                label=\"Username\" value={filter.username} name=\"username\" />\r\n                                <Select style={{width: 180}} name=\"role\" variant=\"outlined\"\r\n                                onChange={handleFilter}\r\n                                value={filter.role}>\r\n                                    <MenuItem value={0}>Choose Role</MenuItem>\r\n                                    {roles && roles.map(r => <MenuItem key={r.id} value={r.id}>{r.name}</MenuItem>)}\r\n                                </Select>\r\n                                <Select style={{width: 180}} name=\"hasInfo\" variant=\"outlined\"\r\n                                onChange={handleFilter}\r\n                                value={filter.hasInfo}>\r\n                                    <MenuItem value={true}>Has info</MenuItem>\r\n                                    <MenuItem value={false}>No info</MenuItem>\r\n                                </Select>\r\n                            </form>\r\n                        ) : ''}\r\n                        {roles && roles.map((r, idx) => {\r\n                            return (\r\n                                <Grid onClick={() => handleClick(r.id)} item xs={5} key={r.id} className={classes.roleInfo}>\r\n                                    <p>Role name: {r.name}</p>\r\n                                    <p>Total accounts: {r.totalAccounts}</p>\r\n                                </Grid>\r\n                            )\r\n                        })}\r\n                       \r\n                    </Grid>\r\n                </Grid>\r\n                <ThemeProvider theme={theme}>\r\n                    <Pagination color=\"primary\" className={classes.pagination}\r\n                        page={page} count={totalPages}\r\n                        showFirstButton showLastButton onChange={handlePageChange} />\r\n                </ThemeProvider>\r\n            </>\r\n        </div>\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport API, { endpoints } from '../../../API';\r\nimport { url } from '../../../URL';\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CancelOutlined } from '@material-ui/icons';\r\nimport { Button } from \"@material-ui/core\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst colorTrue = \"#b3e5fc\";\r\nconst colorFalse = \"#afc2cb\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        width: '100%',\r\n        marginTop: 50,\r\n        background: 'white'\r\n    },\r\n    imageContainer: {\r\n        position: 'absolute',\r\n        top: 130,\r\n        left: 350,\r\n        width: '60%',\r\n    },\r\n    updateLoading: {\r\n        height: 400,\r\n        width: '100%',\r\n        marginTop: 50,\r\n        background: 'white',\r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    },\r\n    imageScale: {\r\n        width: '100%',\r\n        height: '520px'\r\n    },\r\n    btnClose: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        width: 120\r\n    },\r\n    btnUpload: {\r\n        position: 'absolute',\r\n        top: 30,\r\n        right: 0,\r\n        width: 120\r\n    }\r\n})\r\n\r\nexport default function Medicines() {\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [updateLoading, setUpdateLoading] = useState(false);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [currentImageID, setCurrentImageID] = useState(0);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const context = useContext(AuthContext);\r\n\r\n\r\n    async function getMedicines(page = \"?p=1\") {\r\n        setLoading(true);\r\n\r\n        const categoryIds = await API.get(`${endpoints['medicines']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => {\r\n            setMedicines(response.data.content);\r\n            setTotalElements(response.data.totalElements);\r\n            setCurrentPage(response.data.number);\r\n            setLoading(false);\r\n\r\n            return response.data.content.map(m => m.category_id);\r\n        }).catch(err => console.log(err))\r\n\r\n        let promises = [];\r\n        let categoryArr = [];\r\n        for (let i = 0; i < categoryIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['categories']}/${categoryIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => categoryArr.push(res.data))\r\n                .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => setCategories(categoryArr));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMedicines();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    const handleFileChange = async (event, id) => {\r\n        let png = event.target.value.toLowerCase().endsWith('.png');\r\n        let jpg = event.target.value.toLowerCase().endsWith('.jpg');\r\n        let jpeg = event.target.value.toLowerCase().endsWith('.jpeg');\r\n        let svg = event.target.value.toLowerCase().endsWith('.svg');\r\n        if (png || jpg || jpeg || svg) {\r\n            setUpdateLoading(true);\r\n\r\n            const file = document.getElementById('update-photo').files[0];\r\n\r\n            const data = await API.get(`${endpoints['medicines']}/${id}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => {\r\n                let formData = new FormData();\r\n                let obj = res.data;\r\n                obj['file'] = file;\r\n                formData.append('id', obj.id);\r\n                formData.append('name', obj.name);\r\n                formData.append('description', obj.description);\r\n                formData.append('price', obj.price);\r\n                formData.append('unit', obj.unit);\r\n                formData.append('image', obj.image);\r\n                formData.append('active', obj.active);\r\n                formData.append('file', obj.file);\r\n\r\n\r\n                let imgScale = document.getElementById('image-container');\r\n                imgScale.style.display = \"none\"\r\n\r\n                return formData;\r\n            }).catch(err => {\r\n                if (err.response.status === 401)\r\n                    if (window.confirm('Login expired! Please login again.')) {\r\n                        localStorage.clear();\r\n                        history.push(url['login']);\r\n                    }\r\n            })\r\n\r\n            await API(`${endpoints['medicines']}/${id}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-type': 'multipart/form-data'\r\n                },\r\n                data: data\r\n            }).then(res => {\r\n                console.log(res)\r\n                const src = res.data.image\r\n                let img = document.getElementById(`image${id}`);\r\n                img.src = src;\r\n\r\n                setUpdateLoading(false);\r\n                getMedicines(\"?p=\" + (currentPage + 1));\r\n            })\r\n                .catch(err => {\r\n                    if (err.response.status === 401)\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                });\r\n\r\n        }\r\n        else {\r\n            swal('Pls choose a file with valid extension', '', 'warning');\r\n            event.target.value = '';\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 150\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 300,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 300,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'price',\r\n            headerName: 'Price',\r\n            width: 200,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'unit',\r\n            headerName: 'Unit',\r\n            width: 150,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'active',\r\n            headerName: 'Active',\r\n            width: 200,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN',\r\n            type: 'boolean',\r\n            renderCell: (params) => {\r\n                if (params.getValue(params.id, 'active') === true)\r\n                    return (\r\n                        <CheckCircleIcon style={{ fill: colorTrue }} />\r\n                    )\r\n                else if (params.getValue(params.id, 'active') === false)\r\n                    return (\r\n                        <CancelIcon style={{ fill: colorFalse }} />\r\n                    )\r\n            }\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Image',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                const img = params.getValue(params.id, 'image');\r\n                let id = params.getValue(params.id, 'id');\r\n                return (\r\n                    <>\r\n                        <img id={'image' + id} onClick={() => {\r\n                            let imgScale = document.getElementById('img-scale');\r\n                            let imgContainer = document.getElementById('image-container');\r\n                            imgScale.src = img;\r\n                            imgContainer.style.display = 'block';\r\n                            setCurrentImageID(id);\r\n                        }} style={{\r\n                            width: '70%',\r\n                            height: '100%',\r\n                            padding: '5px'\r\n                        }} src={img} alt='No image' />\r\n\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'unitInStock',\r\n            headerName: 'Unit in stock',\r\n            width: 200,\r\n            editable: context.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'category_id',\r\n            headerName: 'Category',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const category_id = params.getValue(params.id, 'category_id');\r\n                const category = categories.filter(c => c.id === category_id)[0];\r\n\r\n                return (\r\n                    <p>{category?.name}</p>\r\n                )\r\n            }\r\n        },\r\n        context.currentAuth?.role === 'ROLE_ADMIN' ?\r\n            {\r\n                field: 'action',\r\n                headerName: ' ',\r\n                width: 150,\r\n                align: 'center',\r\n                renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                    const id = params.getValue(params.id, \"id\");\r\n                    swal({\r\n                        title: \"Are you sure to delete?\",\r\n                        icon: \"warning\",\r\n                        buttons: {\r\n                            cancel: 'Cancel',\r\n                            inactive: {\r\n                                text: 'Inactivate',\r\n                                value: 'inactive'\r\n                            },\r\n                            delete: {\r\n                                text: 'Delete anyway',\r\n                                value: 'delete'\r\n                            }\r\n                        }\r\n                    }).then((value) => {\r\n                        switch (value) {\r\n                            case \"inactive\":\r\n                                let formData = new FormData();\r\n                                formData.append('name', params.getValue(params.id, \"name\"));\r\n                                formData.append('description', params.getValue(params.id, \"description\"));\r\n                                formData.append('price', params.getValue(params.id, \"price\"));\r\n                                formData.append('unit', params.getValue(params.id, \"unit\"));\r\n                                formData.append('image', params.getValue(params.id, \"image\"));\r\n                                formData.append('active', false);\r\n                                formData.append('unitInStock', params.getValue(params.id, \"unitInStock\"));\r\n\r\n                                return API(`${endpoints['medicines']}/${id}`, {\r\n                                    method: 'put',\r\n                                    headers: {\r\n                                        \"Authorization\": \"Bearer \" + localStorage.getItem('token'),\r\n                                        \"Content-type\": \"multipart/form-data\"\r\n                                    },\r\n                                    data: formData\r\n                                })\r\n                            case \"delete\":\r\n                                return API(`${endpoints['medicines']}/${id}`, {\r\n                                    method: 'delete',\r\n                                    headers: {\r\n                                        \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                    }\r\n                                })\r\n                        }\r\n                    }).then(response => {\r\n                        if (response?.status === 200) {\r\n                            if (response?.config?.method === 'put') {\r\n                                swal(\"Inactivated\", \"\", \"success\");\r\n                                getMedicines(\"?p=\" + (currentPage + 1));\r\n                            } else if (response?.config?.method === 'delete') {\r\n                                swal(\"Deleted\", \"\", \"success\");\r\n                                getMedicines(\"?p=\" + (currentPage + 1))\r\n                            }\r\n                        }\r\n                    }).catch(error => {\r\n                        console.log(error.response);\r\n                        if (error?.response?.status === 401) {\r\n                            if (window.confirm('Login expired! Please login again.')) {\r\n                                localStorage.clear();\r\n                                history.push(url['login']);\r\n                            }\r\n                        }\r\n                    })\r\n                }} color='primary' title='Delete' />)\r\n            } : ''\r\n    ]\r\n\r\n    function handlePageChange(newPage) {\r\n        getMedicines(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n\r\n    const handleCellEditCommit = async ({ id, field, value }) => {\r\n        const data = await API.get(`${endpoints['medicines']}/${id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            let formData = new FormData();\r\n            let obj = res.data;\r\n            obj[field] = value;\r\n            formData.append('id', obj.id);\r\n            formData.append('name', obj.name);\r\n            formData.append('description', obj.description);\r\n            formData.append('price', obj.price);\r\n            formData.append('unit', obj.unit);\r\n            formData.append('image', obj.image);\r\n            formData.append('active', obj.active);\r\n            formData.append('unitInStock', obj.unitInStock);\r\n\r\n            return formData;\r\n        })\r\n\r\n        await API(`${endpoints['medicines']}/${id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-type': 'multipart/form-data'\r\n            },\r\n            data: data\r\n        }).then(res => console.log(res))\r\n            .catch(err => alert(`${field} - ${err.response.data[0].message}`))\r\n    }\r\n\r\n    function handleClose() {\r\n        let imgScale = document.getElementById('img-scale');\r\n        let imgContainer = document.getElementById('image-container');\r\n        imgScale.src = \"\";\r\n        imgContainer.style.display = 'none';\r\n    }\r\n\r\n    return (\r\n        <div className={updateLoading ? classes.updateLoading : classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST MEDICINE\" rows={medicines} columns={columns} pageSize={5}\r\n                    handleCellEditCommit={handleCellEditCommit}\r\n                    createURL={context.currentAuth?.role === \"ROLE_ADMIN\" ? \"/medicines/create\" : \"\"}\r\n                    btnTitle={context.currentAuth?.role === \"ROLE_ADMIN\" ? \"Create\" : \"\"}\r\n                    rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} server={true} />\r\n            )}\r\n            <div id=\"image-container\" className={classes.imageContainer}\r\n                style={{ display: 'none' }}>\r\n                <img id=\"img-scale\" className={classes.imageScale} src=\"\" />\r\n                <div className={classes.btnClose}>\r\n                    <Button onClick={handleClose}\r\n                        style={{ width: '100%', fontSize: 10 }} variant=\"contained\"\r\n                        color=\"secondary\">Close</Button>\r\n                </div>\r\n                {context.currentAuth?.role === 'ROLE_ADMIN' ? (\r\n                    <div className={classes.btnUpload}>\r\n                        <label style={{ width: '100%' }} htmlFor=\"update-photo\">\r\n                            <input id=\"update-photo\" name=\"file\" onClick={(event) => event.target.click()}\r\n                                onChange={(event) => handleFileChange(event, currentImageID)}\r\n                                style={{ display: 'none' }} type=\"file\" />\r\n                            <Button style={{ width: '100%', fontSize: 10 }}\r\n                                color=\"primary\" variant=\"contained\" component=\"span\">\r\n                                Upload photo\r\n                            </Button>\r\n                        </label>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Button, Dialog, DialogContent, DialogContentText, DialogTitle, IconButton, makeStyles, MenuItem, Tooltip } from \"@material-ui/core\"\r\nimport { TextField, Typography } from \"@material-ui/core\";\r\nimport ButtonCustom from \"./Button\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport UploadFile from \"./UploadFile\";\r\nimport API, { endpoints } from \"../API\";\r\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useEffect } from \"react\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport DataTable from \"./DataTable\";\r\nimport swal from \"sweetalert\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'white',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n        borderRadius: 3,\r\n        display: 'flex',\r\n        padding: 100,\r\n        marginTop: 20,\r\n        boxShadow: '0 3px 5px 2px rgba(189, 225, 255, 1)',\r\n        borderRadius: '0% 100% 0% 100% / 77% 0% 100% 23% '\r\n    },\r\n    btn: {\r\n        margin: 10\r\n    },\r\n    error: {\r\n        color: red['A400'],\r\n        fontWeight: 'bold'\r\n    },\r\n    loading: {\r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        background: 'linear-gradient(45deg, #81d4fa 20%, #8c9eff 90%)',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n        borderRadius: 3,\r\n        display: 'flex',\r\n        padding: 100,\r\n        marginTop: 20,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        borderRadius: '0% 100% 0% 100% / 77% 0% 100% 23% '\r\n    }\r\n})\r\n\r\nexport default function FormMedicine(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [unit, setUnit] = useState('');\r\n    const [unitInStock, setUnitInStock] = useState(0);\r\n    const [category, setCategory] = useState();\r\n    const [categories, setCategories] = useState();\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isCategoryShow, setCategoryShow] = useState(false);\r\n    const [infoC, setInfoC] = useState('');\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 350\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 500\r\n        }\r\n    ]\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!category) {\r\n            swal('Please choose a category', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        let myForm = document.querySelector('#form-medicine');\r\n        let formData = new FormData(myForm);\r\n\r\n        setLoading(true);\r\n\r\n        API(`${endpoints['medicines']}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-type': 'multipart/form-data'\r\n            },\r\n            data: formData\r\n        }).then(res => {\r\n            console.log(res);\r\n            setLoading(false);\r\n            history.push('/medicines');\r\n        })\r\n            .catch(err => {\r\n                if (err.response.status === 400) {\r\n                    alert('Please enter valid values');\r\n                    setLoading(false);\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        if (field === 'name') {\r\n            setName(value);\r\n        } else if (field === 'description') {\r\n            setDescription(value);\r\n        } else if (field === 'price') {\r\n            setPrice(value);\r\n        } else if (field === 'unit') {\r\n            setUnit(value);\r\n        } else if (field === 'unitInStock') {\r\n            setUnitInStock(value);\r\n        }\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    function getCategories(page = \"?p=1\") {\r\n        const number = \"n=7\";\r\n\r\n        API.get(`${endpoints['categories']}${page}&${number}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setCategories(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            setCategoryShow(true);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getCategories(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    function handleSelectionChange(newSelection) {\r\n        API.get(`${endpoints['categories']}/${newSelection}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setCategory(res.data))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handleSave() {\r\n        if (!category) {\r\n            swal('Please choose a category', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        setInfoC(`Category: ${category.name}`);\r\n        setCategoryShow(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <div className={loading ? classes.loading : classes.root}>\r\n            <ValidatorForm id=\"form-medicine\" onSubmit={handleSubmit}>\r\n                <Typography style={{ color: 'black' }} variant='h4'>CREATE MEDICINE</Typography>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={name}\r\n                        onChange={handleChange} label=\"Name\" name=\"name\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={description}\r\n                        onChange={handleChange} label=\"Description\" name=\"description\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={price}\r\n                        onChange={handleChange} label=\"Price\" name=\"price\" type=\"number\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={unit}\r\n                        onChange={handleChange} label=\"Unit\" name=\"unit\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={unitInStock}\r\n                        onChange={handleChange} label=\"Unit In Stock\" name=\"unitInStock\" type=\"number\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        onClick={() => getCategories()}\r\n                        variant=\"outlined\" color=\"primary\" style={{ minWidth: 192 }}\r\n                    >\r\n                        Choose category\r\n                    </Button>\r\n                    {\r\n                        category ? (\r\n                            <Tooltip color=\"primary\" arrow title={infoC}>\r\n                                <InfoIcon />\r\n                            </Tooltip>\r\n                        ) : ''\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <UploadFile style={{ margin: '25px 0px 25px 10px' }} />\r\n                </div>\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 0px' }}\r\n                    title={props.type} type='submit' color=\"darkPrimary\" />\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 10px' }}\r\n                    onClick={handleGoBack} title='Go Back' color=\"darkSecondary\" />\r\n            </ValidatorForm>\r\n            <img style={{ height: '400px', marginLeft: '205px' }} src={process.env.PUBLIC_URL + '/images/gui4.svg'} />\r\n\r\n            <Dialog fullScreen open={isCategoryShow}>\r\n                <DialogTitle>\r\n                    <IconButton edge=\"start\"\r\n                        onClick={() => {\r\n                            setCategoryShow(false);\r\n                            setCategory();\r\n                        }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <IconButton edge=\"end\" style={{ position: 'absolute', right: 15 }} onClick={handleSave}>\r\n                        <SaveAltIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <DataTable header=\"\" rows={categories} server={true}\r\n                            columns={columns} pageSize={7} rowCount={totalElements}\r\n                            createURL=\"\" handleSelectionChange={handleSelectionChange}\r\n                            handlePageChange={handlePageChange} currentPage={currentPage}\r\n                            btnTitle=\"\" />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport swal from \"sweetalert\";\r\nimport { url } from \"../../../URL\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst colorTrue = \"#b3e5fc\";\r\nconst colorFalse = \"#afc2cb\";\r\n\r\nexport default function Shifts(props) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [shifts, setShifts] = useState([]);\r\n    const history = useHistory();\r\n    const context = useContext(AuthContext);\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 150\r\n        }, \r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 300,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 500,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'active',\r\n            headerName: 'Active',\r\n            width: 150,\r\n            type: 'boolean',\r\n            editable: true,\r\n            renderCell: (params) => {\r\n                if (params.getValue(params.id, 'active') === true)\r\n                    return (\r\n                        <CheckCircleIcon style={{ fill: colorTrue }} />\r\n                    )\r\n                else if (params.getValue(params.id, 'active') === false)\r\n                    return (\r\n                        <CancelIcon style={{ fill: colorFalse }} />\r\n                    )\r\n            }\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 150,\r\n            align: 'center',\r\n            renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                const id = params.getValue(params.id, \"id\");\r\n                swal({\r\n                    title: \"Are you sure to delete?\",\r\n                    icon: \"warning\",\r\n                    buttons: {\r\n                        cancel: 'Cancel',\r\n                        inactive: {\r\n                            text: 'Inactivate',\r\n                            value: 'inactive'\r\n                        },\r\n                        delete: {\r\n                            text: 'Delete anyway',\r\n                            value: 'delete'\r\n                        }\r\n                    }\r\n                }).then((value) => {\r\n                    switch (value) {\r\n                        case \"inactive\":\r\n                            let data = {\r\n                                name: params.getValue(params.id, 'name'),\r\n                                description: params.getValue(params.id, 'description'),\r\n                                active: false\r\n                            }\r\n                            return API(`${endpoints['shifts']}/${id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                },\r\n                                data: data\r\n                            })\r\n                        case \"delete\":\r\n                            return API(`${endpoints['shifts']}/${id}`, {\r\n                                method: 'delete',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                }\r\n                            })\r\n                        default:\r\n                            return\r\n                    }\r\n                }).then(response => {\r\n                    if (response?.status === 200) {\r\n                        if (response?.config?.method === 'put') {\r\n                            swal(\"Inactivated\", \"\", \"success\");\r\n                            getShifts();\r\n                        } else if (response?.config?.method === 'delete') {\r\n                            swal(\"Deleted\", \"\", \"success\");\r\n                            getShifts();\r\n                        }\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.response);\r\n                    if (error?.response?.status === 401) {\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                    }\r\n                })\r\n            }} color='primary' title='Delete' />)\r\n        }\r\n    ]\r\n\r\n    function handleCellEditCommit(params) {\r\n        let data = {\r\n            name: params.getValue(params.id, 'name'),\r\n            description: params.getValue(params.id, 'description'),\r\n            active: params.getValue(params.id, 'active')\r\n        }\r\n        data[params.field] = params.value;\r\n        API(`${endpoints['shifts']}/${params.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: data\r\n        }).then(res => console.log(res))\r\n        .catch(err => {\r\n            if (err.response.status === 401)\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n        })\r\n    }\r\n\r\n    function getShifts() {\r\n        setLoading(true);\r\n\r\n        API(`${endpoints['shifts']}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setShifts(res.data.content);\r\n            setLoading(false);\r\n        }).catch(err => console.log(err.response));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getShifts();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ height: 400, width: '100%', marginTop: 50, background: 'white' }}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST SHIFT\" rows={shifts} columns={columns} pageSize={5}\r\n                    handleCellEditCommit={handleCellEditCommit} createURL=\"/shifts/create\"\r\n                    btnTitle=\"Create\" />\r\n            )}\r\n        </div>\r\n    )\r\n}","import { makeStyles, Typography, TextField } from \"@material-ui/core\"\r\nimport { red } from \"@material-ui/core/colors\"\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport API, { endpoints } from \"../API\";\r\nimport { url } from \"../URL\";\r\nimport ButtonCustom from \"./Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'white',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n        borderRadius: 3,\r\n        display: 'flex',\r\n        padding: 100,\r\n        marginTop: 20,\r\n        boxShadow: '0 3px 5px 2px rgba(189, 225, 255, 1)',\r\n        borderRadius: '0% 100% 0% 100% / 77% 0% 100% 23% '\r\n    },\r\n    btn: {\r\n        margin: 10\r\n    },\r\n    error: {\r\n        color: red['A400'],\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default function FormShift(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        API(`${endpoints['shifts']}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                name: name,\r\n                description: description\r\n            }\r\n        }).then(res => {\r\n            history.push(\"/shifts\");\r\n        }).catch(err => {\r\n            console.log(err.response);\r\n            if (err.response.status === 401) {\r\n                if (window.confirm('Login expired! Please login again')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n            else if (err.response.status === 400) {\r\n                alert('Please enter valid values');\r\n            }\r\n        })\r\n    }\r\n    \r\n    function handleChange(event) {\r\n        if (event.target.name === 'name') {\r\n            setName(event.target.value);\r\n        } else if (event.target.name === 'description') {\r\n            setDescription(event.target.value);\r\n        }\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form onSubmit={handleSubmit}>\r\n                <Typography style={{color:'black'}} variant='h4'>CREATE SHIFT</Typography>\r\n                <div>\r\n                    <TextField required id=\"standard-required\" onChange={handleChange} value={name} label=\"Name\" \r\n                    name=\"name\" />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextField required id=\"standard-required\" onChange={handleChange} value={description} \r\n                    label=\"Description\" name=\"description\" />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 0px' }} title={props.type} type='submit' \r\n                color=\"darkPrimary\" />\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 10px' }} onClick={handleGoBack} title='Go Back' \r\n                color=\"darkSecondary\" />\r\n            </form>\r\n            <img style={{ height: '400px', marginLeft: '380px' }} src={process.env.PUBLIC_URL + '/images/gui3.svg'} />\r\n        </div>\r\n    )\r\n}","import { FormControl, Grid, makeStyles, MenuItem, TextField, ThemeProvider } from \"@material-ui/core\"\r\nimport ButtonCustom from \"./Button\"\r\nimport { red, blue } from \"@material-ui/core/colors\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { SideBarContext } from \"../pages/management/Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../currentEndpoint\";\r\nimport API, { endpoints } from \"../API\";\r\nimport swal from \"sweetalert\";\r\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport { createTheme } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    error: {\r\n        color: red['A400'],\r\n        fontWeight: 'bold'\r\n    },\r\n    formLoading: {\r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        },\r\n        secondary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function FormInformation(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [information, setInformation] = useState({});\r\n    const [role, setRole] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const [hometown, setHometown] = useState([]);\r\n\r\n    function handleSubmit(event) {\r\n        setLoading(true);\r\n\r\n        const data = {\r\n            firstName: information.firstName,\r\n            lastName: information.lastName,\r\n            gender: information.gender,\r\n            dateOfBirth: selectedDate,\r\n            email: information.email,\r\n            phone: information.phone,\r\n            idCardNumber: information.idCardNumber,\r\n            address: information.address,\r\n            hometown: information.hometown\r\n        };\r\n\r\n        let roleEndpoint = role.name === 'ROLE_ADMIN' ? 'admins' : (role.name === 'ROLE_DOCTOR' ? 'doctors' :\r\n            (role.name === 'ROLE_EMPLOYEE' ? 'employees' : (role.name === 'ROLE_USER' ? 'patients' : '')));\r\n\r\n        if (information.id) {\r\n            API(`${endpoints['accounts']}/${information.account_id}/${roleEndpoint}/${information.id}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: data\r\n            }).then(res => {\r\n                console.log(res);\r\n                setLoading(false);\r\n                swal(\"Success\", \"\", \"success\");\r\n            })\r\n            .catch(err => console.log(err.response))\r\n\r\n           \r\n        }\r\n        else {\r\n            API(`${endpoints['accounts']}/${props.accountId}/${roleEndpoint}`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: data\r\n            }).then(res => {\r\n                setLoading(false);\r\n                swal(\"Success\", \"\", \"success\");\r\n            })\r\n            .catch(err => console.log(err.response));\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const temp = { ...information };\r\n        temp[event.target.name] = event.target.value;\r\n        setInformation(temp);\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    function getHomeTown() {\r\n        axios.get('https://provinces.open-api.vn/api/p/')\r\n        .then(res => setHometown(res.data))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInformation(props.information);\r\n        setRole(props.role);\r\n        setDisabled(props.disabled);\r\n        getHomeTown();\r\n\r\n        ValidatorForm.addValidationRule('isPhoneNumber', (value) => {\r\n            const regex = new RegExp(\"(84|0[3|5|7|8|9])+([0-9]{8})\\\\b\");\r\n            return regex.test(value);\r\n        })\r\n        ValidatorForm.addValidationRule('isCardNumber', (value) => {\r\n            const regex = new RegExp(/^(\\d{9}|\\d{12})$/);\r\n            return regex.test(value);\r\n        })\r\n\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPhoneNumber');\r\n            ValidatorForm.removeValidationRule('isCardNumber');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setInformation(props.information);\r\n        setRole(props.role);\r\n        handleDateChange(props.information ? props.information.dateOfBirth : new Date());\r\n    \r\n        if (disabled) {\r\n            document.querySelector('#formAccount').style.cursor = 'not-allowed';\r\n            let form = document.querySelector('#formAccount');\r\n            Array.from(form.elements).forEach(formElement => formElement.disabled = true);\r\n        }\r\n        else {\r\n            document.querySelector('#formAccount').style.cursor = 'default';\r\n            let form = document.querySelector('#formAccount');\r\n            Array.from(form.elements).forEach(formElement => formElement.disabled = false);\r\n        }\r\n    }, [props.information, props.role, disabled])\r\n\r\n    useEffect(() => {\r\n        setDisabled(props.disabled);\r\n        if (disabled) {\r\n            document.querySelector('#formAccount').style.cursor = 'not-allowed';\r\n            let form = document.querySelector('#formAccount');\r\n            Array.from(form.elements).forEach(formElement => formElement.disabled = true);\r\n        }\r\n        else {\r\n            document.querySelector('#formAccount').style.cursor = 'default';\r\n            let form = document.querySelector('#formAccount');\r\n            Array.from(form.elements).forEach(formElement => formElement.disabled = false);\r\n        }\r\n    }, [props.disabled])\r\n\r\n    return (\r\n        <div className={loading ? classes.formLoading : ''}>\r\n            {props.role?.name === 'ROLE_ADMIN' || props.role?.name === 'ROLE_DOCTOR'\r\n                || props.role?.name === 'ROLE_EMPLOYEE' ? (\r\n                <ValidatorForm id='formAccount' onSubmit={handleSubmit}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <h3>INFORMATION</h3>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"First name *\"\r\n                                onChange={handleChange}\r\n                                name=\"firstName\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.firstName || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Last name *\"\r\n                                onChange={handleChange}\r\n                                name=\"lastName\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.lastName || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Gender *\"\r\n                                onChange={handleChange}\r\n                                name=\"gender\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.gender || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ThemeProvider theme={theme}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker style={{width: 200}} color=\"primary\" \r\n                                        label=\"DOB *\" format=\"dd-MM-yyyy\"\r\n                                            onChange={(date) => handleDateChange(date)}\r\n                                            name=\"dateOfBirth\" value={selectedDate}  />\r\n                                    </MuiPickersUtilsProvider>\r\n                            </ThemeProvider>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Email *\"\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'invalid email']}\r\n                                value={information?.email || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Phone *\"\r\n                                onChange={handleChange}\r\n                                name=\"phone\"\r\n                                validators={['required', 'isPhoneNumber']}\r\n                                errorMessages={['this field is required', 'invalid phone number']}\r\n                                value={information?.phone || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Card number *\"\r\n                                onChange={handleChange}\r\n                                name=\"idCardNumber\"\r\n                                validators={['required', 'isCardNumber']}\r\n                                errorMessages={['this field is required', 'invalid card number']}\r\n                                value={information?.idCardNumber || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Address *\"\r\n                                onChange={handleChange}\r\n                                name=\"address\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.address || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl variant=\"outlined\">\r\n                                <SelectValidator style={{width: 195, textAlign: 'left'}} name=\"hometown\" \r\n                                label=\"Hometown *\" value={information?.hometown || ''} \r\n                                onChange={handleChange} validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                >\r\n                                    {hometown && hometown.map(h => {\r\n                                        return (\r\n                                            <MenuItem value={h.name}>{h.name}</MenuItem>\r\n                                        )\r\n                                    })}\r\n                                </SelectValidator>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <br/>\r\n                    <ButtonCustom style={{ margin: '10px 0px 0px 0px' }} title={information?.id ? 'Save' : 'Create'}\r\n                        type='submit' color=\"darkPrimary\" />\r\n                    <ButtonCustom style={{ margin: '10px 0px 0px 10px' }} onClick={handleGoBack}\r\n                        title='Go Back' color=\"darkSecondary\" />\r\n                </ValidatorForm>\r\n            ) : (props.role?.name === 'ROLE_USER' ? (\r\n                <ValidatorForm id='formAccount' onSubmit={handleSubmit}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <h3>INFORMATION</h3>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"First name *\"\r\n                                onChange={handleChange}\r\n                                name=\"firstName\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.firstName || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Last name *\"\r\n                                onChange={handleChange}\r\n                                name=\"lastName\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.lastName || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Gender *\"\r\n                                onChange={handleChange}\r\n                                name=\"gender\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.gender || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ThemeProvider theme={theme}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker style={{width: 200}} color=\"primary\" \r\n                                        label=\"DOB *\" format=\"dd-MM-yyyy\"\r\n                                            onChange={(date) => handleDateChange(date)}\r\n                                            name=\"dateOfBirth\" value={selectedDate}  />\r\n                                    </MuiPickersUtilsProvider>\r\n                            </ThemeProvider>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Email *\"\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'invalid email']}\r\n                                value={information?.email || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Phone *\"\r\n                                onChange={handleChange}\r\n                                name=\"phone\"\r\n                                validators={['required', 'isPhoneNumber']}\r\n                                errorMessages={['this field is required', 'invalid phone number']}\r\n                                value={information?.phone || ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextValidator\r\n                                label=\"Address *\"\r\n                                onChange={handleChange}\r\n                                name=\"address\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                value={information?.address || ''}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <ButtonCustom style={{ margin: '10px 0px 0px 0px' }} title={information?.id ? 'Save' : 'Create'}\r\n                        type='submit' color=\"darkPrimary\" />\r\n                    <ButtonCustom style={{ margin: '10px 0px 0px 10px' }} onClick={handleGoBack}\r\n                        title='Go Back' color=\"darkSecondary\" />\r\n                </ValidatorForm>\r\n            ) : '')}\r\n        </div>\r\n    )\r\n}","import { createTheme, FormControl, FormControlLabel, FormLabel, Grid, InputLabel, MenuItem, Radio, RadioGroup, Select, TextField, ThemeProvider } from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport API, { endpoints } from \"../../../API\";\r\nimport FormInformation from \"../../../components/FormInformation\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from \"sweetalert\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { url } from \"../../../URL\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    info: {\r\n        marginTop: 30,\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        // fontWeight: 'bold',\r\n        '& p': {\r\n            borderRadius: 10,\r\n            background: '#e1f5fe',\r\n            color: 'black',\r\n            width: '50%',\r\n            margin: '0 auto',\r\n            // boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n            marginBottom: 15,\r\n            padding: 10,\r\n        }\r\n    },\r\n    form: {\r\n        background: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '30px !important'        \r\n    },\r\n    formLoading : {\r\n        background: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '30px !important',  \r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    },\r\n    formAccountLoading: {\r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function AccountDetails(props) {\r\n    const {accountId} = useParams();\r\n    const [account, setAccount] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n    const [roles, setRoles] = useState([]);\r\n    const [information, setInformation] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [disableForm, setDisableForm] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const context = useContext(AuthContext);\r\n\r\n    const getAccount = async () => {\r\n        const roleID = await API.get(`${endpoints['accounts']}/${accountId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setAccount(res.data);\r\n            return res.data.role_id;\r\n        })\r\n        .catch(err => {\r\n            if (err.response?.status === 401) {\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n            else if (err.response?.status === 404) {\r\n                swal(err.response?.data?.message, '', 'error').then((value) => history.goBack());\r\n            }  \r\n        })\r\n\r\n        let roleEndpoint = await API.get(`${endpoints['roles']}/${roleID}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setRole(res.data);\r\n            return res.data.name === 'ROLE_ADMIN' ? 'admins' : (res.data.name === 'ROLE_DOCTOR' ? 'doctors' \r\n            : res.data.name === 'ROLE_EMPLOYEE' ? 'employees' : 'patients');\r\n        }).catch(err => {\r\n            if (err.response?.status === 401) {\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n            else if (err.response?.status === 404) {\r\n                swal(err.response?.data?.message, '', 'error').then((value) => history.goBack());\r\n            }\r\n        })\r\n\r\n        await API.get(`${endpoints['accounts']}/${accountId}/${roleEndpoint}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setInformation(res.data);\r\n            console.log(res.data);\r\n            if (res.data === '')\r\n                swal(\"This account doesn't have any information. You can enter it immediately.\", '', 'info');\r\n        })\r\n        .catch(err => {\r\n            if (err.response?.status === 401) {\r\n                if (window.confirm('Login expired! Please login again.')) {\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n            else if (err.response?.status === 404) {\r\n                swal(err.response?.data?.message, '', 'error').then((value) => history.goBack());\r\n            }\r\n        })\r\n\r\n        await API.get(`${endpoints['roles']}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setRoles(res.data.content))\r\n        .catch(err => console.log(err.response));\r\n    }   \r\n\r\n    useEffect(() => {\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n        getAccount();\r\n    }, [])\r\n\r\n    function handleChangeAccount(event) {\r\n        const temp = { ...account };\r\n        if (event.target.name === 'active')\r\n            temp[event.target.name] = event.target.value === 'true' ? true : false;\r\n        else\r\n            temp[event.target.name] = event.target.value;\r\n        setAccount(temp);\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n        API.get(`${endpoints['roles']}/${event.target.value}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            if (account.role_id === event.target.value)\r\n                setDisableForm(false);\r\n            else \r\n                setDisableForm(true);\r\n            \r\n            setRole(res.data);\r\n        })\r\n        .catch(err => {\r\n            if (err.response?.status === 404) {\r\n                swal(err.response?.data?.message, '', 'error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function handleEditAccount() {\r\n        setLoading(true);\r\n\r\n        let formData = new FormData();\r\n        formData.append('username', account.username);\r\n        formData.append('password', account.password);\r\n        formData.append('image', account.image);\r\n        formData.append('active', account.active);\r\n\r\n        let file = document.getElementById(\"upload-image\").files[0];\r\n        if (file)\r\n            formData.append('file', file);\r\n\r\n        API(`${endpoints['roles']}/${role.id}/${endpoints['accounts']}/${accountId}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-type': 'Multipart/form-data'\r\n            },\r\n            data: formData\r\n        }).then(res => {\r\n            setAccount(res.data);\r\n            setLoading(false);\r\n            setDisableForm(false);\r\n            swal(\"Success\", \"\", \"success\");\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handleDeleteAccount() {\r\n        API(`${endpoints['roles']}/${role.id}/accounts/${accountId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => console.log(res))\r\n        .catch(err => console.log(err.response));\r\n    }\r\n\r\n    function fileChange(event) {\r\n        let png = event.target.value.toLowerCase().endsWith('.png');\r\n        let jpg = event.target.value.toLowerCase().endsWith('.jpg');\r\n        let jpeg = event.target.value.toLowerCase().endsWith('.jpeg');\r\n        let svg = event.target.value.toLowerCase().endsWith('.svg');\r\n        if (png || jpg || jpeg || svg)    {\r\n            const src = URL.createObjectURL(document.getElementById('upload-image').files[0]);\r\n            let img = document.getElementById(\"image\");\r\n            setAccount({...account, 'image': src});\r\n            img.onload = () => {\r\n                URL.revokeObjectURL(img.src);\r\n            }\r\n        }\r\n        else {\r\n            swal('Pls choose a file with valid extension', '', 'warning');\r\n            event.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {role && roles && account ? (\r\n                <Grid container spacing={4}>\r\n                    <Grid className={loading ? classes.formAccountLoading : ''} container item xs={6} spacing={4}>\r\n                        <div style={{\r\n                            position: 'absolute',\r\n                            left: 713, top: 65,\r\n                            padding: 10,\r\n                            cursor: 'pointer', borderRadius: 10\r\n                        }} onClick={handleEditAccount}>\r\n                            <ThemeProvider theme={theme}>\r\n                                <SaveIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n                            </ThemeProvider>\r\n                        </div>\r\n                        <div style={{\r\n                            position: 'absolute',\r\n                            left: 673, top: 65,\r\n                            padding: 10,\r\n                            cursor: 'pointer', borderRadius: 10\r\n                        }} onClick={handleDeleteAccount}>\r\n                            <ThemeProvider theme={theme}>\r\n                                <DeleteIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n                            </ThemeProvider>\r\n                        </div>\r\n                        <Grid className={classes.info} item xs={12}>\r\n                            <p>ACCOUNT DETAILS</p>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{position: 'relative'}}>\r\n                                <img id=\"image\" style={{ width: '100%', border: '3px solid #afc2cb' }} src={account?.image} />\r\n                                <label style={{\r\n                                    position: 'absolute', top: 10,\r\n                                    left: 145\r\n                                }}>\r\n                                    <input id=\"upload-image\" type=\"file\" style={{ display: 'none' }}\r\n                                        onChange={fileChange} />\r\n                                    <PhotoLibraryIcon />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <p>ID: {account?.id}</p>\r\n                            <p>Username: {account?.username}</p>\r\n                            <p>Active: {account?.active ? 'True' : 'False'}</p>\r\n                            <p>Role: {role?.name}</p>\r\n                        </Grid>\r\n                        <form>\r\n                            <Grid container item xs={12} spacing={4}>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl>\r\n                                        <TextField required id=\"standard-required\"\r\n                                            label=\"Username\" name=\"username\" value={account?.username || ''}\r\n                                            onChange={handleChangeAccount} />\r\n                                        <p className={classes.error}></p>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl>\r\n                                        <TextField type=\"password\" required id=\"standard-required\"\r\n                                            label=\"Password\" name=\"password\" value={account?.password || ''}\r\n                                            onChange={handleChangeAccount} />\r\n                                        <p className={classes.error}></p>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl>\r\n                                        <FormLabel component=\"legend\">Active:</FormLabel>\r\n                                        <RadioGroup aria-label=\"active\" name=\"active\"\r\n                                            value={account?.active ? 'true' : 'false'} onChange={handleChangeAccount}>\r\n                                            <FormControlLabel value=\"true\" control={<Radio color=\"primary\" />} label=\"Active\" />\r\n                                            <FormControlLabel value=\"false\" control={<Radio color=\"primary\" />} label=\"Inactive\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl style={{ width: 150 }}>\r\n                                        <FormLabel id=\"demo-simple-select-label\">Role:</FormLabel>\r\n                                        <Select\r\n                                            disabled={information ? true : false}\r\n                                            labelId=\"role\"\r\n                                            id=\"role\"\r\n                                            value={role.id}\r\n                                            onChange={handleRoleChange}\r\n                                        >\r\n                                            {roles && roles.map(r => <MenuItem value={r?.id}>{r?.name}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Grid>\r\n                    <Grid className={classes.form} item xs={6}>\r\n                        <FormInformation disabled={disableForm} information={information} accountId={account.id} role={role} />\r\n                    </Grid>\r\n                </Grid>\r\n            ) : ''}\r\n\r\n        </>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button, createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\"\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { TramRounded } from \"@material-ui/icons\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport { AuthContext } from \"../../../App\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: { \r\n        height: 400, \r\n        width: '100%', \r\n        marginTop: 50, \r\n        background: 'white'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        }\r\n    }\r\n})\r\nexport default function Admins(props) {\r\n    const classes = useStyles();\r\n    const [admins, setAdmins] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [totalElements, setTotalElements] = useState();\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const context = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Avatar',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                const account_id = params.getValue(params.id,  'account_id');\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                let url = `/accounts/${account_id}`;\r\n                return (\r\n                    <Link style={{textDecoration: 'none', color: 'black', width: '100%'}} to={url}>\r\n                        <img style={{\r\n                            width: '70%',\r\n                            height: '55px',\r\n                            padding: '5px',\r\n                            marginTop: 20\r\n                        }} src={account[0] ? account[0].image : ''}/>\r\n                    </Link>\r\n                )\r\n            }\r\n        },\r\n        {   \r\n            field: 'firstName',\r\n            headerName: 'First Name',\r\n            width: 200,\r\n        }, \r\n        {\r\n            field: 'lastName',\r\n            headerName: 'Last Name',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'DOB',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'joinDate',\r\n            headerName: 'Join Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'idCardNumber',\r\n            headerName: 'Card Number',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'hometown',\r\n            headerName: 'Hometown',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 150,\r\n            align: 'center',\r\n            renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                const id = params.getValue(params.id, \"id\");\r\n                const account_id = params.getValue(params.id, \"account_id\");\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                swal({\r\n                    title: \"Are you sure to delete?\",\r\n                    icon: \"warning\",\r\n                    buttons: {\r\n                        cancel: 'Cancel',\r\n                        inactive: {\r\n                            text: 'Inactivate',\r\n                            value: 'inactive'\r\n                        },\r\n                        delete: {\r\n                            text: 'Delete anyway',\r\n                            value: 'delete'\r\n                        }\r\n                    }\r\n                }).then((value) => {\r\n                    switch (value) {\r\n                        case \"inactive\":\r\n                            let formData = new FormData();\r\n                            formData.append('username', account[0].username);\r\n                            formData.append('password', account[0].password);\r\n                            formData.append('image', account[0].image);\r\n                            formData.append('active', false);\r\n                            return API(`${endpoints['roles']}/${account[0].role_id}/accounts/${account_id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token'),\r\n                                    \"Content-type\": \"multipart/form-data\"\r\n                                },\r\n                                data: formData\r\n                            })\r\n                        case \"delete\":\r\n                            return API(`${endpoints['accounts']}/${account_id}/admins/${id}`, {\r\n                                method: 'delete',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                }\r\n                            })\r\n                    }\r\n                }).then(response => {\r\n                    if (response?.status === 200) {\r\n                        if (response?.config?.method === 'put') {\r\n                            swal(\"Inactivated\", \"\", \"success\");\r\n                        } else if (response?.config?.method === 'delete') {\r\n                            swal(\"Deleted\", \"\", \"success\");\r\n                            getAdmins(\"?p=\" + (currentPage + 1));\r\n                        }\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.response);\r\n                    if (error?.response?.status === 401) {\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                    }\r\n                })\r\n            }} color='primary' title='Delete' />)\r\n        }\r\n    ]\r\n\r\n    const getAdmins = async (page=\"?p=1\") => {\r\n        setLoading(true);\r\n\r\n        const accountIds = await API.get(`${endpoints['admins']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setAdmins(res.data.content);\r\n            setTotalElements(res.data.totalElements);\r\n            setCurrentPage(res.data.number);\r\n            setLoading(false);\r\n\r\n            return res.data.content.map(a => a.account_id);\r\n        })\r\n        .catch(err => console.log(err.response))\r\n\r\n        let promises = [];\r\n        let temp = [];\r\n        for (let i = 0; i < accountIds.length; i++) {\r\n            promises.push(API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => temp.push(res.data)));\r\n        }\r\n        Promise.all(promises).then(() => setAccounts(temp));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAdmins();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    function handlePageChange(newPage) {\r\n        getAdmins(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST ADMIN\" rows={admins} columns={columns} pageSize={7}\r\n                    createURL=\"\" server={true}\r\n                    btnTitle=\"\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from '../../../API'\r\nimport { AuthContext } from \"../../../App\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: { \r\n        height: 400, \r\n        width: '100%', \r\n        marginTop: 50, \r\n        background: 'white'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue['A400']\r\n        }\r\n    }\r\n})\r\n\r\nexport default function Doctors() {\r\n    const classes = useStyles();\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const context = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Avatar',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                const account_id = params.getValue(params.id,  'account_id');\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                let url = `/accounts/${account_id}`;\r\n                return (\r\n                    <Link style={{textDecoration: 'none', color: 'black', width: '100%'}} to={url}>\r\n                        <img style={{\r\n                            width: '70%',\r\n                            height: '55px',\r\n                            padding: '5px',\r\n                            marginTop: 20\r\n                        }} src={account[0] ? account[0].image : ''}/>\r\n                    </Link>\r\n                )\r\n            }\r\n        },\r\n        {   \r\n            field: 'firstName',\r\n            headerName: 'First Name',\r\n            width: 200,\r\n        }, \r\n        {\r\n            field: 'lastName',\r\n            headerName: 'Last Name',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'DOB',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'joinDate',\r\n            headerName: 'Join Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'idCardNumber',\r\n            headerName: 'Card Number',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'hometown',\r\n            headerName: 'Hometown',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 150,\r\n            align: 'center',\r\n            renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                const id = params.getValue(params.id, \"id\");\r\n                const account_id = params.getValue(params.id, \"account_id\");\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                swal({\r\n                    title: \"Are you sure to delete?\",\r\n                    icon: \"warning\",\r\n                    buttons: {\r\n                        cancel: 'Cancel',\r\n                        inactive: {\r\n                            text: 'Inactivate',\r\n                            value: 'inactive'\r\n                        },\r\n                        delete: {\r\n                            text: 'Delete anyway',\r\n                            value: 'delete'\r\n                        }\r\n                    }\r\n                }).then((value) => {\r\n                    switch (value) {\r\n                        case \"inactive\":\r\n                            let formData = new FormData();\r\n                            formData.append('username', account[0].username);\r\n                            formData.append('password', account[0].password);\r\n                            formData.append('image', account[0].image);\r\n                            formData.append('active', false);\r\n                            return API(`${endpoints['roles']}/${account[0].role_id}/accounts/${account_id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token'),\r\n                                    \"Content-type\": \"multipart/form-data\"\r\n                                },\r\n                                data: formData\r\n                            })\r\n                        case \"delete\":\r\n                            return API(`${endpoints['accounts']}/${account_id}/doctors/${id}`, {\r\n                                method: 'delete',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                }\r\n                            })\r\n                    }\r\n                }).then(response => {\r\n                    if (response?.status === 200) {\r\n                        if (response?.config?.method === 'put') {\r\n                            swal(\"Inactivated\", \"\", \"success\");\r\n                        } else if (response?.config?.method === 'delete') {\r\n                            swal(\"Deleted\", \"\", \"success\");\r\n                            getDoctors(\"?p=\" + (currentPage + 1));\r\n                        }\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.response);\r\n                    if (error?.response?.status === 401) {\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                    }\r\n                })\r\n            }} color='primary' title='Delete' />)\r\n        }\r\n    ]\r\n\r\n    const getDoctors = async (page=\"?p=1\") => {\r\n        setLoading(true);\r\n\r\n        const accountIds = await API.get(`${endpoints['doctors']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setDoctors(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            setLoading(false);\r\n\r\n            return res.data.content.map(a => a.account_id);\r\n        })\r\n        .catch(err => console.log(err.response));\r\n\r\n        let promises = [];\r\n        let temp = [];\r\n        for (let i = 0; i < accountIds.length; i++) {\r\n            promises.push(API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => temp.push(res.data)));\r\n        }\r\n        Promise.all(promises).then(() => setAccounts(temp));\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getDoctors(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDoctors();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST DOCTOR\" rows={doctors} columns={columns} pageSize={7}\r\n                    createURL=\"\" server={true}\r\n                    btnTitle=\"\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport { AuthContext } from \"../../../App\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: { \r\n        height: 400, \r\n        width: '100%', \r\n        marginTop: 50, \r\n        background: 'white'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue['A400']\r\n        }\r\n    }\r\n})\r\n\r\nexport default function Employees() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const context = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Avatar',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                const account_id = params.getValue(params.id,  'account_id');\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                let url = `/accounts/${account_id}`;\r\n                return (\r\n                    <Link style={{textDecoration: 'none', color: 'black', width: '100%'}} to={url}>\r\n                        <img style={{\r\n                            width: '70%',\r\n                            height: '55px',\r\n                            padding: '5px',\r\n                            marginTop: 20\r\n                        }} src={account[0] ? account[0].image : ''}/>\r\n                    </Link>\r\n                )\r\n            }\r\n        },\r\n        {   \r\n            field: 'firstName',\r\n            headerName: 'First Name',\r\n            width: 200,\r\n        }, \r\n        {\r\n            field: 'lastName',\r\n            headerName: 'Last Name',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'DOB',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'joinDate',\r\n            headerName: 'Join Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'idCardNumber',\r\n            headerName: 'Card Number',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'hometown',\r\n            headerName: 'Hometown',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 150,\r\n            align: 'center',\r\n            renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                const id = params.getValue(params.id, \"id\");\r\n                const account_id = params.getValue(params.id, \"account_id\");\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                swal({\r\n                    title: \"Are you sure to delete?\",\r\n                    icon: \"warning\",\r\n                    buttons: {\r\n                        cancel: 'Cancel',\r\n                        inactive: {\r\n                            text: 'Inactivate',\r\n                            value: 'inactive'\r\n                        },\r\n                        delete: {\r\n                            text: 'Delete anyway',\r\n                            value: 'delete'\r\n                        }\r\n                    }\r\n                }).then((value) => {\r\n                    switch (value) {\r\n                        case \"inactive\":\r\n                            let formData = new FormData();\r\n                            formData.append('username', account[0].username);\r\n                            formData.append('password', account[0].password);\r\n                            formData.append('image', account[0].image);\r\n                            formData.append('active', false);\r\n                            return API(`${endpoints['roles']}/${account[0].role_id}/accounts/${account_id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token'),\r\n                                    \"Content-type\": \"multipart/form-data\"\r\n                                },\r\n                                data: formData\r\n                            })\r\n                        case \"delete\":\r\n                            return API(`${endpoints['accounts']}/${account_id}/employees/${id}`, {\r\n                                method: 'delete',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                }\r\n                            })\r\n                    }\r\n                }).then(response => {\r\n                    if (response?.status === 200) {\r\n                        if (response?.config?.method === 'put') {\r\n                            swal(\"Inactivated\", \"\", \"success\");\r\n                        } else if (response?.config?.method === 'delete') {\r\n                            swal(\"Deleted\", \"\", \"success\");\r\n                            getEmployees(\"?p=\" + (currentPage + 1));\r\n                        }\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.response);\r\n                    if (error?.response?.status === 401) {\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                    }\r\n                })\r\n            }} color='primary' title='Delete' />)\r\n        }\r\n    ]\r\n\r\n    const getEmployees = async (page=\"?p=1\") => {\r\n        setLoading(true);\r\n\r\n        const accountIds = await API.get(`${endpoints['employees']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setEmployees(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            setLoading(false);\r\n\r\n            return res.data.content.map(a => a.account_id);\r\n        }).catch(err => console.log(err.response));\r\n\r\n        let promises = [];\r\n        let temp = [];\r\n        for (let i = 0; i < accountIds.length; i++) {\r\n            promises.push(API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => temp.push(res.data)));\r\n        }\r\n        Promise.all(promises).then(() => setAccounts(temp));\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getEmployees(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEmployees();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST EMPLOYEE\" rows={employees} columns={columns} pageSize={7}\r\n                    createURL=\"\" server={true}\r\n                    btnTitle=\"\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import { DialogContentText, FormControl, Grid, IconButton, Link, \r\n    DialogTitle, Dialog, DialogContent, MenuItem, ThemeProvider } from \"@material-ui/core\";\r\nimport { blue, lightBlue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SelectValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport API, { endpoints } from \"../API\";\r\nimport ButtonCustom from \"./Button\";\r\nimport { createTheme } from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Select, TextField } from \"@material-ui/core\";\r\nimport DataTableSchedule from \"./DataTableSchedule\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport { Slide } from \"@material-ui/core\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        }\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 60\r\n    },\r\n    background: {\r\n        backgroundColor: '#f5f5f5'\r\n    },\r\n    form: {\r\n        background: 'white'\r\n    },\r\n    info: {\r\n        fontFamily: 'monospace'\r\n    }\r\n})\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FormSchedules(props) {\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [shifts, setShifts] = useState([]);\r\n    const [currentPageDoctor, setCurrentPageDoctor] = useState(0);\r\n    const [totalElementsDoctor, setTotalElementsDoctor] = useState(0);\r\n    const [isDoctorOpen, setDoctorOpen] = useState(false);\r\n    const [isShiftOpen, setShiftOpen] = useState(false);\r\n    const [isDateOpen, setDateOpen] = useState(false);\r\n    const [doctorId, setDoctorId] = useState();\r\n    const [shiftId, setShiftId] = useState();\r\n    const [doctor, setDoctor] = useState();\r\n    const [shift, setShift] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const columnsDoctor = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {   \r\n            field: 'firstName',\r\n            headerName: 'First Name',\r\n            width: 200,\r\n        }, \r\n        {\r\n            field: 'lastName',\r\n            headerName: 'Last Name',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'DOB',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'joinDate',\r\n            headerName: 'Join Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                            InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'idCardNumber',\r\n            headerName: 'Card Number',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'hometown',\r\n            headerName: 'Hometown',\r\n            width: 200,\r\n        }\r\n    ]\r\n\r\n    const columnsShift = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 150\r\n        }, \r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 300,\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 500,\r\n        },\r\n        {\r\n            field: 'active',\r\n            headerName: 'Active',\r\n            width: 150,\r\n            type: 'boolean',\r\n        },\r\n    ]\r\n\r\n    const styles = {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        background: 'white',\r\n        top: 200\r\n    }\r\n\r\n    function getDoctors(page=\"?p=1\") {\r\n        API.get(`${endpoints['doctors']}/active${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setCurrentPageDoctor(res.data.number);\r\n            setTotalElementsDoctor(res.data.totalElements);\r\n            setDoctors(res.data.content)\r\n        })\r\n        .catch(err => console.log(err.response));\r\n    }\r\n\r\n    function getShifts() {\r\n        API.get(`${endpoints['shifts']}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setShifts(res.data.content)\r\n        })\r\n        .catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getDoctors(`?p=${newPage + 1}`);\r\n        setCurrentPageDoctor(newPage);\r\n    }\r\n\r\n    function handleClose(event) {\r\n        let e = document.querySelector(\"#grid\");\r\n        e.style.opacity = \"1\";\r\n        setDoctorOpen(false);\r\n        setShiftOpen(false);\r\n        setOpen(false);\r\n        setDoctorId(doctor ? doctor.id : '');\r\n        setShiftId(shift ? shift.id : '');\r\n    }\r\n\r\n    async function handleSave() {\r\n        if (isDoctorOpen) {\r\n            if (!doctorId) {\r\n                swal('Please choose a doctor', '', 'warning');\r\n                return;\r\n            }\r\n\r\n            const accountId = await API.get(`${endpoints['doctors']}/${doctorId}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => {\r\n                setDoctor(res.data);\r\n                return res.data.account_id;\r\n            })\r\n            .catch(err => console.log(err.response));\r\n\r\n            await API.get(`${endpoints['accounts']}/${accountId}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setAccount(res.data))\r\n            .catch(err => console.log(err.response));\r\n\r\n            setDoctorOpen(false);\r\n        } else if (isShiftOpen) {\r\n            if (!shiftId) {\r\n                swal('Please choose a shift', '', 'warning');\r\n                return;\r\n            }\r\n            \r\n            API.get(`${endpoints['shifts']}/${shiftId}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setShift(res.data))\r\n            .catch(err => console.log(err.response));\r\n\r\n            setShiftOpen(false);\r\n        }\r\n\r\n        let grid = document.querySelector(\"#grid\");\r\n        grid.style.opacity = \"1\";\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleSelectionChange(newSelection) {\r\n        if (isDoctorOpen) {\r\n            setDoctorId(newSelection);\r\n        } else if (isShiftOpen) {\r\n            setShiftId(newSelection);\r\n        }\r\n    }\r\n\r\n    function handleClick(event) {\r\n        const id = event.target.parentElement.id;\r\n        if (id === 'doctor') {\r\n            setDoctorOpen(true);\r\n            setShiftOpen(false);\r\n            setDateOpen(false);\r\n            setOpen(true);\r\n        } else if (id === 'shift') {\r\n            setDoctorOpen(false);\r\n            setDateOpen(false);\r\n            setShiftOpen(true);\r\n            setOpen(true);\r\n        } else if (id === \"date\") {\r\n            setDoctorOpen(false);\r\n            setShiftOpen(false);\r\n            setDateOpen(true);\r\n        }\r\n        let e = document.querySelector(\"#grid\");\r\n        e.style.opacity = \"0.5\";\r\n    }\r\n\r\n    function handleCloseCalendar() {\r\n        let e = document.querySelector(\"#grid\");\r\n        e.style.opacity = \"1\";\r\n        setDateOpen(false);\r\n    }\r\n\r\n    function handleDateChange(date) {\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!doctor) {\r\n            swal('Please choose a doctor', '', 'warning');\r\n            return;\r\n        }\r\n        if (!shift) {\r\n            swal('Please choose a shift', '', 'warning');\r\n            return;\r\n        }\r\n        if (!selectedDate) {\r\n            swal('Please choose a date', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        let date = new Date(selectedDate);\r\n        \r\n        API(`${endpoints['doctors']}/${doctorId}/shifts/${shiftId}/schedules`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }, \r\n            data: {\r\n                date: date\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                swal('Success', '', 'success');\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if (err.response.status === 500) {\r\n                swal('Schedule is duplicated in database', '', 'error');\r\n            } else if (err.response.status === 404) {\r\n                swal(err.response.data.message, '', 'error');\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDoctors();\r\n        getShifts();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <Grid id=\"grid\" className={classes.root} container spacing={4}>\r\n            <Grid className={classes.background} item xs={6}>\r\n                <img src={process.env.PUBLIC_URL + '/images/gui6.svg'} width=\"100%\" height=\"500\" />\r\n            </Grid>\r\n            <Grid className={classes.form} item xs={6}>\r\n                <form onSubmit={handleSubmit}>\r\n                {doctor && account ? (\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={4}>\r\n                            <img width=\"100%\" height={150} src={account.image} />\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.info}>\r\n                            <p>Full name: {doctor.lastName + ' ' + doctor.firstName}</p>\r\n                            <p>Phone: {doctor.phone}</p>\r\n                            <p>Email: {doctor.email}</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                ) : ''}\r\n                {shift || selectedDate ? (\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={4}>\r\n                            <img width=\"100%\" height={150} src={process.env.PUBLIC_URL + '/images/gui5.svg'} />\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.info}>\r\n                            {shift ? (\r\n                                <>\r\n                                <p>Shift name: {shift.name}</p>\r\n                                <p>Shift description: {shift.description}</p>\r\n                                </>\r\n                            ) : ''}\r\n                            {selectedDate ? (\r\n                            <p>\r\n                                Date: {`${selectedDate.getDate()} - ${selectedDate.getMonth() + 1} -\r\n                                ${selectedDate.getYear() + 1900}`}\r\n                            </p>\r\n                            ) : ''}\r\n                        </Grid>\r\n                    </Grid>\r\n                ) : ''}\r\n                <ButtonCustom id=\"doctor\" style={{ margin: '10px 10px 0px 70px'}} title='Choose a doctor'\r\n                color=\"primary\" onClick={handleClick} />\r\n                <ButtonCustom id=\"shift\" style={{ margin: '10px 10px 0px 0px' }} title='Choose a shift'\r\n                color=\"primary\" onClick={handleClick} />\r\n                <ButtonCustom id=\"date\" style={{ margin: '10px 10px 0px 0px' }} title='Choose a date'\r\n                color=\"primary\" onClick={handleClick} />\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 0px', position: 'absolute', \r\n                top: 610, right: 75 }} title='Save'\r\n                color=\"darkSecondary\" type=\"submit\"/>\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 0px', position: 'absolute',\r\n                top: 610, right: 620 }} title='Go Back'\r\n                color=\"darkSecondary\" onClick={handleGoBack} />\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {isDoctorOpen ? 'Choose a doctor' : 'Choose a shift'}\r\n                    <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                        <SaveAltIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                {isDoctorOpen ? (\r\n                                    <DataTable rows={doctors} columns={columnsDoctor}\r\n                                        btnTitle=\"\" createURL=\"\" header=\"\" \r\n                                        handleSelectionChange={handleSelectionChange}\r\n                                        rowCount={totalElementsDoctor} currentPage={currentPageDoctor}\r\n                                        pageSize={7} handlePageChange={handlePageChange} server={true} />\r\n                                ) : (isShiftOpen ? (\r\n                                    <DataTable rows={shifts} columns={columnsShift}\r\n                                        btnTitle=\"\" createURL=\"\" header=\"\" handleSelectionChange={handleSelectionChange} />\r\n                                ) : '')}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <ThemeProvider theme={theme}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker style={{ width: 200, display: 'none' }} color=\"primary\"\r\n                        label=\"DOB *\" format=\"dd-MM-yyyy\" open={isDateOpen} \r\n                        onClose={handleCloseCalendar}\r\n                        onChange={handleDateChange}\r\n                        value={selectedDate}\r\n                        minDate={new Date()}\r\n                        name=\"dateOfBirth\" />\r\n                </MuiPickersUtilsProvider>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    CardContent, createTheme, Grid, Card, makeStyles,\r\n    ThemeProvider, Typography, CardMedia, DialogContentText, Button, Divider, Select, MenuItem\r\n} from \"@material-ui/core\";\r\nimport { blue, lightBlue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport React from 'react';\r\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SideBarContext } from '../Drawer';\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        width: '100%',\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n        height: 38,\r\n        width: 38,\r\n    },\r\n}))\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Schedules() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [schedules, setSchedules] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [currentPageDoctor, setCurrentPageDoctor] = useState(0);\r\n    const [totalPagesDoctor, setTotalPagesDoctor] = useState(0);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [shifts, setShifts] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [imageDetail, setImageDetail] = useState();\r\n    const [doctorId, setDoctorId] = useState();\r\n    const context = useContext(AuthContext);\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'STT',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'doctor_id',\r\n            headerName: 'Doctor ID',\r\n            width: 400\r\n        },\r\n        {\r\n            field: 'shift_id',\r\n            headerName: 'Shift ID',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                format=\"dd-MM-yyyy\"\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    const getDoctors = async (page = \"?p=1\") => {\r\n        setLoading(true);\r\n        const number = \"n=6\";\r\n\r\n        const accountIds = await API.get(`${endpoints['doctors']}${page}&${number}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setDoctors(res.data.content);\r\n            setCurrentPageDoctor(res.data.number);\r\n            setTotalPagesDoctor(res.data.totalPages);\r\n            return res.data.content.map(d => d.account_id);\r\n        }).catch(err => console.log(err.response));\r\n\r\n        let promises = [];\r\n        let accountArr = [];\r\n        for (let i = 0; i < accountIds.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => accountArr.push(res.data))\r\n                    .catch(err => err.response)\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setAccounts(accountArr);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handlePageChange(event, newPage, doctorId, image) {\r\n        handleViewDetails(`?p=${newPage}`, doctorId, image);\r\n        setCurrentPage(newPage - 1);\r\n    }\r\n\r\n    function handlePageChangeDoctor(event, newPage) {\r\n        getDoctors(`?p=${newPage}`);\r\n        setCurrentPageDoctor(newPage - 1);\r\n    }\r\n\r\n    const handleViewDetails = async (page = \"?p=1\", doctorId, image) => {\r\n        setImageDetail(image);\r\n        setDoctorId(doctorId);\r\n        setOpen(true);\r\n        const shiftIds = await API.get(`${endpoints['doctors']}/${doctorId}/schedules${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setSchedules(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalPages(res.data.totalPages);\r\n            return [...new Set(res.data.content.map(s => s.shift_id))];\r\n        })\r\n            .catch(err => console.log(err.response))\r\n\r\n        let promises = [];\r\n        let shiftArr = [];\r\n        for (let i = 0; i < shiftIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['shifts']}/${shiftIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => shiftArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => setShifts(shiftArr))\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDoctors();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <>\r\n                    <Typography variant=\"h5\"\r\n                        style={{\r\n                            background: '#e1f5fe',\r\n                            width: '20%', textAlign: 'center',\r\n                            margin: '40px auto auto 15px',\r\n                        }}>LIST SCHEDULE</Typography>\r\n                    <Grid style={{ marginTop: 20 }} container item xs={12} spacing={4}>\r\n                        <Grid item xs={4}>\r\n                            <Select variant=\"outlined\" value=\"0\">\r\n                                <MenuItem value=\"0\">Choose a date</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Select variant=\"outlined\" value=\"0\">\r\n                                <MenuItem value=\"0\">Choose a doctor</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Select variant=\"outlined\" value=\"0\">\r\n                                <MenuItem value=\"0\">Choose a shift</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        {doctors && doctors.map(d => {\r\n                            const account = accounts.filter(a => a.id === d.account_id);\r\n                            return (\r\n                                <Grid item xs={4}>\r\n                                    <Card className={classes.root}>\r\n                                        <div className={classes.details}>\r\n                                            <CardContent className={classes.content}>\r\n                                                <Typography component=\"h5\" variant=\"h5\">\r\n                                                    {d.firstName + ' ' + d.lastName}\r\n                                                </Typography>\r\n                                                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                                                    {d.phone}\r\n                                                </Typography>\r\n                                                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                                                    {d.email}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <div className={classes.controls}>\r\n                                                <ButtonCustom style={{ margin: '10px 0px 0px 0px' }}\r\n                                                    title=\"View Details\"\r\n                                                    color=\"primary\" onClick={() => handleViewDetails(\"?p=1\", d.id,\r\n                                                        account[0].image)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <CardMedia\r\n                                            className={classes.cover}\r\n                                            image={account[0].image}\r\n                                            title=\"Avatar\"\r\n                                        />\r\n                                    </Card>\r\n                                </Grid>\r\n                            )\r\n                        })}\r\n                        <Dialog\r\n                            open={open}\r\n                            TransitionComponent={Transition}\r\n                            keepMounted\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-slide-title\"\r\n                            aria-describedby=\"alert-dialog-slide-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-slide-title\">{\"Schedule Details\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid item xs={6} style={{ marginTop: 100 }}>\r\n                                            <Link to={`/accounts/${accounts.filter(a => a.image === imageDetail)[0]?.id}`}>\r\n                                                <img width=\"100%\" src={imageDetail} />\r\n                                            </Link>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            {schedules && shifts && schedules.map(s => {\r\n                                                const shift = shifts.filter(sh => sh.id === s.shift_id);\r\n                                                const date = new Date(s.date);\r\n                                                return (\r\n                                                    <>\r\n                                                        <Grid item xs={12}>\r\n                                                            <EditIcon style={{\r\n                                                                color: '#afc2cb', position: 'absolute',\r\n                                                                right: 35\r\n                                                            }} />\r\n                                                            <p>Shift name: {shift[0]?.name}</p>\r\n                                                            <p>Shift description: {shift[0]?.description}</p>\r\n                                                            <p>Date: {`${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`}</p>\r\n                                                        </Grid>\r\n                                                        <Divider />\r\n                                                    </>\r\n                                                )\r\n                                            })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <ThemeProvider theme={theme}>\r\n                                    <Pagination color=\"primary\" className={classes.pagination}\r\n                                        page={currentPage + 1} count={totalPages}\r\n                                        showFirstButton showLastButton\r\n                                        onChange={(event, value) => handlePageChange(event, value, doctorId, imageDetail)} />\r\n                                </ThemeProvider>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Grid>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Pagination color=\"primary\" className={classes.pagination} style={{ position: 'absolute', top: 660, left: '45%' }}\r\n                            page={currentPageDoctor + 1} count={totalPagesDoctor}\r\n                            showFirstButton showLastButton\r\n                            onChange={(event, value) => handlePageChangeDoctor(event, value)} />\r\n                    </ThemeProvider>\r\n                    <Link to=\"/schedules/create\" style={{\r\n                        textDecoration: 'none', position: 'fixed',\r\n                        top: 100, right: -1\r\n                    }}>\r\n                        <Button variant=\"contained\"\r\n                            style={{ marginLeft: 15, marginTop: 15, background: '#e1f5fe', color: 'black' }}>\r\n                            Create</Button>\r\n                    </Link>\r\n                </>\r\n            )}\r\n        </Grid>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { createTheme, DialogContentText, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ThemeProvider } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport React from \"react\";\r\nimport { useEffect, useState, useRef, useContext } from \"react\"\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { Slide, DialogContent, DialogTitle, Dialog } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { AuthContext } from '../../../App';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        width: '100%',\r\n        marginTop: 50,\r\n        background: 'white'\r\n    },\r\n    loading: {\r\n        opacity: 0.5,\r\n        pointerEvents: 'none',\r\n        backgroundImage: 'url(\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/6d391369321565.5b7d0d570e829.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        }\r\n    }\r\n})\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Bookings() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [bookings, setBookings] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [shifts, setShifts] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [tokens, setTokens] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [isDoctorShow, setDoctorShow] = useState(false);\r\n    const [isShiftShow, setShiftShow] = useState(false);\r\n    const classes = useStyles();\r\n    const pdfRef = useRef();\r\n    const [bookingToPDF, setBookingToPDF] = useState();\r\n    const context = useContext(AuthContext);\r\n    const [actionLoading, setActionLoading] = useState(false);\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID'\r\n        },\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            width: 200,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'Date of Birth',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(value) => handleDateChange('dateOfBirth', value, params)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker style={{ width: 200 }} color=\"primary\" readOnly\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onDoubleClick={() => handleChooseDateDoctorShift()}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'date')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'doctor',\r\n            headerName: 'Doctor',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const doctor_id = params.getValue(params.id, 'doctor_id');\r\n                const doctor = doctors.filter(d => d.id === doctor_id);\r\n                return (\r\n                    <p style={{ cursor: 'pointer' }}\r\n                        onDoubleClick={() => handleChooseDateDoctorShift()}>\r\n                        {doctor[0]?.lastName + ' ' + doctor[0]?.firstName}\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'shift',\r\n            headerName: 'Shift',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const shift_id = params.getValue(params.id, 'shift_id');\r\n                const shift = shifts.filter(s => s.id === shift_id);\r\n                return (\r\n                    <p style={{ cursor: 'pointer' }}\r\n                        onDoubleClick={() => handleChooseDateDoctorShift()}>\r\n                        {shift[0]?.description}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'service_id',\r\n            headerName: 'Service',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const service_id = params.getValue(params.id, 'service_id');\r\n                const service = services.filter(s => s.id === service_id);\r\n                return (\r\n                    <p>{service[0]?.name}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'doctor_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'shift_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'patient_id',\r\n            headerName: 'Loyal patient',\r\n            renderCell: (params) => params.getValue(params.id, 'patient_id') ? 'Yes' : 'No',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'confirmedAt',\r\n            headerName: 'Confirmed At',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const booking_id = params.id;\r\n                const token = tokens.filter(t => t.booking_id === booking_id);\r\n                const time = new Date(token[0]?.confirmedAt);\r\n                return token[0]?.confirmedAt ? `${time.getUTCDate()}-${time.getMonth() + 1}-${time.getFullYear()} \r\n                ${time.getUTCHours()}:${time.getUTCMinutes()}:${time.getUTCSeconds()}` : '';\r\n            }\r\n        },\r\n        {\r\n            field: 'canceledAt',\r\n            headerName: 'Cancelled At',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const booking_id = params.id;\r\n                const token = tokens.filter(t => t.booking_id === booking_id);\r\n                const time = new Date(token[0]?.canceledAt);\r\n                return token[0]?.canceledAt ? `${time.getUTCDate()}-${time.getMonth() + 1}-${time.getFullYear()} \r\n                ${time.getUTCHours()}:${time.getUTCMinutes()}:${time.getUTCSeconds()}` : '';\r\n            }\r\n        },\r\n        context.currentAuth?.role === 'ROLE_EMPLOYEE' ?\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 400,\r\n            align: 'center',\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <ButtonCustom title=\"Confirm\" color=\"primary\" style={{\r\n                            margin: '0px 10px 0px 0px', fontSize: 12\r\n                        }} onClick={() => handleConfirm(params.id)} />\r\n                        <ButtonCustom title=\"Cancel\" color=\"darkPrimary\" style={{\r\n                            margin: '0px 10px 0px 0px', fontSize: 12\r\n                        }} onClick={() => handleCancel(params.id)} />\r\n                        <ButtonCustom title=\"Delete\" color=\"darkSecondary\" style={{\r\n                            margin: '0px 10px 0px 0px', fontSize: 12\r\n                        }} onClick={() => handleDelete(params.id)} />\r\n                        <ButtonCustom title=\"Convert\" color=\"\" style={{\r\n                            margin: '0px 10px 0px 0px', fontSize: 12\r\n                        }} onClick={() => handleConvert(params)} />\r\n                        <ReactToPrint\r\n                            trigger={() => <ButtonCustom title=\"Print PDF\" color=\"\" variant=\"outlined\" style={{\r\n                                fontSize: 12\r\n                            }} />}\r\n                            onBeforeGetContent={async () => {\r\n                                await API.get(`${endpoints['bookings']}/${params.id}`, {\r\n                                    headers: {\r\n                                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                                    }\r\n                                }).then(res => setBookingToPDF(res.data))\r\n                                    .catch(err => console.log(err.response))\r\n                            }}\r\n                            content={() => pdfRef.current}\r\n                        />\r\n                    </>\r\n                )\r\n            }\r\n        } : ''\r\n    ]\r\n\r\n    const getBookings = async (page = \"?p=1\") => {\r\n        setLoading(true);\r\n\r\n        const data = await API.get(`${endpoints['bookings']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setBookings(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n\r\n            const doctorIds = [...new Set(res.data.content.map(b => b.doctor_id))];\r\n            const shiftIds = [...new Set(res.data.content.map(b => b.shift_id))];\r\n            const serviceIds = [... new Set(res.data.content.map(b => b.service_id))];\r\n\r\n            return {\r\n                bookingIds: res.data.content.map(b => b.id),\r\n                doctorIds: doctorIds,\r\n                shiftIds: shiftIds,\r\n                serviceIds: serviceIds\r\n            }\r\n        })\r\n            .catch(err => console.log(err.response))\r\n\r\n        let promises1 = [];\r\n        let doctorArr = [];\r\n        for (let i = 0; i < data.doctorIds.length; i++) {\r\n            promises1.push(\r\n                API.get(`${endpoints['doctors']}/${data.doctorIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => doctorArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises1).then(() => setDoctors(doctorArr));\r\n\r\n        let promises2 = [];\r\n        let shiftArr = [];\r\n        for (let i = 0; i < data.shiftIds.length; i++) {\r\n            promises2.push(\r\n                API.get(`${endpoints['shifts']}/${data.shiftIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => shiftArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises2).then(() => setShifts(shiftArr));\r\n\r\n        let promises3 = [];\r\n        let tokenArr = [];\r\n        for (let i = 0; i < data.bookingIds.length; i++) {\r\n            promises3.push(\r\n                API.get(`${endpoints['bookings']}/${data.bookingIds[i]}/tokens`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => tokenArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises3).then(() => {\r\n            setTokens(tokenArr);\r\n        })\r\n\r\n        let promises4 = [];\r\n        let serviceArr = [];\r\n        for (let i = 0; i < data.serviceIds.length; i++) {\r\n            promises4.push(\r\n                API.get(`${endpoints['services']}/${data.serviceIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => serviceArr.push(res.data))\r\n                .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises4).then(() => {\r\n            setServices(serviceArr);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    async function handleChooseDateDoctorShift(currentDate) {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getBookings(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    async function handleConfirm(bookingId) {\r\n        setActionLoading(true);\r\n        let promises = [];\r\n\r\n        promises.push(API.get(`${endpoints['bookings']}/${bookingId}/tokens`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => res.data.token)\r\n            .catch(err => {\r\n                if (err.response.status === 404) {\r\n                    swal({\r\n                        title: err.response.data.message,\r\n                        icon: 'error',\r\n                        buttons: {\r\n                            cancel: 'Cancel',\r\n                            refresh: {\r\n                                text: 'Refresh',\r\n                                value: 'refresh'\r\n                            }\r\n                        }\r\n                    }).then((value) => {\r\n                        switch (value) {\r\n                            case 'refresh':\r\n                                return API.get(`${endpoints['bookings']}/${bookingId}/tokens/refresh`, {\r\n                                    headers: {\r\n                                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                                    }\r\n                                })\r\n                            default:\r\n                                return;\r\n                        }\r\n                    }).then(res => {\r\n                        if (res?.status === 200) {\r\n                            swal('Refresh successfully', '', 'success');\r\n                        }\r\n                    });\r\n                }\r\n            }));\r\n\r\n        Promise.all(promises).then((value) => {\r\n            if (typeof value[0] !== 'undefined') {\r\n                API.get(`${endpoints['bookings']}/${bookingId}/tokens/confirm/${value}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status === 200) {\r\n                        swal('Confirm successfully', '', 'success');\r\n                        getBookings(`?p=${currentPage + 1}`);\r\n                        setActionLoading(false);\r\n                    }\r\n                }).catch(err => {\r\n                        setActionLoading(false);\r\n                        if (err.response.status === 400 && !err.response.data.message.includes('expired')) {\r\n                            swal(err.response.data.message, '', 'error');\r\n                        } else if (err.response.status === 400 && err.response.data.message.includes('expired')) {\r\n                            swal({\r\n                                title: err.response.data.message,\r\n                                icon: 'error',\r\n                                buttons: {\r\n                                    cancel: 'Cancel',\r\n                                    refresh: {\r\n                                        text: 'Refresh',\r\n                                        value: 'refresh'\r\n                                    }\r\n                                }\r\n                            }).then(value => {\r\n                                switch (value) {\r\n                                    case 'refresh':\r\n                                        return API.get(`${endpoints['bookings']}/${bookingId}/tokens/refresh`, {\r\n                                            headers: {\r\n                                                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                                            }\r\n                                        });\r\n                                    default:\r\n                                        return;\r\n                                }\r\n                            }).then(res => {\r\n                                if (res?.status === 200) {\r\n                                    swal('Refresh successfully', '', 'success');\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCancel = async (bookingId) => {\r\n        setActionLoading(true);\r\n        let promises = [];\r\n\r\n        promises.push(API.get(`${endpoints['bookings']}/${bookingId}/tokens`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => res.data.token)\r\n            .catch(err => {\r\n                if (err.response.status === 404) {\r\n                    swal({\r\n                        title: err.response.data.message,\r\n                        icon: 'error',\r\n                        buttons: {\r\n                            cancel: 'Cancel',\r\n                            refresh: {\r\n                                text: 'Refresh',\r\n                                value: 'refresh'\r\n                            }\r\n                        }\r\n                    }).then((value) => {\r\n                        switch (value) {\r\n                            case 'refresh':\r\n                                return API.get(`${endpoints['bookings']}/${bookingId}/tokens/refresh`, {\r\n                                    headers: {\r\n                                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                                    }\r\n                                })\r\n                            default:\r\n                                return;\r\n                        }\r\n                    }).then(res => {\r\n                        if (res?.status === 200) {\r\n                            swal('Refresh successfully', '', 'success');\r\n                        }\r\n                    });\r\n                }\r\n            }));\r\n\r\n        Promise.all(promises).then((value) => {\r\n            if (typeof value[0] !== 'undefined') {\r\n                API.get(`${endpoints['bookings']}/${bookingId}/tokens/cancel/${value}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status === 200) {\r\n                        swal('Cancel successfully', '', 'success');\r\n                        getBookings(`?p=${currentPage + 1}`);\r\n                        setActionLoading(false);\r\n                    }\r\n                }).catch(err => {\r\n                        if (err.response.status === 400 && !err.response.data.message.includes('expired')) {\r\n                            swal(err.response.data.message, '', 'error');\r\n                        } else if (err.response.status === 400 && err.response.data.message.includes('expired')) {\r\n                            setActionLoading(false);\r\n                            swal({\r\n                                title: err.response.data.message,\r\n                                icon: 'error',\r\n                                buttons: {\r\n                                    ok: 'Ok'\r\n                                }\r\n                            }).then(value => {\r\n                                switch (value) {\r\n                                    default:\r\n                                        return;\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete = async (bookingId) => {\r\n        await API(`${endpoints['bookings']}/${bookingId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                swal('Delete successfully', '', 'success');\r\n                getBookings(`?p=${currentPage + 1}`);\r\n            }\r\n        }).catch(err => console.log(err.response))\r\n    }\r\n\r\n    const handleDateChange = async (field, value, params) => {\r\n        const data = await API.get(`${endpoints['bookings']}/${params.id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            delete res.data.doctor_id;\r\n            delete res.data.shift_id;\r\n            delete res.data.service_id;\r\n            delete res.data.patient_id;\r\n            return res.data;\r\n        }).catch(err => console.log(err.response));\r\n\r\n        await API(`${endpoints['doctors']}/${params.getValue(params.id, 'doctor_id')}\r\n        /shifts/${params.getValue(params.id, 'shift_id')}\r\n        /services/${params.getValue(params.id, 'service_id')}\r\n        /bookings/${params.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                ...data,\r\n                [field]: value\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            getBookings(`?p=${currentPage + 1}`);\r\n        })\r\n            .catch(err => {\r\n                if (err.response.status === 400) {\r\n                    swal(err.response?.data?.message, '', 'error')\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleConvert = async (params) => {\r\n        let promises = [];\r\n\r\n        const data = await API.get(`${endpoints['bookings']}/${params.id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            promises.push(res.data);\r\n\r\n            return res.data;\r\n        })\r\n            .catch(err => {\r\n                swal(err.response?.data?.message, '', 'error');\r\n                return;\r\n            });\r\n\r\n        Promise.all(promises).then(async (v) => {\r\n            let promises = [];\r\n            let account;\r\n\r\n            let fullName = data.fullName;\r\n            let lastName = fullName.split(' ').slice(0, -1).join(' ');\r\n            let firstName = fullName.split(' ').slice(-1).join(' ');\r\n            if (v[0].patient_id) {\r\n                account = await API(`${endpoints['accounts']}/update/booking?patientId=${v[0].patient_id}`, {\r\n                    method: 'put',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    },\r\n                    data: {\r\n                        id: data.id,\r\n                        fullName: data.fullName,\r\n                        gender: data.gender,\r\n                        dateOfBirth: data.dateOfBirth,\r\n                        phone: data.phone,\r\n                        email: data.email,\r\n                        address: data.address,\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status === 200) {\r\n                        console.log(res)\r\n                        swal(\"Updated information from booking to patient\", '', 'success');\r\n                        return;\r\n                    }\r\n                }).catch(err => {\r\n                    swal(err.response.data.message, '', 'error');\r\n                    return;\r\n                })\r\n            } else {\r\n                account = await API(`${endpoints['accounts']}/create/booking`, {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    },\r\n                    data: {\r\n                        id: data.id,\r\n                        fullName: data.fullName,\r\n                        gender: data.gender,\r\n                        dateOfBirth: data.dateOfBirth,\r\n                        phone: data.phone,\r\n                        email: data.email,\r\n                        address: data.address,\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status === 201) {\r\n                        promises.push(res.data)\r\n                    }\r\n                }).catch(err => {\r\n                    swal(err.response.data.message, '', 'error');\r\n                    return;\r\n                })\r\n            }\r\n\r\n            Promise.all(promises).then(async (value) => {\r\n                if (typeof value[0] !== 'undefined') {\r\n                    let promises = [];\r\n                    await API(`${endpoints['accounts']}/${value[0]?.id}/patients`, {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        },\r\n                        data: {\r\n                            firstName: firstName,\r\n                            lastName: lastName,\r\n                            gender: data.gender,\r\n                            dateOfBirth: data.dateOfBirth,\r\n                            phone: data.phone,\r\n                            email: data.email,\r\n                            address: data.address,\r\n                        }\r\n                    }).then(res => {\r\n                        if (res.status === 201) {\r\n                            promises.push(res.data);\r\n                        }\r\n                    }).catch(err => {\r\n                        swal(err.response.data.message, '', 'error');\r\n                        return;\r\n                    })\r\n\r\n                    Promise.all(promises).then((value) => {\r\n                        if (typeof value[0] !== 'undefined') {\r\n                            API(`${endpoints['doctors']}/${params.getValue(params.id, 'doctor_id')}\r\n                        /shifts/${params.getValue(params.id, 'shift_id')}\r\n                        /services/${params.getValue(params.id, 'service_id')}/bookings/${params.id}\r\n                        ?patientId=${value[0].id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                                },\r\n                                data: {\r\n                                    fullName: data.fullName,\r\n                                    gender: data.gender,\r\n                                    dateOfBirth: data.dateOfBirth,\r\n                                    phone: data.phone,\r\n                                    email: data.email,\r\n                                    address: data.address,\r\n                                }\r\n                            }).then(res => {\r\n                                if (res.status === 200)\r\n                                    swal('Success', '', 'success');\r\n                                getBookings(`?p=${currentPage + 1}`);\r\n                            }).catch(err => {\r\n                                swal(err.response?.data?.message, '', 'error');\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleCellEditCommit = async (params) => {\r\n        const data = await API.get(`${endpoints['bookings']}/${params.id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            delete res.data.doctor_id;\r\n            delete res.data.shift_id;\r\n            delete res.data.service_id;\r\n            delete res.data.patient_id;\r\n            return res.data;\r\n        }).catch(err => console.log(err.response));\r\n\r\n        await API(`${endpoints['doctors']}/${params.getValue(params.id, 'doctor_id')}\r\n        /shifts/${params.getValue(params.id, 'shift_id')}\r\n        /services/${params.getValue(params.id, 'service_id')}\r\n        /bookings/${params.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                ...data,\r\n                [params.field]: params.value\r\n            }\r\n        }).then(res => console.log(res)).catch(err => {\r\n                if (Array.isArray(err.response?.data)) {\r\n                    for (let i = 0; i < err.response?.data?.length; i++) {\r\n                        swal(err.response.data[i].message, '', 'error');\r\n                    }\r\n                }\r\n                else {\r\n                    swal(err.response?.data?.message, '', 'error');\r\n                }\r\n                getBookings(`?p=${currentPage + 1}`)\r\n            })\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n\r\n        if (isDoctorShow) {\r\n            setDoctorShow(false);\r\n        } else if (isShiftShow) {\r\n            setShiftShow(false);\r\n        }\r\n    }\r\n\r\n    function handleSave() {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBookings();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={actionLoading === false ? classes.root : classes.loading}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST BOOKING\" rows={bookings} columns={columns} pageSize={7}\r\n                    createURL=\"/bookings/create\" server={true}\r\n                    btnTitle=\"CREATE\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} handleCellEditCommit={handleCellEditCommit} />\r\n            )}\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {'Choose information to update'}\r\n                    <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                        <SaveAltIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                <ThemeProvider theme={theme}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker style={{ width: 200 }} color=\"primary\" readOnly\r\n                                            InputProps={{ readOnly: true }}\r\n                                            format=\"dd-MM-yyyy\"\r\n                                            onDoubleClick={() => handleChooseDateDoctorShift()}\r\n                                            name=\"dateOfBirth\" value={new Date()} />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </ThemeProvider>\r\n                                <ButtonCustom style={{\r\n                                    margin: '10px 20px 0px 20px', width: '175px'\r\n                                }} title='Choose a doctor'\r\n                                    color=\"primary\" />\r\n                                <ButtonCustom style={{\r\n                                    margin: '10px 0px 0px 0px', width: '175px'\r\n                                }} title='Choose a shift'\r\n                                    color=\"primary\" />\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                <h4>Hiện tại chức năng này đang bảo trì. Bạn có thể hủy phiếu khám bệnh và tạo lại phiếu mới. Xin cảm ơn.</h4>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <div style={{ display: 'none' }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table ref={pdfRef}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                                    Booking Details\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Id</TableCell>\r\n                                <TableCell>{bookingToPDF?.id}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Patient name</TableCell>\r\n                                <TableCell>{bookingToPDF?.fullName}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Gender</TableCell>\r\n                                <TableCell>{bookingToPDF?.gender}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Birthday</TableCell>\r\n                                <TableCell>\r\n                                {`${new Date(bookingToPDF?.dateOfBirth).getDate()}/${new Date(bookingToPDF?.dateOfBirth).getMonth() + 1}/${new Date(bookingToPDF?.dateOfBirth).getFullYear()}`}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Phone</TableCell>\r\n                                <TableCell>{bookingToPDF?.phone}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>{bookingToPDF?.email}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>{bookingToPDF?.address}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>\r\n                                {`${new Date(bookingToPDF?.date).getDate()}/${new Date(bookingToPDF?.date).getMonth() + 1}/${new Date(bookingToPDF?.date).getFullYear()}`}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Doctor</TableCell>\r\n                                <TableCell>\r\n                                {doctors && doctors.filter(d => d.id === bookingToPDF?.doctor_id).map(d => d.lastName + ' ' + d.firstName)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Shift</TableCell>\r\n                                <TableCell>\r\n                                {shifts && shifts.filter(s => s.id === bookingToPDF?.shift_id).map(s => `${s.name} (${s.description})`)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Service</TableCell>\r\n                                <TableCell>\r\n                                {services && services.filter(s => s.id === bookingToPDF?.service_id).map(s => s.name)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    createTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n    Divider, FormControl, FormControlLabel, FormLabel, Grid,\r\n    IconButton, makeStyles, MenuItem, MuiThemeProvider, Radio, RadioGroup,\r\n    Slide, ThemeProvider, Tooltip\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ButtonCustom from \"./Button\";\r\nimport API, { endpoints } from \"../API\";\r\nimport React from \"react\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport DataTable from \"./DataTable\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport swal from \"sweetalert\";\r\nimport { url } from \"../URL\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 60\r\n    },\r\n    background: {\r\n        backgroundColor: '#f5f5f5'\r\n    },\r\n    form: {\r\n        background: 'white'\r\n    },\r\n    info: {\r\n        fontFamily: 'monospace'\r\n    },\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        },\r\n        secondary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FormBooking(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [booking, setBooking] = useState({\r\n        fullName: '',\r\n        gender: '',\r\n        phone: '',\r\n        email: '',\r\n        address: '',\r\n        service: 0\r\n    })\r\n    const [selectedDOB, setSelectedDOB] = useState(new Date());\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [shifts, setShifts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openChoosePhone, setOpenChoosePhone] = useState(false);\r\n    const [openChoosePatient, setOpenChoosePatient] = useState(false);\r\n    const [isDoctorShow, setDoctorShow] = useState(false);\r\n    const [isShiftShow, setShiftShow] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doctorSelected, setDoctorSelected] = useState();\r\n    const [shiftSelected, setShiftSelected] = useState();\r\n    const [infoD, setInfoD] = useState();\r\n    const [infoS, setInfoS] = useState();\r\n    const [patients, setPatients] = useState([]);\r\n    const [patientSelected, setPatientSelected] = useState();\r\n    const [services, setServices] = useState([]);\r\n\r\n    const columnsDoctor = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: ' ',\r\n            renderCell: (params) => {\r\n                const account_id = params.getValue(params.id, 'account_id');\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                return (\r\n                    <img src={account[0]?.image} width=\"100%\" />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'firstName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'lastName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            width: 200,\r\n            valueGetter: (params) => {\r\n                return `${params.getValue(params.id, 'lastName')} ${params.getValue(params.id, 'firstName')}`\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200\r\n        }\r\n    ]\r\n\r\n    const columnsShift = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Shift name',\r\n            width: 250\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Shift description',\r\n            width: 500\r\n        },\r\n        {\r\n            field: 'maxBookings',\r\n            headerName: 'Max number of bookings',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'isMax',\r\n            headerName: 'Are bookings max',\r\n            width: 200\r\n        }\r\n    ]\r\n\r\n    const columnsPatient = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'firstName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'lastName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            width: 300,\r\n            valueGetter: (params) => {\r\n                return `${params.getValue(params.id, 'lastName')} ${params.getValue(params.id, 'firstName')}`\r\n            }\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'Date of Birth',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 300\r\n        }\r\n    ]\r\n\r\n    function getServices() {\r\n        API.get(`${endpoints['services']}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setServices(res.data.content)\r\n            })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!doctorSelected) {\r\n            swal('Please choose a doctor', '', 'warning');\r\n            return;\r\n        }\r\n        if (!shiftSelected) {\r\n            swal('Please choose a shift', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        let param = \"\";\r\n        if (patientSelected)\r\n            param = `?patientId=${patientSelected.id}`\r\n\r\n        API(`${endpoints['doctors']}/${doctorSelected.id}/shifts/${shiftSelected.id}\r\n        /services/${booking.service}/bookings${param}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                fullName: booking.fullName,\r\n                gender: booking.gender,\r\n                dateOfBirth: selectedDOB,\r\n                phone: booking.phone,\r\n                email: booking.email,\r\n                address: booking.address\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                swal('Success', '', 'success');\r\n                history.push(\"/bookings\");\r\n            }\r\n        })\r\n            .catch(err => {\r\n                if (Array.isArray(err.response?.data)) {\r\n                    for (let i = 0; i < err.response.data.length; i++) {\r\n                        swal(err.response.data[i].message, '', 'error');\r\n                    }\r\n                } else if (err.response?.status === 401) {\r\n                    if (window.confirm('Login expired! Please login again.')) {\r\n                        localStorage.clear();\r\n                        history.push(url['login']);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    function handleChange(event) {\r\n        let temp = { ...booking };\r\n        temp[event.target.name] = event.target.value;\r\n        setBooking(temp);\r\n    }\r\n\r\n    const handleChooseDoctor = async () => {\r\n        if (!selectedDate) {\r\n            swal('Please choose a date', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        if (!shiftSelected) {\r\n            const doctorIds = await API(`${endpoints['schedules']}`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: selectedDate\r\n            }).then(res => {\r\n                if (res.data.content.length == 0) {\r\n                    swal('There are not any doctors available on this date', '', 'warning');\r\n                }\r\n                return [...new Set(res.data.content.map(sh => sh.doctor_id))];\r\n            })\r\n                .catch(err => console.log(err.response));\r\n\r\n            let promise = [];\r\n            let doctorArr = [];\r\n            let accountIds = [];\r\n            for (let i = 0; i < doctorIds.length; i++) {\r\n                promise.push(\r\n                    API.get(`${endpoints['doctors']}/${doctorIds[i]}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => doctorArr.push(res.data))\r\n                        .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promise).then(() => {\r\n                setDoctors(doctorArr);\r\n                accountIds = doctorArr.map(d => d.account_id);\r\n\r\n                let promises = [];\r\n                let accountArr = [];\r\n                for (let i = 0; i < accountIds.length; i++) {\r\n                    promises.push(\r\n                        API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                            headers: {\r\n                                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                            }\r\n                        }).then(res => accountArr.push(res.data))\r\n                            .catch(err => console.log(err.response))\r\n                    )\r\n                }\r\n                Promise.all(promises).then(() => {\r\n                    setAccounts(accountArr);\r\n                    setLoading(false);\r\n                    setOpen(true);\r\n                    setDoctorShow(true);\r\n                });\r\n            });\r\n        } else {\r\n            const doctorIds = await API(`${endpoints['shifts']}/${shiftSelected.id}/schedules`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: selectedDate\r\n            }).then(res => {\r\n                if (res.data.content.length == 0) {\r\n                    swal('There are not any doctors available on this date and this shift', '', 'warning');\r\n                }\r\n                return [...new Set(res.data.content.map(sh => sh.doctor_id))];\r\n            })\r\n                .catch(err => console.log(err.response));\r\n\r\n            let promise = [];\r\n            let doctorArr = [];\r\n            let accountIds = [];\r\n            for (let i = 0; i < doctorIds.length; i++) {\r\n                promise.push(\r\n                    API.get(`${endpoints['doctors']}/${doctorIds[i]}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => doctorArr.push(res.data))\r\n                        .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promise).then(() => {\r\n                setDoctors(doctorArr);\r\n                accountIds = doctorArr.map(d => d.account_id);\r\n\r\n                let promises = [];\r\n                let accountArr = [];\r\n                for (let i = 0; i < accountIds.length; i++) {\r\n                    promises.push(\r\n                        API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                            headers: {\r\n                                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                            }\r\n                        }).then(res => accountArr.push(res.data))\r\n                            .catch(err => console.log(err.response))\r\n                    )\r\n                }\r\n                Promise.all(promises).then(() => {\r\n                    setAccounts(accountArr);\r\n                    setLoading(false);\r\n                    setOpen(true);\r\n                    setDoctorShow(true);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleChooseShift = async () => {\r\n        if (!selectedDate) {\r\n            swal('Please choose a date', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        if (!doctorSelected) {\r\n            const shiftIds = await API(`${endpoints['schedules']}`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: selectedDate\r\n            }).then(res => {\r\n                if (res.data.content.length == 0) {\r\n                    swal('There are not any shifts available on this date', '', 'warning');\r\n                }\r\n                return [...new Set(res.data.content.map(sh => sh.shift_id))];\r\n            })\r\n                .catch(err => console.log(err.response));\r\n\r\n            let promises = [];\r\n            let shiftArr = [];\r\n            let isMaxArr = [];\r\n            for (let i = 0; i < shiftIds.length; i++) {\r\n                promises.push(\r\n                    API.get(`${endpoints['shifts']}/${shiftIds[i]}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => shiftArr.push(res.data))\r\n                        .catch(err => console.log(err.response)),\r\n\r\n                    API(`${endpoints['shifts']}/${shiftIds[i]}/bookings/date`, {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        },\r\n                        data: selectedDate\r\n                    }).then(res => isMaxArr.push(res.data))\r\n                        .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promises).then(() => {\r\n                for (let i = 0; i < shiftArr.length; i++) {\r\n                    Object.assign(shiftArr[i], { isMax: isMaxArr[i] })\r\n                }\r\n\r\n                setShifts(shiftArr);\r\n                setLoading(false);\r\n                setOpen(true);\r\n                setShiftShow(true);\r\n            });\r\n        } else {\r\n            const shiftIds = await API(`${endpoints['doctors']}/${doctorSelected.id}/schedules`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: selectedDate\r\n            }).then(res => {\r\n                if (res.data.content.length == 0) {\r\n                    swal(`There are not any shifts available on this date and doctor: \r\n                    ${doctorSelected.lastName + ' ' + doctorSelected.firstName}`, '', 'warning');\r\n                }\r\n                return [...new Set(res.data.content.map(sh => sh.shift_id))];\r\n            })\r\n                .catch(err => console.log(err.response));\r\n\r\n            let promises = [];\r\n            let shiftArr = [];\r\n            let isMaxArr = [];\r\n            for (let i = 0; i < shiftIds?.length; i++) {\r\n                promises.push(\r\n                    API.get(`${endpoints['shifts']}/${shiftIds[i]}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => shiftArr.push(res.data))\r\n                        .catch(err => console.log(err.response)),\r\n\r\n                    API(`${endpoints['shifts']}/${shiftIds[i]}/bookings/date`, {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        },\r\n                        data: selectedDate\r\n                    }).then(res => isMaxArr.push(res.data))\r\n                        .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promises).then(() => {\r\n                for (let i = 0; i < shiftArr.length; i++) {\r\n                    Object.assign(shiftArr[i], { isMax: isMaxArr[i] })\r\n                }\r\n\r\n                setShifts(shiftArr);\r\n                setLoading(false);\r\n                setOpen(true);\r\n                setShiftShow(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n\r\n        if (isDoctorShow) {\r\n            setDoctorSelected();\r\n            setDoctorShow(false);\r\n        } else if (isShiftShow) {\r\n            setShiftSelected();\r\n            setShiftShow(false);\r\n        }\r\n    }\r\n\r\n    function handleSave() {\r\n        if (isDoctorShow && !doctorSelected) {\r\n            swal('Please choose a doctor', '', 'warning');\r\n            return;\r\n        } else if (isShiftShow && !shiftSelected) {\r\n            swal('Please choose a shift', '', 'warning');\r\n            return;\r\n        } else if (openChoosePatient && !patientSelected) {\r\n            swal('Please choose a patient', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        if (doctorSelected || shiftSelected) {\r\n            if (doctorSelected) {\r\n                setInfoD(`Doctor: ${doctorSelected.lastName} ${doctorSelected.firstName}`);\r\n            }\r\n            if (shiftSelected) {\r\n                setInfoS(`Shift: ${shiftSelected.description}`);\r\n            }\r\n\r\n            setOpen(false);\r\n            setDoctorShow(false);\r\n            setShiftShow(false);\r\n        }\r\n\r\n        if (patientSelected) {\r\n            setOpenChoosePatient(false);\r\n            setBooking({\r\n                fullName: patientSelected.lastName + ' ' + patientSelected.firstName,\r\n                gender: patientSelected.gender,\r\n                phone: patientSelected.phone,\r\n                email: patientSelected.email,\r\n                address: patientSelected.address,\r\n                service: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleSelectionChange(newSelection) {\r\n        if (isDoctorShow) {\r\n            API.get(`${endpoints['doctors']}/${newSelection}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setDoctorSelected(res.data))\r\n                .catch(err => console.log(err.response))\r\n        }\r\n        else if (isShiftShow) {\r\n            API.get(`${endpoints['shifts']}/${newSelection}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setShiftSelected(res.data))\r\n                .catch(err => console.log(err.response))\r\n        }\r\n        else if (openChoosePatient) {\r\n            API.get(`${endpoints['patients']}/${newSelection}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setPatientSelected(res.data))\r\n                .catch(err => console.log(err.response))\r\n        }\r\n    }\r\n\r\n    function handleChoosePatient() {\r\n        setOpenChoosePhone(true);\r\n    }\r\n\r\n    function handleCloseChoosePhone() {\r\n        setOpenChoosePhone(false);\r\n    }\r\n\r\n    function handleCloseChoosePatient() {\r\n        setOpenChoosePatient(false);\r\n    }\r\n\r\n    function handleGetPatientByPhone(event) {\r\n        event.preventDefault();\r\n\r\n        API.get(`${endpoints['patients']}/phone/${booking.phone}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPatients(res.data);\r\n            setOpenChoosePatient(true);\r\n            setOpenChoosePhone(false);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPhoneNumber', (value) => {\r\n            const regex = new RegExp(\"(84|0[3|5|7|8|9])+([0-9]{8})\\\\b\");\r\n            return regex.test(value);\r\n        })\r\n        ValidatorForm.addValidationRule('isServiceChosen', (value) => {\r\n            return value !== 0;\r\n        })\r\n\r\n        getServices();\r\n    }, [])\r\n\r\n    function isRowSelectable(params) {\r\n        return params.row.isMax !== true;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid id=\"grid\" className={classes.root} container spacing={4}>\r\n                <Grid className={classes.background} item xs={6}>\r\n                    <img src={process.env.PUBLIC_URL + '/images/gui7.svg'} width=\"100%\" height=\"500\" />\r\n                </Grid>\r\n                <Grid container className={classes.form} item xs={6}>\r\n                    <ValidatorForm onSubmit={handleSubmit}>\r\n                        <Grid container item xs={12} spacing={4}>\r\n                            <Grid item xs={6}>\r\n                                <TextValidator className={classes.input} name=\"fullName\" label=\"Full name *\"\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    value={booking.fullName}\r\n                                    onChange={handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextValidator name=\"gender\" label=\"Gender *\"\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    value={booking.gender}\r\n                                    onChange={handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <ThemeProvider theme={theme}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker style={{ width: 200 }}\r\n                                            label=\"DOB *\" format=\"dd-MM-yyyy\"\r\n                                            onChange={(date) => setSelectedDOB(date)}\r\n                                            name=\"dateOfBirth\" value={selectedDOB} />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </ThemeProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextValidator name=\"phone\" label=\"Phone *\"\r\n                                    validators={['required', 'isPhoneNumber']}\r\n                                    errorMessages={['this field is required', 'invalid phone number']}\r\n                                    value={booking.phone}\r\n                                    onChange={handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextValidator name=\"email\" label=\"Email *\"\r\n                                    validators={['required', 'isEmail']}\r\n                                    errorMessages={['this field is required', 'invalid email']}\r\n                                    value={booking.email}\r\n                                    onChange={handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextValidator name=\"address\" label=\"Address *\"\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    value={booking.address}\r\n                                    onChange={handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <ThemeProvider theme={theme}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker style={{ width: 200 }}\r\n                                            label=\"Date *\" format=\"dd-MM-yyyy\"\r\n                                            minDate={new Date()}\r\n                                            onChange={(date) => {\r\n                                                setSelectedDate(date);\r\n                                                setDoctorSelected();\r\n                                                setShiftSelected();\r\n                                            }}\r\n                                            name=\"date\" value={selectedDate} />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </ThemeProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <ButtonCustom style={{\r\n                                    margin: '10px 0px 0px 0px', width: '175px'\r\n                                }} title='Choose a doctor'\r\n                                    color=\"primary\" onClick={() => handleChooseDoctor(\"?p=1\")} />\r\n                                {\r\n                                    doctorSelected ? (\r\n                                        <Tooltip arrow title={infoD}>\r\n                                            <InfoIcon />\r\n                                        </Tooltip>\r\n                                    ) : ''\r\n                                }\r\n                                <ButtonCustom style={{\r\n                                    margin: '10px 0px 0px 0px', width: '175px'\r\n                                }} title='Choose a shift'\r\n                                    color=\"primary\" onClick={() => handleChooseShift()} />\r\n                                {\r\n                                    shiftSelected ? (\r\n                                        <Tooltip arrow title={infoS}>\r\n                                            <InfoIcon />\r\n                                        </Tooltip>\r\n                                    ) : ''\r\n                                }\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <SelectValidator\r\n                                    style={{ marginTop: -25, minWidth: 200 }}\r\n                                    validators={['isServiceChosen']}\r\n                                    errorMessages={['this field is required']} value={booking.service}\r\n                                    onChange={(event) => setBooking({ ...booking, service: event.target.value })}>\r\n                                    <MenuItem value={0}>Choose service</MenuItem>\r\n                                    {services && services.map(s => <MenuItem value={s.id}>{s.name}</MenuItem>)}\r\n                                </SelectValidator>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <ButtonCustom style={{\r\n                            margin: '10px 0px 0px 0px', position: 'absolute',\r\n                            top: 660, right: 75\r\n                        }} title='Save'\r\n                            color=\"darkSecondary\" type=\"submit\" />\r\n                        <ButtonCustom style={{\r\n                            margin: '10px 0px 0px 0px', position: 'absolute',\r\n                            top: 660, right: 620\r\n                        }} title='Go Back'\r\n                            color=\"darkSecondary\" onClick={handleGoBack} />\r\n                    </ValidatorForm>\r\n                </Grid>\r\n            </Grid>\r\n            {!loading ? (\r\n                <Dialog\r\n                    fullScreen\r\n                    open={open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {isDoctorShow ? 'Choose a doctor' : 'Choose a shift'}\r\n                        <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                            <SaveAltIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                    {isDoctorShow ? (\r\n                                        <DataTable rows={doctors} columns={columnsDoctor}\r\n                                            btnTitle=\"\" createURL=\"\" header=\"\" handleSelectionChange={handleSelectionChange} />\r\n                                    ) : (isShiftShow ? (\r\n                                        <DataTable rows={shifts} columns={columnsShift}\r\n                                            btnTitle=\"\" createURL=\"\" header=\"\" \r\n                                            handleSelectionChange={handleSelectionChange}\r\n                                            isRowSelectable={isRowSelectable} />\r\n                                    ) : '')}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            ) : ''}\r\n            <ButtonCustom style={{\r\n                margin: '10px 0px 0px 0px', position: 'absolute',\r\n                top: 80, right: 0\r\n            }} title='Loyal patient' variant=\"outlined\"\r\n                color=\"lightPrimary\" onClick={handleChoosePatient} />\r\n            <Dialog\r\n                open={openChoosePhone}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleCloseChoosePhone}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseChoosePhone} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {'Enter a phone number'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        <ValidatorForm onSubmit={handleGetPatientByPhone}>\r\n                            <TextValidator style={{ marginLeft: 10 }} name=\"phone\" label=\"Phone *\"\r\n                                validators={['required', 'isPhoneNumber']}\r\n                                errorMessages={['this field is required', 'invalid phone number']}\r\n                                value={booking.phone}\r\n                                onChange={handleChange} />\r\n                            <ButtonCustom style={{\r\n                                margin: '20px 0px 0px 126px'\r\n                            }} title='Submit'\r\n                                type=\"submit\"\r\n                                color=\"primary\" />\r\n                        </ValidatorForm>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog\r\n                fullScreen\r\n                open={openChoosePatient}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleCloseChoosePatient}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseChoosePatient} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {'Choose a patient'}\r\n                    <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                        <SaveAltIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {patients ? (\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                    <DataTable rows={patients} columns={columnsPatient}\r\n                                        btnTitle=\"\" createURL=\"\" header=\"\"\r\n                                        handleSelectionChange={handleSelectionChange} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : ''\r\n                        }\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </ThemeProvider>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport ButtonCustom from \"../../../components/Button\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../../../currentEndpoint\";\r\nimport { url } from \"../../../URL\";\r\nimport { SideBarContext } from \"../Drawer\";\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        width: '100%',\r\n        marginTop: 50,\r\n        background: 'white'\r\n    }\r\n})\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue['A400']\r\n        }\r\n    }\r\n})\r\n\r\nexport default function Patients() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [patients, setPatients] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const context = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'account_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Avatar',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                \r\n                const account_id = params.getValue(params.id, 'account_id');\r\n                const account = accounts.filter(a => a.id.trim() === account_id.trim())[0];\r\n                let url = `/accounts/${account_id}`;\r\n                let url1 = `/patients/${params.id}`;\r\n                return (\r\n                    <Link style={{ textDecoration: 'none', color: 'black', width: '100%' }} \r\n                    to={context.currentAuth?.role === 'ROLE_ADMIN' ? url : url1}>\r\n                        <img style={{\r\n                            width: '70%',\r\n                            height: '55px',\r\n                            padding: '5px',\r\n                            marginTop: 20\r\n                        }} src={account ? account.image : ''} />\r\n                    </Link>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'firstName',\r\n            headerName: 'First Name',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'lastName',\r\n            headerName: 'Last Name',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'DOB',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'dateOfBirth')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'joinDate',\r\n            headerName: 'Join Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            width: 150,\r\n            align: 'center',\r\n            renderCell: (params) => (<ButtonCustom onClick={() => {\r\n                const id = params.getValue(params.id, \"id\");\r\n                const account_id = params.getValue(params.id, \"account_id\");\r\n                const account = accounts.filter(a => a.id === account_id);\r\n                swal({\r\n                    title: \"Are you sure to delete?\",\r\n                    icon: \"warning\",\r\n                    buttons: {\r\n                        cancel: 'Cancel',\r\n                        inactive: {\r\n                            text: 'Inactivate',\r\n                            value: 'inactive'\r\n                        },\r\n                        delete: {\r\n                            text: 'Delete anyway',\r\n                            value: 'delete'\r\n                        }\r\n                    }\r\n                }).then((value) => {\r\n                    switch (value) {\r\n                        case \"inactive\":\r\n                            let formData = new FormData();\r\n                            formData.append('username', account[0].username);\r\n                            formData.append('password', account[0].password);\r\n                            formData.append('image', account[0].image);\r\n                            formData.append('active', false);\r\n                            return API(`${endpoints['roles']}/${account[0].role_id}/accounts/${account_id}`, {\r\n                                method: 'put',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token'),\r\n                                    \"Content-type\": \"multipart/form-data\"\r\n                                },\r\n                                data: formData\r\n                            })\r\n                        case \"delete\":\r\n                            return API(`${endpoints['accounts']}/${account_id}/patients/${id}`, {\r\n                                method: 'delete',\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + localStorage.getItem('token')\r\n                                }\r\n                            })\r\n                    }\r\n                }).then(response => {\r\n                    if (response?.status === 200) {\r\n                        if (response?.config?.method === 'put') {\r\n                            swal(\"Inactivated\", \"\", \"success\");\r\n                        } else if (response?.config?.method === 'delete') {\r\n                            swal(\"Deleted\", \"\", \"success\");\r\n                            getPatients(\"?p=\" + (currentPage + 1));\r\n                        }\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.response);\r\n                    if (error?.response?.status === 401) {\r\n                        if (window.confirm('Login expired! Please login again.')) {\r\n                            localStorage.clear();\r\n                            history.push(url['login']);\r\n                        }\r\n                    }\r\n                })\r\n            }} color='primary' title='Delete' />)\r\n        }\r\n    ]\r\n\r\n    const getPatients = async (page = \"?p=1\") => {\r\n        setLoading(true);\r\n\r\n        const accountIds = await API.get(`${endpoints['patients']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPatients(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            setLoading(false);\r\n\r\n            return res.data.content.map(a => a.account_id);\r\n        }).catch(err => console.log(err.response));\r\n\r\n        let promises = [];\r\n        let temp = [];\r\n        for (let i = 0; i < accountIds.length; i++) {\r\n            promises.push(API.get(`${endpoints['accounts']}/${accountIds[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => temp.push(res.data)));\r\n        }\r\n        Promise.all(promises).then(() => setAccounts(temp));\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        getPatients(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPatients();\r\n        context.setPage(window.location.href.substring(indexToSubStrCurrentEndpoint));\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST PATIENT\" rows={patients} columns={columns} pageSize={7}\r\n                    createURL=\"\" server={true}\r\n                    btnTitle=\"\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button, Chip, createTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, Paper, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextareaAutosize, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport DataTable from \"./DataTable\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport API, { endpoints } from \"../API\";\r\nimport ButtonCustom from \"./Button\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../App\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        },\r\n        secondary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function FormPrescription() {\r\n    const [open, setOpen] = useState(false);\r\n    const [patientShow, setPatientShow] = useState(false);\r\n    const [medicineShow, setMedicineShow] = useState(false);\r\n    const [patients, setPatients] = useState([]);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [currentPagePatient, setCurrentPagePatient] = useState(0);\r\n    const [currentPageMedicine, setCurrentPageMedicine] = useState(0);\r\n    const [totalElementsPatient, setTotalElementsPatient] = useState(0);\r\n    const [totalElementsMedicine, setTotalElementsMedicine] = useState(0);\r\n    const [patientSelected, setPatientSelected] = useState();\r\n    const [bookings, setBookings] = useState();\r\n    const [bookingSelected, setBookingSelected] = useState();\r\n    const [service, setService] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [medicineSelected, setMedicineSelected] = useState();\r\n    const [selectionModel, setSelectionModel] = useState();\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext);\r\n    const [reRender, setReRender] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n\r\n    const columnsPatient = [\r\n        {\r\n            field: 'id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'firstName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'lastName',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            width: 300,\r\n            valueGetter: (params) => {\r\n                return `${params.getValue(params.id, 'lastName')} ${params.getValue(params.id, 'firstName')}`\r\n            }\r\n        },\r\n        {\r\n            field: 'gender',\r\n            headerName: 'Gender',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'dateOfBirth',\r\n            headerName: 'Date of Birth',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'phone',\r\n            headerName: 'Phone',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 300\r\n        }\r\n    ]\r\n\r\n    const columnsMedicine = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 150\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'price',\r\n            headerName: 'Price',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'unit',\r\n            headerName: 'Unit',\r\n            width: 150\r\n        },\r\n        {\r\n            field: 'image',\r\n            headerName: 'Image',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                const img = params.getValue(params.id, 'image');\r\n                let id = params.getValue(params.id, 'id');\r\n                return (\r\n                    <>\r\n                        <img id={'image' + id} style={{\r\n                            width: '70%',\r\n                            height: '100%',\r\n                            padding: '5px'\r\n                        }} src={img} alt='No image' />\r\n\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    const columnsBooking = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID'\r\n        },\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            width: 200,\r\n            editable: true\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker style={{ width: 200 }} color=\"primary\" readOnly\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'date')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'service_id',\r\n            headerName: 'Service',\r\n            width: 200,\r\n        }\r\n    ]\r\n\r\n    async function handleSelectionChange(newSelection) {\r\n        if (patientShow) {\r\n            const patientId = await API.get(`${endpoints['patients']}/${newSelection}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => {\r\n                setPatientSelected(res.data);\r\n\r\n                return res.data.id;\r\n            })\r\n                .catch(err => console.log(err.response))\r\n\r\n\r\n            await API.get(`${endpoints['patients']}/${patientId}/bookings/date`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setBookings(res.data.content))\r\n                .catch(err => console.log(err.response))\r\n\r\n        } else if (medicineShow) {\r\n            setSelectionModel(newSelection);\r\n            let promises = [];\r\n            let medicineArr = [];\r\n            for (let i = 0; i < newSelection.length; i++) {\r\n                promises.push(\r\n                    API.get(`${endpoints['medicines']}/${newSelection[i]}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => medicineArr.push(res.data))\r\n                        .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promises).then(() => setMedicineSelected(medicineArr));\r\n        }\r\n    }\r\n\r\n    function handleSelectionChangeBooking(newSelection) {\r\n        API.get(`${endpoints['bookings']}/${newSelection}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setBookingSelected(res.data))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n\r\n    function getPatients(page = \"?p=1\") {\r\n        API.get(`${endpoints['patients']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPatients(res.data.content);\r\n            setCurrentPagePatient(res.data.number);\r\n            setTotalElementsPatient(res.data.totalElements);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function getMedicines(page = \"?p=1\") {\r\n        API.get(`${endpoints['medicines']}${page}&active=true`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setMedicines(res.data.content);\r\n            setCurrentPageMedicine(res.data.number);\r\n            setTotalElementsMedicine(res.data.totalElements);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function getAccount() {\r\n        API.get(`${endpoints['accounts']}/${patientSelected?.account_id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setAccount(res.data))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handleOpenPatient(event) {\r\n        getPatients(`?p=${currentPagePatient + 1}`);\r\n\r\n        setOpen(true);\r\n        setPatientShow(true);\r\n        setMedicineShow(false);\r\n    }\r\n\r\n    function handleOpenMedicine(event) {\r\n        getMedicines(`?p=${currentPageMedicine + 1}`);\r\n\r\n        setOpen(true);\r\n        setPatientShow(false);\r\n        setMedicineShow(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        if (patientShow) {\r\n            setPatientSelected();\r\n            setAccount();\r\n            setBookings();\r\n            setBookingSelected();\r\n            setService();\r\n            setPatientShow(false);\r\n        } else if (medicineShow) {\r\n            setMedicineSelected();\r\n            setMedicineShow(false);\r\n        }\r\n        setSelectionModel();\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleSave() {\r\n        if (patientShow) {\r\n            if (!patientSelected) {\r\n                swal('Please choose a patient', '', 'warning');\r\n                return;\r\n            }\r\n            if (!bookingSelected) {\r\n                swal('Please choose a booking', '', 'warning');\r\n                return;\r\n            }\r\n\r\n            API.get(`${endpoints['services']}/${bookingSelected.service_id}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => setService(res.data))\r\n                .catch(err => console.log(err));\r\n\r\n            getAccount();\r\n            setPatientShow(false);\r\n        } else if (medicineShow) {\r\n            if (!medicineSelected) {\r\n                swal('Please choose a medicine', '', 'warning');\r\n                return;\r\n            }\r\n            setMedicineShow(false);\r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    function handlePageChange(newPage) {\r\n        if (patientShow) {\r\n            getPatients(`?p=${newPage + 1}`);\r\n            setCurrentPagePatient(newPage);\r\n        } else if (medicineShow) {\r\n            getMedicines(`?p=${newPage + 1}`);\r\n            setCurrentPageMedicine(newPage);\r\n        }\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        if (!patientSelected) {\r\n            swal('Please choose a patient', '', 'warning');\r\n            return;\r\n        }\r\n        // if (!medicineSelected) {\r\n        //     swal('Please choose medicines', '', 'warning');\r\n        //     return;\r\n        // }\r\n        for (let i = 0; i < medicineSelected?.length; i++) {\r\n            if (!medicineSelected[i].quantity) {\r\n                swal('Please enter a value of quantity', '', 'warning');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const service = await API.get(`${endpoints['services']}/${bookingSelected.service_id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            return {\r\n                fee: res.data.price,\r\n                name: res.data.name\r\n            }\r\n        })\r\n            .catch(err => console.log(err.response));\r\n\r\n        let promises = [];\r\n        const prescription = await API(`${endpoints['doctors']}/${authContext.currentAuth.userId}\r\n        /patients/${patientSelected.id}/prescriptions`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: {\r\n                date: new Date(),\r\n                serviceFee: service.fee,\r\n                serviceName: service.name,\r\n                description: description || ''\r\n            }\r\n        }).then(res => {\r\n            promises.push(res.data);\r\n            swal('Success', '', 'success');\r\n            return res.data;\r\n        })\r\n            .catch(err => console.log(err.response))\r\n\r\n        Promise.all(promises).then(() => {\r\n            for (let i = 0; i < medicineSelected?.length; i++) {\r\n                let formData = new FormData();\r\n                formData.append('quantity', medicineSelected[i].quantity);\r\n                formData.append('unitPrice', medicineSelected[i].price);\r\n                formData.append('totalPrice', parseInt(medicineSelected[i].quantity) * parseInt(medicineSelected[i].price));\r\n                API(`${endpoints['prescriptions']}/${prescription.id}/medicines/${medicineSelected[i].id}/prescriptionDetails`, {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    },\r\n                    data: formData\r\n                }).then(res => {\r\n                    console.log(res.data);\r\n                    swal('Success', '', 'success');\r\n                })\r\n                    .catch(err => console.log(err.response))\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleChange(medicineId, event) {\r\n        let medicine = medicineSelected.filter(m => m.id === medicineId)[0];\r\n        Object.assign(medicine, { 'quantity': event.target.value });\r\n        setReRender(!reRender);\r\n    }\r\n\r\n    function handleGoBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    function handleDelete(value) {\r\n        setSelectionModel(medicineSelected.filter(item => item !== value).map(item => item.id));\r\n        setMedicineSelected(medicineSelected.filter(item => item !== value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={6}>\r\n                    <form>\r\n                        <Button id=\"patient\" variant=\"outlined\" onClick={handleOpenPatient}>\r\n                            Choose patient\r\n                        </Button>\r\n                        <Button id=\"medicine\" variant=\"outlined\" onClick={handleOpenMedicine}>\r\n                            Choose medicine\r\n                        </Button>\r\n                    </form>\r\n                    <Dialog\r\n                        disableEnforceFocus\r\n                        fullScreen\r\n                        open={open}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            {patientShow ? \"Choose patient\" : \"Choose medicine\"}\r\n                            <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                                <SaveAltIcon />\r\n                            </IconButton>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                {patientShow && patients ? (\r\n                                    <>\r\n                                        <DataTable rows={patients} columns={columnsPatient}\r\n                                            btnTitle=\"\" createURL=\"\" header=\"\" server={true}\r\n                                            rowCount={totalElementsPatient} currentPage={currentPagePatient}\r\n                                            pageSize={7}\r\n                                            handleSelectionChange={handleSelectionChange} />\r\n                                        {bookings ? (\r\n                                            <>\r\n                                                <Typography variant=\"h6\">Total bookings of this patient today</Typography>\r\n                                                <DataTable rows={bookings} columns={columnsBooking}\r\n                                                    btnTitle=\"\" createURL=\"\" header=\"\"\r\n                                                    handleSelectionChange={handleSelectionChangeBooking} />\r\n                                            </>\r\n                                        ) : ''}\r\n                                    </>\r\n                                ) : (medicineShow && medicines ? (\r\n                                    <DataTable rows={medicines} columns={columnsMedicine}\r\n                                        btnTitle=\"\" createURL=\"\" header=\"\"\r\n                                        server={true} rowCount={totalElementsMedicine} currentPage={currentPageMedicine}\r\n                                        handleSelectionChange={handleSelectionChange}\r\n                                        selectionModel={selectionModel} pageSize={5}\r\n                                        checkboxSelection={true} handlePageChange={handlePageChange} />\r\n                                ) : '')}\r\n                            </DialogContentText>\r\n                            {medicineSelected && medicineShow && medicineSelected.map(m => <Chip\r\n                                style={{ marginRight: 10 }}\r\n                                label={m.name}\r\n                                onDelete={() => handleDelete(m)} />)}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    {patientSelected || medicineSelected ? (\r\n                        <Grid container spacing={4} style={{ marginTop: 50, backgroundColor: '#e1f5fe' }}>\r\n                            <Grid item xs={3}>\r\n                                {patientSelected ? (\r\n                                    <>\r\n                                        <img src={account?.image} width=\"100%\" height=\"150\" />\r\n                                        <p style={{ textAlign: 'center' }}>\r\n                                            {patientSelected?.lastName + ' ' + patientSelected?.firstName}\r\n                                        </p>\r\n                                    </>\r\n                                ) : ''}\r\n                                <TextareaAutosize\r\n                                    maxRows={10}\r\n                                    aria-label=\"description of prescription\"\r\n                                    placeholder=\"Description....\"\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                {medicineSelected ? (\r\n                                    <TableContainer component={Paper} style={{ overflow: 'auto', height: 400 }}>\r\n                                        <Table arial-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Name</TableCell>\r\n                                                    <TableCell>Description</TableCell>\r\n                                                    <TableCell>Unit</TableCell>\r\n                                                    <TableCell>Price</TableCell>\r\n                                                    <TableCell>Quantity</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {medicineSelected && medicineSelected.map(m => (\r\n                                                    <TableRow key={m.id}>\r\n                                                        <TableCell>{m.name}</TableCell>\r\n                                                        <TableCell>{m.description}</TableCell>\r\n                                                        <TableCell>{m.unit}</TableCell>\r\n                                                        <TableCell>{m.price}</TableCell>\r\n                                                        <TableCell>\r\n                                                            <TextField type=\"number\"\r\n                                                                onChange={(event) => handleChange(m.id, event)} />\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                ) : ''}\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : ''}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table arial-label=\"prescription\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={3}>\r\n                                        {authContext.currentAuth?.lastName + ' ' + authContext.currentAuth?.firstName}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={3}>\r\n                                        {authContext.currentAuth?.address}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={3}>\r\n                                        {authContext.currentAuth?.phone}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell colSpan={2}>\r\n                                        {`${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}`}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Patient name</TableCell>\r\n                                    <TableCell colSpan={2}>\r\n                                        {patientSelected ? patientSelected.lastName + ' ' + patientSelected.firstName : ''}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell rowSpan={medicineSelected?.length + 1}>Medicine</TableCell>\r\n                                </TableRow>\r\n                                {medicineSelected && medicineSelected.map(m => {\r\n                                    return (\r\n                                        <TableRow>\r\n                                            <TableCell>{m.name}</TableCell>\r\n                                            <TableCell>{m.quantity} {m.unit}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                                <TableRow>\r\n                                    <TableCell>Service name</TableCell>\r\n                                    <TableCell>{service?.name}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Service fee</TableCell>\r\n                                    <TableCell>{service?.price || 0} $</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ButtonCustom style={{\r\n                        margin: '40px 0px 0px 225px',\r\n                    }} title='Create Prescription'\r\n                        color=\"primary\" onClick={handleSubmit} />\r\n                </Grid>\r\n            </Grid>\r\n            <ButtonCustom style={{\r\n                margin: '10px 0px 0px 0px', position: 'absolute',\r\n                top: 110, right: 0\r\n            }} title='Go Back'\r\n                color=\"primary\" onClick={handleGoBack} />\r\n        </>\r\n    )\r\n}","import { createTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, \r\n    IconButton, makeStyles, Paper, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport swal from \"sweetalert\";\r\nimport { url } from \"../../../URL\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue['A400']\r\n        }\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    root: { \r\n        height: theme.spacing(50), \r\n        width: '100%', \r\n        marginTop: theme.spacing(6) + 2,\r\n        [theme.breakpoints.down('xs')]: {\r\n          marginTop: theme.spacing(6) + 2\r\n        }, \r\n        background: 'white'\r\n      },\r\n})\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Prescriptions() {\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [prescriptionDetails, setPrescriptionDetails] = useState([]);\r\n    const [openDetails, setOpenDetails] = useState(false);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 350,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <Link onClick={() => getPrescriptionDetails(params.id)}\r\n                    style={{textDecoration: 'none', color:'blue'}}>\r\n                        {params.id}\r\n                    </Link>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'doctor_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'patient_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'doctor',\r\n            headerName: 'Doctor',\r\n            width: 250,\r\n            renderCell: (params) => {\r\n                const doctor_id = params.getValue(params.id, 'doctor_id');\r\n                const doctor = doctors.filter(d => d.id === doctor_id)[0];\r\n                return (\r\n                    <p>{doctor?.firstName}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'patient',\r\n            headerName: 'Patient',\r\n            width: 250,\r\n            renderCell: (params) => {\r\n                const patient_id = params.getValue(params.id, 'patient_id');\r\n                const patient = patients.filter(p => p.id === patient_id)[0];\r\n                return (\r\n                    <p>{patient?.lastName + ' ' + patient?.firstName}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 250,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{readOnly: true}}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'serviceFee',\r\n            headerName: 'Service Fee',\r\n            width: 200\r\n        }\r\n    ]\r\n\r\n    function handlePageChange(newPage) {\r\n        getPrescriptions(`?p=${newPage + 1}`);\r\n        setCurrentPage(newPage);\r\n    }\r\n\r\n    async function getPrescriptions(page=\"?p=1\") {\r\n        setLoading(true);\r\n\r\n        const data = await API.get(`${endpoints['prescriptions']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPrescriptions(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            setLoading(false);\r\n            return {\r\n                doctorId: [...new Set(res.data.content.map(p => p.doctor_id))],\r\n                patientId: [...new Set(res.data.content.map(p => p.patient_id))]\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if (err.response.status === 403) {\r\n                swal('Your role was forbidden', '', 'error');\r\n                return;\r\n            } else if (err.response.status === 401) {\r\n                if (window.confirm('Login expired! Please login again')) {\r\n                    localStorage.clear();\r\n                    history.push(url['login']);\r\n                }\r\n            }\r\n        });\r\n\r\n        let promise1 = [];\r\n        let doctorArr = [];\r\n        for (let i = 0; i < data?.doctorId?.length; i++) {\r\n            promise1.push(API.get(`${endpoints['doctors']}/${data.doctorId[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => doctorArr.push(res.data))\r\n            .catch(err => console.log(err.response)))\r\n        }\r\n        Promise.all(promise1).then(() => {\r\n            setDoctors(doctorArr);\r\n        })\r\n\r\n        let promise2 = [];\r\n        let patientArr = [];\r\n        for (let i = 0; i < data?.patientId?.length; i++) {\r\n            promise2.push(API.get(`${endpoints['patients']}/${data.patientId[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => patientArr.push(res.data))\r\n            .catch(err => console.log(err.response)))\r\n        }\r\n        Promise.all(promise2).then(() => {\r\n            setPatients(patientArr);\r\n        })\r\n    }\r\n\r\n    async function getPrescriptionDetails(presId) {\r\n        const medicineIds = await API.get(`${endpoints['prescriptions']}/${presId}/prescriptionDetails`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res)\r\n            setPrescriptionDetails(res.data.content);\r\n\r\n            return res.data.content.map(p => p.medicine_id);\r\n        })\r\n        .catch(err => console.log(err.response))\r\n\r\n        let promises = [];\r\n        let medicineArr = [];\r\n        for (let i = 0; i < medicineIds.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['medicines']}/${medicineIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => medicineArr.push(res.data))\r\n                .catch(err => console.log(err))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setMedicines(medicineArr);\r\n            setOpenDetails(true);\r\n        });\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpenDetails(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPrescriptions();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST PRESCRIPTION\" rows={prescriptions} columns={columns} pageSize={7}\r\n                    createURL=\"/prescriptions/create\" server={true}\r\n                    btnTitle=\"CREATE\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n            <Dialog\r\n                fullScreen\r\n                open={openDetails}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {\"Prescription Details\"}\r\n                    <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {prescriptionDetails ? (\r\n                            <TableContainer component={Paper}>\r\n                                <Table arial-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Medicine</TableCell>\r\n                                            <TableCell>Description</TableCell>\r\n                                            <TableCell>Quantity</TableCell>\r\n                                            <TableCell>Price</TableCell>\r\n                                            <TableCell>Unit</TableCell>\r\n                                            <TableCell>Total</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {prescriptionDetails.map(p => {\r\n                                            const medicine = medicines.filter(m => m.id === p.medicine_id)[0];\r\n                                            return (\r\n                                            <TableRow key={p.id}>\r\n                                                <TableCell>{medicine?.name}</TableCell>\r\n                                                <TableCell>{medicine?.description}</TableCell>\r\n                                                <TableCell>{p.quantity}</TableCell>\r\n                                                <TableCell>{p.unitPrice}</TableCell>\r\n                                                <TableCell>{medicine?.unit}</TableCell>\r\n                                                <TableCell>{p.totalPrice}</TableCell>\r\n                                            </TableRow>\r\n                                        )})}\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={5}>Total price of medicine</TableCell>\r\n                                            <TableCell>\r\n                                                {prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0)} $\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        ) : ''}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import { createTheme, makeStyles } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport DataTable from \"../../../components/DataTable\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue['A400']\r\n        }\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    root: { \r\n        height: theme.spacing(50), \r\n        width: '100%', \r\n        marginTop: theme.spacing(6) + 2,\r\n        [theme.breakpoints.down('xs')]: {\r\n          marginTop: theme.spacing(6) + 2\r\n        }, \r\n        background: 'white'\r\n      },\r\n})\r\n\r\nexport default function Invoices() {\r\n    const classes = useStyles();\r\n    const [invoices, setInvoices] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [employees, setEmployees] = useState();\r\n    const [prescriptions, setPrescriptions] = useState();\r\n    const [accounts, setAccounts] = useState();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'prescription_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'employee_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'employee',\r\n            headerName: 'Employee',\r\n            headerAlign: 'center',\r\n            width: 400,\r\n            renderCell: (params) => {\r\n                const employee_id = params.getValue(params.id, 'employee_id');\r\n                const employee = employees?.filter(e => e.id === employee_id)[0];\r\n                const account = accounts?.filter(a => a.id === employee.account_id)[0];\r\n                console.log(accounts)\r\n\r\n                return (\r\n                    <>\r\n                        <img style={{padding: 30, height: 100, width: '30%'}} src={account?.image} width=\"50%\" />\r\n                        <p>{employee?.lastName} {employee?.firstName}</p>\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Released Date',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                const date = new Date(params.getValue(params.id, 'date'))\r\n                return (\r\n                    <p>{`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`}</p>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    async function getInvoices(page='?p=1') {\r\n        setLoading(true);\r\n\r\n        const data = await API.get(`${endpoints['invoices']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setLoading(false);\r\n            setInvoices(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n\r\n            return {\r\n                prescriptionIds: [...new Set(res.data.content.map(i => i.prescription_id))],\r\n                employeeIds: [...new Set(res.data.content.map(i => i.employee_id))]\r\n            }\r\n        })\r\n        .catch(err => console.log(err.response))\r\n\r\n        let promise1 = [];\r\n        let prescriptionArr = [];\r\n        for (let i = 0; i < data?.prescriptionIds?.length; i++) {\r\n            promise1.push(\r\n                API.get(`${endpoints['prescriptions']}/${data.prescriptionIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => prescriptionArr.push(res.data))\r\n                .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promise1).then(() => setPrescriptions(prescriptionArr));\r\n\r\n        let promise2 = [];\r\n        let employeeArr = [];\r\n        for (let i = 0; i < data?.employeeIds?.length; i++) {\r\n            promise2.push(\r\n                API.get(`${endpoints['employees']}/${data.employeeIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    employeeArr.push(res.data);\r\n                })\r\n                .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promise2).then(() => {\r\n            setEmployees(employeeArr);\r\n\r\n            let promises = [];\r\n            let accountArr = [];\r\n            for (let i = 0; i < employeeArr?.length; i++) {\r\n                promises.push(\r\n                    API.get(`${endpoints['accounts']}/${employeeArr[i].account_id}`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    }).then(res => accountArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n                )\r\n            }\r\n            Promise.all(promises).then(() => setAccounts(accountArr));\r\n        });\r\n    }\r\n\r\n    function handlePageChange() {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInvoices();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ? (\r\n                <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n            ) : (\r\n                <DataTable header=\"LIST INVOICE\" rows={invoices} columns={columns} pageSize={5}\r\n                    createURL=\"/invoices/create\" server={true}\r\n                    btnTitle=\"Create\" rowCount={totalElements} handlePageChange={handlePageChange}\r\n                    currentPage={currentPage} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import { Button, createTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, Paper, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React, { useContext, useRef, useState } from \"react\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport API, { endpoints } from \"../API\";\r\nimport DataTable from \"./DataTable\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { url } from \"../URL\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../App\";\r\nimport ButtonCustom from \"./Button\";\r\nimport QRCode from 'qrcode.react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#afc2cb'\r\n        },\r\n        secondary: {\r\n            main: '#e1f5fe'\r\n        }\r\n    }\r\n})\r\n\r\nexport default function FormInvoice() {\r\n    const [open, setOpen] = useState(false);\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [prescriptionDetails, setPrescriptionDetails] = useState([]);\r\n    const [prescriptionSelected, setPrescriptionSelected] = useState(null);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [uuid, setUUID] = useState();\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext);\r\n    const pdfRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 350\r\n        },\r\n        {\r\n            field: 'doctor_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'patient_id',\r\n            hide: true\r\n        },\r\n        {\r\n            field: 'doctor',\r\n            headerName: 'Doctor',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                const doctor_id = params.getValue(params.id, 'doctor_id');\r\n                const doctor = doctors.filter(d => d.id === doctor_id)[0];\r\n                return (\r\n                    <p>{doctor?.firstName}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'patient',\r\n            headerName: 'Patient',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n                const patient_id = params.getValue(params.id, 'patient_id');\r\n                const patient = patients.filter(p => p.id === patient_id)[0];\r\n                return (\r\n                    <p>{patient?.lastName + ' ' + patient?.firstName}</p>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <ThemeProvider theme={theme}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker readOnly style={{ width: 200 }} color=\"primary\"\r\n                                InputProps={{ readOnly: true }}\r\n                                format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => alert(date)}\r\n                                name=\"dateOfBirth\" value={params.getValue(params.id, 'joinDate')} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </ThemeProvider>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    async function getPrescriptions(page = \"?p=1\") {\r\n        const data = await API.get(`${endpoints['prescriptions']}${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPrescriptions(res.data.content);\r\n            setCurrentPage(res.data.number);\r\n            setTotalElements(res.data.totalElements);\r\n            return {\r\n                doctorId: [...new Set(res.data.content.map(p => p.doctor_id))],\r\n                patientId: [...new Set(res.data.content.map(p => p.patient_id))]\r\n            }\r\n        })\r\n            .catch(err => {\r\n                if (err.response.status === 403) {\r\n                    swal('Your role was forbidden', '', 'error');\r\n                    return;\r\n                } else if (err.response.status === 401) {\r\n                    if (window.confirm('Login expired! Please login again')) {\r\n                        localStorage.clear();\r\n                        history.push(url['login']);\r\n                    }\r\n                }\r\n            });\r\n\r\n        let promise1 = [];\r\n        let doctorArr = [];\r\n        for (let i = 0; i < data?.doctorId?.length; i++) {\r\n            promise1.push(API.get(`${endpoints['doctors']}/${data.doctorId[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => doctorArr.push(res.data))\r\n                .catch(err => console.log(err.response)))\r\n        }\r\n        Promise.all(promise1).then(() => {\r\n            setDoctors(doctorArr);\r\n        })\r\n\r\n        let promise2 = [];\r\n        let patientArr = [];\r\n        for (let i = 0; i < data?.patientId?.length; i++) {\r\n            promise2.push(API.get(`${endpoints['patients']}/${data.patientId[i]}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }).then(res => patientArr.push(res.data))\r\n                .catch(err => console.log(err.response)))\r\n        }\r\n        Promise.all(promise2).then(() => {\r\n            setPatients(patientArr);\r\n        })\r\n    }\r\n\r\n    async function getPrescriptionDetails(presId) {\r\n        const medicineIds = await API.get(`${endpoints['prescriptions']}/${presId}/prescriptionDetails`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res)\r\n            setPrescriptionDetails(res.data.content);\r\n\r\n            return res.data.content.map(p => p.medicine_id);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n\r\n        let promises = [];\r\n        let medicineArr = [];\r\n        for (let i = 0; i < medicineIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['medicines']}/${medicineIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => medicineArr.push(res.data))\r\n                    .catch(err => console.log(err))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setMedicines(medicineArr);\r\n        });\r\n\r\n        setUUID(uuidv4());\r\n    }\r\n\r\n\r\n    function handleOpenPrescription() {\r\n        getPrescriptions();\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n        setPrescriptionSelected();\r\n        setPrescriptionDetails();\r\n        setUUID();\r\n    }\r\n\r\n    function handleSave() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleSelectionChange(id) {\r\n        getPrescriptionDetails(id);\r\n        const p = prescriptions.filter(p => p.id == id)[0];\r\n        setPrescriptionSelected(p);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        if (!prescriptionSelected) {\r\n            swal('Please choose a prescription', '', 'warning');\r\n            return;\r\n        }\r\n\r\n        const totalPrice = prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0);\r\n        const medicineIds = prescriptionDetails.map(p => p.medicine_id);\r\n\r\n        let promises = [];\r\n        let medicineArr = [];\r\n        for (let i = 0; i < medicineIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['medicines']}/${medicineIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => medicineArr.push(res.data))\r\n                    .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            API(`${endpoints['prescriptions']}/${prescriptionSelected.id}\r\n            /employees/${authContext.currentAuth.userId}/invoices`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: {\r\n                    id: uuid,\r\n                    totalPrice: totalPrice\r\n                }\r\n            }).then(res => {\r\n                console.log(res);\r\n                if (res.status === 201) {\r\n                    swal('Success', '', 'success');\r\n                    history.goBack();\r\n\r\n                    for (let i = 0; i < medicineArr?.length; i++) {\r\n                        const quantity = prescriptionDetails.filter(p => p.medicine_id === medicineArr[i].id)[0]?.quantity;\r\n                        let formData1 = new FormData();\r\n                        formData1.append('name', medicineArr[i].name);\r\n                        formData1.append('description', medicineArr[i].description);\r\n                        formData1.append('unit', medicineArr[i].unit);\r\n                        formData1.append('price', medicineArr[i].price);\r\n                        formData1.append('unitInStock', medicineArr[i].unitInStock - (quantity || 0));\r\n                        API(`${endpoints['medicines']}/${medicineArr[i].id}`, {\r\n                            method: 'put',\r\n                            headers: {\r\n                                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                                'Content-type': 'Multipart/form-data'\r\n                            },\r\n                            data: formData1\r\n                        }).then(res => console.log(res))\r\n                            .catch(err => console.log(err.response))\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err.response));\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={5}>\r\n                <div>\r\n                    <Button id=\"patient\" variant=\"outlined\" onClick={handleOpenPrescription}>\r\n                        Choose prescription\r\n                    </Button>\r\n\r\n                    <Dialog\r\n                        disableEnforceFocus\r\n                        fullScreen\r\n                        open={open}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            {\"Choose a prescription\"}\r\n                            <IconButton style={{ position: 'absolute', right: 15 }} onClick={handleSave} aria-label=\"save\">\r\n                                <SaveAltIcon />\r\n                            </IconButton>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                <DataTable rows={prescriptions} columns={columns}\r\n                                    btnTitle=\"\" createURL=\"\" header=\"\" server={true}\r\n                                    rowCount={totalElements} currentPage={currentPage}\r\n                                    pageSize={7}\r\n                                    handleSelectionChange={handleSelectionChange} />\r\n\r\n                                {prescriptionDetails ? (\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table arial-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Medicine</TableCell>\r\n                                                    <TableCell>Description</TableCell>\r\n                                                    <TableCell>Quantity</TableCell>\r\n                                                    <TableCell>Price</TableCell>\r\n                                                    <TableCell>Unit</TableCell>\r\n                                                    <TableCell>Total</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {prescriptionDetails.map(p => {\r\n                                                    const medicine = medicines.filter(m => m.id === p.medicine_id)[0];\r\n                                                    return (\r\n                                                        <TableRow key={p.id}>\r\n                                                            <TableCell>{medicine?.name}</TableCell>\r\n                                                            <TableCell>{medicine?.description}</TableCell>\r\n                                                            <TableCell>{p.quantity}</TableCell>\r\n                                                            <TableCell>{p.unitPrice}</TableCell>\r\n                                                            <TableCell>{medicine?.unit}</TableCell>\r\n                                                            <TableCell>{p.totalPrice}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })}\r\n                                                <TableRow>\r\n                                                    <TableCell colSpan={5}>Total price of medicine</TableCell>\r\n                                                    <TableCell>\r\n                                                        {prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0)} $\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                ) : ''}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n                <TableContainer style={{ textAlign: 'center' }} component={Paper}>\r\n                    <Table ref={pdfRef} arial-label=\"simple table\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={4}>DHB HOSPITAL</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center' }} colSpan={4}>www.dhbhospital.com</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center' }} colSpan={4}>97 Vo Van Tan, Ward 6, District 3, Ho Chi Minh city</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={4}>\r\n                                    INVOICE\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {prescriptionSelected ? (\r\n                                <TableRow>\r\n                                    <TableCell colSpan={4} style={{ textAlign: 'center' }}>\r\n                                        <QRCode\r\n                                            id=\"qrcode\"\r\n                                            value={`${endpoints['invoices']}/${uuid}`}\r\n                                            size={100}\r\n                                            level={'H'}\r\n                                            includeMargin\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ) : ''}\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Invoice ID:</TableCell>\r\n                                <TableCell colSpan={3}>{uuid}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Released date:</TableCell>\r\n                                <TableCell colSpan={3}>\r\n                                    {`${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}`}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Employee:</TableCell>\r\n                                <TableCell colSpan={3}>\r\n                                    {\r\n                                        `${authContext?.currentAuth?.lastName} ${authContext?.currentAuth?.firstName}`\r\n                                    }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Service:</TableCell>\r\n                                <TableCell colSpan={3}>\r\n                                    {prescriptionSelected?.serviceName}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Service fee:</TableCell>\r\n                                <TableCell colSpan={3}>\r\n                                    {`${prescriptionSelected?.serviceFee || 0} $`}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={4}>MEDICINE</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\r\n                                <TableCell style={{ fontWeight: 'bold' }}>Quantity</TableCell>\r\n                                <TableCell style={{ fontWeight: 'bold' }}>Price</TableCell>\r\n                                <TableCell style={{ fontWeight: 'bold' }}>Total</TableCell>\r\n                            </TableRow>\r\n                            {prescriptionDetails && prescriptionDetails.map(p => {\r\n                                const medicine = medicines.filter(m => m.id === p.medicine_id)[0];\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableCell>{medicine?.name}</TableCell>\r\n                                        <TableCell>{p.quantity}</TableCell>\r\n                                        <TableCell>{p.unitPrice}</TableCell>\r\n                                        <TableCell>{p.totalPrice}</TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                            <TableRow>\r\n                                <TableCell colSpan={1}>Total price of medicines:</TableCell>\r\n                                <TableCell colSpan={3}>\r\n                                    {prescriptionDetails && prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0)} $\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{ textAlign: 'center', fontWeight: 'bold' }} colSpan={4}>\r\n                                    TOTAL PRICE: {prescriptionDetails && prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0) + prescriptionSelected?.serviceFee} $\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n\r\n            <ButtonCustom style={{\r\n                margin: '10px 0px 0px 0px', position: 'absolute',\r\n                top: 120, right: 0\r\n            }} title='Create'\r\n                color=\"primary\" onClick={handleSubmit} />\r\n            <ReactToPrint\r\n                trigger={() => <ButtonCustom style={{\r\n                    margin: '10px 0px 0px 0px', position: 'absolute',\r\n                    top: 160, right: 0\r\n                }} title='Print PDF'\r\n                    color=\"primary\" />}\r\n                content={() => pdfRef.current}\r\n            />\r\n        </Grid>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport { lightBlue } from '@material-ui/core/colors';\r\nimport Roles from './roles';\r\nimport FormRole from '../../components/FormRole';\r\nimport RoleDetails from './roles/details';\r\nimport Accounts from './accounts';\r\nimport Medicines from './medicines';\r\nimport { AccessibleForward, LocalPharmacy, Category } from '@material-ui/icons';\r\nimport FormMedicine from '../../components/FormMedicine';\r\nimport Shifts from './shifts';\r\nimport FormShift from '../../components/FormShift';\r\nimport AccountDetails from './accounts/details';\r\nimport { indexToSubStrCurrentEndpoint } from '../../currentEndpoint';\r\nimport Admins from './admins';\r\nimport Doctors from './doctors';\r\nimport Employees from './employees';\r\nimport FormSchedules from '../../components/FormSchedule';\r\nimport Schedules from './schedules';\r\nimport Bookings from './bookings';\r\nimport FormBooking from '../../components/FormBooking';\r\nimport Patients from './patients';\r\nimport FormPrescription from '../../components/FormPrescription';\r\nimport Prescriptions from './prescriptions';\r\nimport Invoices from './invoices';\r\nimport FormInvoice from '../../components/FormInvoice';\r\nimport { AuthContext } from '../../App';\r\nimport { Avatar, Badge, Menu, MenuItem } from '@material-ui/core';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport functions from \"firebase/functions\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, set, ref, push, onValue } from \"firebase/database\";\r\nimport firebase from \"firebase/compat/app\";\r\n\r\nconst drawerWidth = 240;\r\nconst primary = lightBlue['A400'];\r\nexport const SideBarContext = React.createContext();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    background: '#e1f5fe',\r\n    color: '#000000'\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(10),\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(1)\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const authContext = useContext(AuthContext);\r\n  const [anchorEl1, setAnchorEl1] = useState(null);\r\n  const [anchorEl2, setAnchorEl2] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [countNoti, setCountNoti] = useState(0);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleClick1(event) {\r\n    setAnchorEl1(event.currentTarget);\r\n    setCountNoti(0);\r\n  }\r\n\r\n  function handleClose1() {\r\n    setAnchorEl1(null);\r\n  }\r\n\r\n  function handleClick2(event) {\r\n    setAnchorEl2(event.currentTarget);\r\n  }\r\n\r\n  function handleClose2() {\r\n    setAnchorEl2(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyB4eNncvS4xXvEmLQCAfAXgmiJOJnekaQU\",\r\n      authDomain: \"dhbhospital.firebaseapp.com\",\r\n      databaseURL: \"https://dhbhospital-default-rtdb.firebaseio.com\",\r\n      projectId: \"dhbhospital\",\r\n      storageBucket: \"dhbhospital.appspot.com\",\r\n      messagingSenderId: \"894178118006\",\r\n      appId: \"1:894178118006:web:533448f7c6027028881257\",\r\n      measurementId: \"G-SQ482RM39Q\"\r\n    };\r\n\r\n    // Initialize Firebase\r\n    if (!firebase.apps.length) {\r\n      const app = initializeApp(firebaseConfig);\r\n      console.log('Connected');\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const notiListRef = ref(database, 'notifications');\r\n\r\n\r\n    onValue(notiListRef, (snapshot) => {\r\n      let array = [];\r\n      setCountNoti(snapshot.size);\r\n      snapshot.forEach((childSnapshot) => {\r\n        let childData = childSnapshot.val();\r\n        array.push(childData);\r\n      })\r\n      Promise.all(array).then(() => setNotifications(array));\r\n      // setNotifications(array);\r\n    })\r\n\r\n    // setTimeout(() => {\r\n    //   console.log(notifications)\r\n    // }, 2000)\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <SideBarContext.Provider>\r\n\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <LocalHospitalIcon style={{ marginRight: 10 }} />\r\n          <Typography variant=\"h6\" noWrap>\r\n            DHB HOSPITAL\r\n          </Typography>\r\n\r\n          <div style={{ position: 'absolute', right: 35, width: 100 }}>\r\n            {authContext.isAuth ? (\r\n              <div>\r\n                {authContext.currentAuth?.role === 'ROLE_EMPLOYEE' ? (\r\n                  <>\r\n                    <Badge badgeContent={countNoti} color=\"secondary\"\r\n                    style={{marginTop: -20}}>\r\n                      <NotificationsIcon style={{ cursor: 'pointer' }} onClick={handleClick1} />\r\n                    </Badge>\r\n                    <Menu\r\n                      anchorEl={anchorEl1}\r\n                      keepMounted\r\n                      open={Boolean(anchorEl1)}\r\n                      onClose={handleClose1}\r\n                    >\r\n                      {notifications && notifications.map(n => {\r\n                        return (\r\n                          <>\r\n                            <MenuItem onClick={handleClose1}>\r\n                              <Typography>{n.content}</Typography>\r\n                              <Typography variant=\"caption\">{`(${n.time})`}</Typography>\r\n                            </MenuItem>\r\n                            <Divider />\r\n                          </>\r\n                        );\r\n                      })}\r\n                      {notifications.length === 0 ?\r\n                        <MenuItem onClick={handleClose1}>\r\n                          <Typography>There isn't no notifications recently</Typography>\r\n                        </MenuItem> : ''}\r\n                    </Menu>\r\n                  </>\r\n                ) : ''}\r\n                <Avatar\r\n                  style={{ background: 'white', cursor: 'pointer', display: 'inline-block', marginLeft: 20 }}\r\n                  variant=\"square\" onClick={handleClick2} src={authContext.currentAuth?.image} width=\"100%\" />\r\n                <Menu\r\n                  anchorEl={anchorEl2}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl2)}\r\n                  onClose={handleClose2}\r\n                >\r\n                  <MenuItem onClick={handleClose2}>Profile</MenuItem>\r\n                  <MenuItem onClick={() => {\r\n                    localStorage.clear();\r\n                    authContext.setAuth(false);\r\n                  }}>Log out</MenuItem>\r\n                </Menu>\r\n                {/* <a href=\"#\" onClick={() => {\r\n              localStorage.clear();\r\n              authContext.setAuth(false);\r\n            }}>Logout</a> */}\r\n              </div>\r\n            ) : ''}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => authContext.setPage('/')} selected={authContext.page === '/'}\r\n            component={Link} to='/'>\r\n            <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n            <ListItemText primary='Dashboard' />\r\n          </ListItem>\r\n          {authContext.currentAuth?.role === 'ROLE_ADMIN' ? (\r\n            <>\r\n              <ListItem button onClick={() => authContext.setPage('/roles')} selected={authContext.page.includes('/roles')}\r\n                component={Link} to='/roles'>\r\n                <ListItemIcon><SupervisorAccountIcon /></ListItemIcon>\r\n                <ListItemText primary='Role' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/accounts')} selected={authContext.page.includes('/accounts')}\r\n                component={Link} to='/accounts'>\r\n                <ListItemIcon><AccountCircleIcon /></ListItemIcon>\r\n                <ListItemText primary='Account' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/admins')} selected={authContext.page.includes('/admins')}\r\n                component={Link} to='/admins'>\r\n                <ListItemIcon><ContactPhoneIcon /></ListItemIcon>\r\n                <ListItemText primary='Admin' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/doctors')} selected={authContext.page.includes('/doctors')}\r\n                component={Link} to='/doctors'>\r\n                <ListItemIcon><ContactMailIcon /></ListItemIcon>\r\n                <ListItemText primary='Doctor' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/employees')} selected={authContext.page.includes('/employees')}\r\n                component={Link} to='/employees'>\r\n                <ListItemIcon><ContactsIcon /></ListItemIcon>\r\n                <ListItemText primary='Employee' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/patients')} selected={authContext.page.includes('/patients')}\r\n                component={Link} to='/patients'>\r\n                <ListItemIcon><AccessibleForward /></ListItemIcon>\r\n                <ListItemText primary='Patient' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/medicines')} selected={authContext.page.includes('/medicines')}\r\n                component={Link} to='/medicines'>\r\n                <ListItemIcon><LocalPharmacy /></ListItemIcon>\r\n                <ListItemText primary='Medicines' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/categories')} selected={authContext.page.includes('/categories')}\r\n                component={Link} to='/categories'>\r\n                <ListItemIcon><Category /></ListItemIcon>\r\n                <ListItemText primary='Medicine Categories' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/shifts')} selected={authContext.page.includes('/shifts')}\r\n                component={Link} to='/shifts'>\r\n                <ListItemIcon><EventAvailableIcon /></ListItemIcon>\r\n                <ListItemText primary='Shifts' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/schedules')} selected={authContext.page.includes('/schedules')}\r\n                component={Link} to='/schedules'>\r\n                <ListItemIcon><ScheduleIcon /></ListItemIcon>\r\n                <ListItemText primary='Schedules' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/bookings')} selected={authContext.page.includes('/bookings')}\r\n                component={Link} to='/bookings'>\r\n                <ListItemIcon><LibraryBooksIcon /></ListItemIcon>\r\n                <ListItemText primary='Bookings' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/chart')} selected={authContext.page.includes('/chart')}\r\n                component={Link} to='/chart'>\r\n                <ListItemIcon><BarChartIcon /></ListItemIcon>\r\n                <ListItemText primary='Chart' />\r\n              </ListItem>\r\n            </>\r\n          ) : ''}\r\n          {authContext.currentAuth?.role === 'ROLE_DOCTOR' ? (\r\n            <>\r\n              <ListItem button onClick={() => authContext.setPage('/patients')} selected={authContext.page.includes('/patients')}\r\n                component={Link} to='/patients'>\r\n                <ListItemIcon><AccessibleForward /></ListItemIcon>\r\n                <ListItemText primary='Patient' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/prescriptions')} selected={authContext.page.includes('/prescriptions')}\r\n                component={Link} to='/prescriptions'>\r\n                <ListItemIcon><NoteAddIcon /></ListItemIcon>\r\n                <ListItemText primary='Prescriptions' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/medicines')} selected={authContext.page.includes('/medicines')}\r\n                component={Link} to='/medicines'>\r\n                <ListItemIcon><LocalPharmacy /></ListItemIcon>\r\n                <ListItemText primary='Medicines' />\r\n              </ListItem>\r\n            </>\r\n          ) : ''}\r\n          {authContext.currentAuth?.role === 'ROLE_EMPLOYEE' ? (\r\n            <>\r\n              <ListItem button onClick={() => authContext.setPage('/bookings')} selected={authContext.page.includes('/bookings')}\r\n                component={Link} to='/bookings'>\r\n                <ListItemIcon><LibraryBooksIcon /></ListItemIcon>\r\n                <ListItemText primary='Bookings' />\r\n              </ListItem>\r\n              <ListItem button onClick={() => authContext.setPage('/invoices')} selected={authContext.page.includes('/invoices')}\r\n                component={Link} to='/invoices'>\r\n                <ListItemIcon><ReceiptIcon /></ListItemIcon>\r\n                <ListItemText primary='Invoices' />\r\n              </ListItem>\r\n            </>\r\n          ) : ''}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </SideBarContext.Provider>\r\n  );\r\n}\r\n","import { Avatar, Box, Button, Container, createTheme, CssBaseline, FormControlLabel, \r\n    Grid, Link, TextField, Typography, ThemeProvider } from \"@material-ui/core\";\r\nimport { LockOutlined } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useHistory } from \"react-router\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../API\";\r\nimport { indexToSubStrGetAccountId } from \"../currentEndpoint\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function ForgotPassword() {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const accountId = window.location.href.substr(indexToSubStrGetAccountId, 36);\r\n        API(`${endpoints['accounts']}/${accountId}`, {\r\n            method: 'patch',\r\n            data: {password: password}\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                swal('Success', '', 'success');\r\n                history.push('/');\r\n            }\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === 'password') {\r\n            setPassword(event.target.value);\r\n        } else if (event.target.name === 'confirmPassword') {\r\n            setConfirmPassword(event.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            return value === document.getElementsByName('password')[0].value;\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" style={{width:'100%', margin: '0 auto', marginTop: 200, marginLeft: 100}}>\r\n                <CssBaseline />\r\n                <Box\r\n                    style={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar style={{ margin: 1, backgroundColor: '#e1f5fe', color: 'black' }}>\r\n                        <LockOutlined />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Reset password\r\n                    </Typography>\r\n                    <ValidatorForm onSubmit={handleSubmit} style={{ marginTop: 1 }}>\r\n                        <TextValidator\r\n                            style={{marginTop: 20, minWidth: 400}}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={handleChange}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                            style={{marginTop: 30, marginBottom: 40, minWidth: 400}}\r\n                            validators={['required', 'isPasswordMatch']}\r\n                            errorMessages={['this field is required', 'password not match']}\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm password\"\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            onChange={handleChange}\r\n                            id=\"confirmPassword\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            style={{ marginTop: 3, marginBottom: 2, border: '1px solid #2979ff', color: '#2979ff' }}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </ValidatorForm>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import { Redirect, Route } from \"react-router\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\n\r\nexport default function ProtectedRoute({ isAuth: isAuth, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={(props) => {\r\n            if (isAuth) {\r\n                return <Component />;\r\n            } else {\r\n                if (window.location.href.includes(\"/reset_password\")) {\r\n                    return <ForgotPassword />;\r\n                }\r\n                else\r\n                    return (\r\n                        <Redirect to={{ pathname: \"/login\"}} />\r\n                    );\r\n            }\r\n        }} />\r\n    )\r\n}","import {\r\n    Avatar, Box, Button, Checkbox, createTheme, CssBaseline, FormControlLabel, Grid, Link,\r\n    Paper, TextField, Typography, ThemeProvider, Dialog, DialogTitle, DialogContent, DialogContentText,\r\n    DialogActions, Step, Stepper, StepLabel\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport swal from \"sweetalert\";\r\nimport { AuthContext } from \"../App\";\r\nimport ButtonCustom from \"./Button\";\r\nimport { indexToSubStrCurrentEndpoint } from \"../currentEndpoint\";\r\nimport { LockOutlined, Facebook, Twitter, GTranslate } from \"@material-ui/icons\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { loadCaptchaEnginge, LoadCanvasTemplate, LoadCanvasTemplateNoReload, validateCaptcha } from 'react-simple-captcha';\r\nimport API, { endpoints } from \"../API\";\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                DHB Hospital\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login(props) {\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [forgotPassword, setForgotPassword] = useState(false);\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = ['Enter username', 'Check mail'];\r\n    const [infoValid, setInfoValid] = useState(false);\r\n    const [usernameToResetPassword, setUsernameToResetPassword] = useState(\"\");\r\n    const [userCaptcha, setUserCaptcha] = useState(\"\");\r\n\r\n    function handleCaptChaChange(e) {\r\n        setUserCaptcha(e.target.value);\r\n\r\n        if (e.target.value !== \"\" && usernameToResetPassword !== \"\")\r\n            setInfoValid(true);\r\n        else\r\n            setInfoValid(false);\r\n    }\r\n\r\n    function handleUsernameChange(e) {\r\n        setUsernameToResetPassword(e.target.value);\r\n\r\n        if (userCaptcha !== \"\" && e.target.value !== \"\")\r\n            setInfoValid(true);\r\n        else\r\n            setInfoValid(false);\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if (activeStep === 0) {\r\n            if (validateCaptcha(userCaptcha)===true) {\r\n                API.get(`${endpoints['accounts']}/${usernameToResetPassword}/forgot_password`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status === 200) {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    swal(err.response?.data?.message, '', 'error');\r\n                });\r\n            }\r\n    \r\n            else {\r\n                swal('Captcha not match', '', 'error');\r\n                loadCaptchaEnginge(6, 'black', 'white'); \r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n        setTimeout(() => {\r\n            loadCaptchaEnginge(6, 'black', 'white'); \r\n        }, 100)\r\n    }\r\n\r\n    async function handleLogin(e) {\r\n        let promises = [];\r\n        promises.push(axios(\"http://localhost:8080/auth/signIn\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                username: user.username,\r\n                password: user.password\r\n            }\r\n        }).then(response => {\r\n            if (response.status != 401) {\r\n                console.log(response.data);\r\n                localStorage.setItem('token', response.data.accessToken);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.response.data.status)\r\n            if (error.response?.data?.status === 401) {\r\n                swal('Invalid username or password', '', 'error');\r\n                return;\r\n            }\r\n        }))\r\n\r\n        Promise.all(promises).then(() => {\r\n            setTimeout(() => {\r\n                axios(\"http://localhost:8080/auth/admin/user\", {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res);\r\n                    if (res.status === 200) {\r\n                        authContext.setAuth(true);\r\n                        authContext.setCurrentAuth(res.data);\r\n                        authContext.setPage(authContext.page !== \"/login\" ? authContext.page : \"/\");\r\n                        history.push('/');\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        console.log(err.response)\r\n                        if (err.response.status === 403) {\r\n                            swal(`Your role was forbidden`, '', 'error');\r\n                            localStorage.clear();\r\n                            return;\r\n                        }\r\n                    })\r\n            }, 500)\r\n        })\r\n\r\n        e.preventDefault();\r\n    };\r\n\r\n    function handleChange(e) {\r\n        let temp = { ...user };\r\n        temp[e.target.name] = e.target.value;\r\n        setUser(temp);\r\n    }\r\n    \r\n    function handleClose() {\r\n        setForgotPassword(false);\r\n        setActiveStep(0);\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container component=\"main\" style={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    style={{\r\n                        backgroundImage: `url(https://image.thanhnien.vn/1024/uploaded/hoalp/2021_07_04/hospital-playlist-poster3_kfoj.jpeg)`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: (t) =>\r\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <Box\r\n                        style={{\r\n                            margin: '50px 4px 8px 4px',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar style={{ margin: 1, backgroundColor: '#e1f5fe', color: 'black' }}>\r\n                            <LockOutlined />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <ValidatorForm onSubmit={handleLogin} style={{ marginTop: 1 }}>\r\n                            <TextValidator\r\n                                style={{ width: '60%', margin: '30px 0px 0px 125px' }}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={user.username}\r\n                            />\r\n                            <TextValidator\r\n                                style={{ width: '60%', margin: '25px 0px 0px 125px' }}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={user.password}\r\n                            />\r\n                            <FormControlLabel\r\n                                style={{ display: 'block', margin: '20px 0px 0px 115px' }}\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"outlined\"\r\n                                style={{\r\n                                    marginTop: 20, marginBottom: 2, marginLeft: 125, width: '60%',\r\n                                    border: '1px solid #2196f3', color: '#2196f3'\r\n                                }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item xs={12} style={{ marginTop: 10, paddingLeft: 125 }}>\r\n                                    <Link onClick={() => {\r\n                                        \r\n                                        setForgotPassword(true);\r\n                                        setTimeout(() => {\r\n                                            loadCaptchaEnginge(6, 'black', 'white');\r\n                                        }, 100)\r\n                                        \r\n                                    }} style={{ color: '#2196f3' }}>\r\n                                        Forgot password?\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<Facebook />}\r\n                                style={{\r\n                                    marginTop: 80, marginBottom: 2, marginLeft: 125, width: '60%',\r\n                                    border: '1px solid #2196f3', color: '#2196f3'\r\n                                }}\r\n                            >\r\n                                LOGIN WITH FACEBOOK\r\n                            </Button>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<Twitter />}\r\n                                style={{\r\n                                    marginTop: 20, marginBottom: 2, marginLeft: 125, width: '60%',\r\n                                    border: '1px solid #2196f3', color: '#2196f3'\r\n                                }}\r\n                            >\r\n                                LOGIN WITH TWITTER\r\n                            </Button>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<GTranslate />}\r\n                                style={{\r\n                                    marginTop: 20, marginBottom: 2, marginLeft: 125, width: '60%',\r\n                                    border: '1px solid #2196f3', color: '#2196f3'\r\n                                }}\r\n                            >\r\n                                LOGIN WITH GOOGLE\r\n                            </Button>\r\n                        </ValidatorForm>\r\n                    </Box>\r\n                    <Copyright style={{marginTop: 45}} />\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n                open={forgotPassword}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    <Stepper activeStep={activeStep} alternativeLabel>\r\n                        {steps.map((label, index) => {\r\n                            const stepProps = {};\r\n                            const labelProps = {};\r\n                            return (\r\n                                <Step key={label} {...stepProps}>\r\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\r\n                                </Step>\r\n                            );\r\n                        })}\r\n                    </Stepper>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {activeStep === 0 ? (\r\n                            <ValidatorForm>\r\n                                <TextValidator\r\n                                    style={{ marginLeft: 120 }}\r\n                                    variant=\"outlined\"\r\n                                    name=\"username\"\r\n                                    label=\"Username\"\r\n                                    onChange={handleUsernameChange}\r\n                                    value={usernameToResetPassword}\r\n                                />\r\n                                <div style={{marginLeft: 120, marginTop: 20, marginBottom: 20}}>\r\n                                <LoadCanvasTemplate />\r\n                                </div>\r\n                                <TextValidator\r\n                                    style={{ marginLeft: 120 }}\r\n                                    variant=\"outlined\"\r\n                                    name=\"captcha\"\r\n                                    label=\"Captcha\"\r\n                                    value={userCaptcha}\r\n                                    onChange={handleCaptChaChange} />\r\n                            </ValidatorForm>\r\n                        ) : (\r\n                            <Typography variant=\"h6\" style={{ marginLeft: 120 }}>\r\n                                We sent an email to your email address base on your username.\r\n                            </Typography>\r\n                        )}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={activeStep === 0}\r\n                        color=\"secondary\" variant=\"contained\"\r\n                        onClick={handleBack}>Go back</Button>\r\n                    {\r\n                        activeStep === 1 ? (\r\n                            <Button\r\n                                color=\"primary\" variant=\"contained\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                        ) : (\r\n                            <Button\r\n                                disabled={activeStep === 1 || !infoValid}\r\n                                color=\"primary\" variant=\"contained\" onClick={handleNext}>\r\n                                Next\r\n                            </Button>\r\n                        )\r\n                    }\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n        </ThemeProvider>\r\n    );\r\n}","import {\r\n    Avatar, Dialog, DialogActions, DialogContent,\r\n    DialogContentText, DialogTitle, Grid, Paper, Tab, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow, Tabs, Typography, IconButton\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API, { endpoints } from \"../API\";\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport HealingIcon from '@material-ui/icons/Healing';\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport QRCode from \"qrcode.react\";\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nexport default function UserDetails(props) {\r\n    const { userId } = useParams();\r\n    const [user, setUser] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n    const [prescriptionDetails, setPrescriptionDetails] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [isCovidTestShow, setCovidTestShow] = useState(false);\r\n    const [isHealthRecordsShow, setHealthRecordsShow] = useState(false);\r\n    const [prescriptionsWithVaccine, setPrescriptionsWithVaccine] = useState([]);\r\n    const [isVaccineShow, setVaccineShow] = useState(false);\r\n    const [prescriptionsWithCovidTest, setPrescriptionsWithCovidTest] = useState([]);\r\n    const [prescriptionWithCovidTest, setPrescriptionWithCovidTest] = useState();\r\n    const [isPrescriptionDetailsShow, setPrescriptionDetailsShow] = useState(false);\r\n    const [isCovidTestDetailsShow, setCovidTestDetailsShow] = useState(false);\r\n    const [doctorOfPrescription, setDoctorOfPrescription] = useState();\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [valueTab, setValueTab] = useState(0);\r\n    const role = props.role;\r\n\r\n    async function getUser(page = \"?p=1\") {\r\n        const accountId = await API.get(`${endpoints[role]}/${userId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setUser(res.data);\r\n\r\n            return res.data.account_id;\r\n        })\r\n            .catch(err => console.log(err))\r\n\r\n        const data = await API.get(`${endpoints['accounts']}/${accountId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setAccount(res.data);\r\n\r\n            return res.data;\r\n        })\r\n\r\n        const prescriptionIds = await API.get(`${endpoints[role]}/${userId}/prescriptions${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            setPrescriptions(res.data.content);\r\n\r\n            return res.data.content.map(p => p.id);\r\n        }).catch(err => console.log(err));\r\n\r\n        let promises = [];\r\n        let detailsArr = [];\r\n        for (let i = 0; i < prescriptionIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['prescriptions']}/${prescriptionIds[i]}/prescriptionDetails`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => detailsArr.push(res.data.content))\r\n                    .catch(err => console.log(err))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            console.log(detailsArr)\r\n            setPrescriptionDetails(detailsArr)\r\n        });\r\n    }\r\n\r\n    function handleTabChange(event, newValue) {\r\n        setValueTab(newValue);\r\n    }\r\n\r\n    function vaccineConfirmation() {\r\n        const serviceName = \"Covid vaccination\";\r\n        API.get(`${endpoints['patients']}/${user.id}/services/${serviceName}/prescriptions`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setPrescriptionsWithVaccine(res.data.content))\r\n            .catch(err => console.log(err))\r\n\r\n        setVaccineShow(true);\r\n    }\r\n\r\n    function covidTests() {\r\n        const serviceName = \"Covid test\";\r\n        API.get(`${endpoints['patients']}/${user.id}/services/${serviceName}/prescriptions`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setPrescriptionsWithCovidTest(res.data.content))\r\n            .catch(err => console.log(err))\r\n\r\n        setCovidTestShow(true);\r\n    }\r\n\r\n    function getHealthRecords(page = \"?p=1\") {\r\n        API.get(`${endpoints['patients']}/${user.id}/prescriptions${page}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setPrescriptions(res.data.content);\r\n            setTotalPages(res.data.totalPages);\r\n            setTotalElements(res.data.totalElements);\r\n            setCurrentPage(res.data.number);\r\n            setHealthRecordsShow(true);\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    async function getPrescriptionDetails(pres) {\r\n        const doctor = await API.get(`${endpoints['doctors']}/${pres.doctor_id}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setDoctorOfPrescription(res.data))\r\n            .catch(err => console.log(err.response))\r\n\r\n        const medicineIds = await API.get(`${endpoints['prescriptions']}/${pres.id}/prescriptionDetails`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res)\r\n            setPrescriptionDetails(res.data.content);\r\n\r\n            return res.data.content.map(p => p.medicine_id);\r\n        })\r\n            .catch(err => console.log(err.response))\r\n\r\n        let promises = [];\r\n        let medicineArr = [];\r\n        for (let i = 0; i < medicineIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['medicines']}/${medicineIds[i]}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => medicineArr.push(res.data))\r\n                    .catch(err => console.log(err))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setMedicines(medicineArr);\r\n        });\r\n    }\r\n\r\n    function handlePageChange(event, newPage) {\r\n        getHealthRecords(`?p=${newPage}`);\r\n        setCurrentPage(newPage - 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid container spacing={4} item xs={4}>\r\n                <Grid item xs={12}>\r\n                    <Avatar style={{ width: 150, height: 150, margin: '0 auto' }} src={account?.image} />\r\n                    <Typography style={{ textAlign: 'center', fontWeight: 'bold', marginTop: 20 }}>\r\n                        {user?.lastName + ' ' + user?.firstName}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Tabs\r\n                        style={{ marginLeft: 55 }}\r\n                        orientation=\"vertical\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        value={valueTab}\r\n                        onChange={handleTabChange}>\r\n                        <Tab label=\"Profile\" />\r\n                        <Tab label=\"Health records\" />\r\n                    </Tabs>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                {valueTab === 0 ? (\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>Full name</TableCell>\r\n                                    <TableCell>{user?.lastName + ' ' + user?.firstName}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Gender</TableCell>\r\n                                    <TableCell>\r\n                                        {user?.gender}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Birthday</TableCell>\r\n                                    <TableCell>\r\n                                        {`${new Date(user?.dateOfBirth).getDate()}/${new Date(user?.dateOfBirth).getMonth() + 1}/${new Date(user?.dateOfBirth).getFullYear()}`}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Phone</TableCell>\r\n                                    <TableCell>\r\n                                        {user?.phone}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>{user?.email}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>Address</TableCell>\r\n\r\n                                    <TableCell>{user?.address}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                ) : (\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12} container>\r\n                            <Grid style={{ textAlign: 'center' }} item xs={4}>\r\n                                <FavoriteIcon color=\"primary\"\r\n                                    style={{ fontSize: 108, textAlign: 'center', cursor: 'pointer' }}\r\n                                    onClick={() => getHealthRecords()} />\r\n                                <Typography color=\"textPrimary\">Health records</Typography>\r\n                            </Grid>\r\n                            <Grid style={{ textAlign: 'center' }} item xs={4}>\r\n                                <HealingIcon\r\n                                    style={{ fontSize: 108, textAlign: 'center', cursor: 'pointer' }}\r\n                                    color=\"primary\" onClick={vaccineConfirmation} />\r\n                                <Typography color=\"textPrimary\">Vaccination confirmation</Typography>\r\n                            </Grid>\r\n                            <Grid style={{ textAlign: 'center' }} item xs={4}>\r\n                                <LocalHospitalIcon color=\"primary\"\r\n                                    style={{ fontSize: 108, textAlign: 'center', cursor: 'pointer' }}\r\n                                    onClick={covidTests} />\r\n                                <Typography color=\"textPrimary\">Covid tests</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n            <Dialog\r\n                open={isHealthRecordsShow}\r\n                onClose={() => setHealthRecordsShow(false)}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography style={{ textAlign: 'center' }}\r\n                        color=\"textPrimary\" variant=\"h5\">Health records</Typography>\r\n                    <FavoriteIcon\r\n                        style={{\r\n                            textAlign: 'center', display: 'block',\r\n                            width: '100%', fontSize: 82, marginTop: 20, marginBottom: 10, fill: '#f06292'\r\n                        }} />\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                    <Typography style={{ textAlign: 'center', textTransform: \"uppercase\" }} variant=\"h5\">\r\n                        List of prescriptions\r\n                    </Typography>\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Grid container spacing={4}>\r\n                            {prescriptions && prescriptions.map(p => {\r\n                                return (\r\n                                    <Grid\r\n                                        style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                                        item xs={4}\r\n                                        onClick={() => {\r\n                                            getPrescriptionDetails(p);\r\n                                            setTimeout(() => {\r\n                                                setPrescriptionDetailsShow(true);\r\n                                            }, 300)\r\n                                        }}>\r\n                                        <div\r\n                                            style={{\r\n                                                background: '#f06292',\r\n                                                minWidth: 150, textAlign: 'center', color: 'white',\r\n                                                textTransform: 'uppercase', paddingTop: 15, paddingBottom: 5,\r\n                                            }}>\r\n                                            {monthNames[new Date(p.date).getMonth()]}\r\n                                        </div>\r\n                                        <div\r\n                                            style={{\r\n                                                background: '#e8eaf6', minWidth: 150, textAlign: 'center',\r\n                                                fontSize: 56, fontWeight: 'bold'\r\n                                            }}>\r\n                                            {('0' + new Date(p.date).getDate()).slice(-2)}\r\n                                        </div>\r\n                                    </Grid>\r\n                                )\r\n                            })}\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 40 }}>\r\n                    <Pagination page={currentPage + 1} count={totalPages} shape=\"rounded\" variant=\"outlined\"\r\n                        showFirstButton showLastButton\r\n                        onChange={handlePageChange} />\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={isVaccineShow}\r\n                onClose={() => setVaccineShow(false)}\r\n                PaperProps={{\r\n                    style: {\r\n                        background: prescriptionsWithVaccine?.length === 2 ?\r\n                            '##66bb6a' : (prescriptionsWithVaccine?.length === 1 ? '#fdd835'\r\n                                : '#e53935')\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography style={{ textAlign: 'center' }}\r\n                        color=\"textPrimary\" variant=\"h5\">Covid vaccination confirmation</Typography>\r\n                    <VerifiedUserIcon\r\n                        style={{\r\n                            textAlign: 'center', display: 'block',\r\n                            width: '100%', fontSize: 82, marginTop: 20, marginBottom: 10, fill: 'white'\r\n                        }} />\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                    <Typography style={{ textAlign: 'center', textTransform: \"uppercase\" }} variant=\"h5\">\r\n                        {prescriptionsWithVaccine?.length === 2 ? '2 shots of covid vaccine'\r\n                            : (prescriptionsWithVaccine?.length === 1 ? '1 shot of covid vaccine' : '0 shot of covid vaccine')}\r\n                    </Typography>\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Grid container spacing={4}>\r\n                            <Grid style={{ textAlign: 'center' }} item xs={12}>\r\n                                <QRCode\r\n                                    id=\"qrcode\"\r\n                                    value={`http://localhost`}\r\n                                    size={100}\r\n                                    level={'H'}\r\n                                    includeMargin\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography\r\n                                    variant=\"caption\"\r\n                                    style={{ fontSize: 16, fontWeight: 'bold' }}>Personal information</Typography>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            <TableRow>\r\n                                                <TableCell><PersonIcon /></TableCell>\r\n                                                <TableCell>\r\n                                                    <Typography variant=\"caption\">Full name</Typography>\r\n                                                    <Typography>{user?.lastName + ' ' + user?.firstName}</Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><TodayIcon /></TableCell>\r\n                                                <TableCell>\r\n                                                    <Typography variant=\"caption\">Date of Birth</Typography>\r\n                                                    <Typography>\r\n                                                        {`${new Date(user?.dateOfBirth).getDate()}/${new Date(user?.dateOfBirth).getMonth() + 1}/${new Date(user?.dateOfBirth).getFullYear()}`}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><FingerprintIcon /></TableCell>\r\n                                                <TableCell>\r\n                                                    <Typography variant=\"caption\">Phone</Typography>\r\n                                                    <Typography>{user?.phone}</Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={isCovidTestShow}\r\n                onClose={() => setCovidTestShow(false)}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography style={{ textAlign: 'center' }}\r\n                        color=\"textPrimary\" variant=\"h5\">Covid tests</Typography>\r\n                    <VerifiedUserIcon\r\n                        style={{\r\n                            textAlign: 'center', display: 'block',\r\n                            width: '100%', fontSize: 82, marginTop: 20, marginBottom: 10, fill: '#f06292'\r\n                        }} />\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                    <Typography style={{ textAlign: 'center', textTransform: \"uppercase\" }} variant=\"h5\">\r\n                        list of test samples\r\n                    </Typography>\r\n                    <hr style={{ border: '3px solid black' }} />\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Grid container spacing={4}>\r\n                            {prescriptionsWithCovidTest && prescriptionsWithCovidTest.map(p => {\r\n                                return (\r\n                                    <Grid\r\n                                        style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                                        item xs={4}\r\n                                        onClick={() => {\r\n                                            setPrescriptionWithCovidTest(p);\r\n                                            setTimeout(() => {\r\n                                                setCovidTestDetailsShow(true);\r\n                                            }, 300)\r\n                                        }}>\r\n                                        <div\r\n                                            style={{\r\n                                                background: '#f06292',\r\n                                                minWidth: 150, textAlign: 'center', color: 'white',\r\n                                                textTransform: 'uppercase', paddingTop: 15, paddingBottom: 5,\r\n                                            }}>\r\n                                            {monthNames[new Date(p.date).getMonth()]}\r\n                                        </div>\r\n                                        <div\r\n                                            style={{\r\n                                                background: '#e8eaf6', minWidth: 150, textAlign: 'center',\r\n                                                fontSize: 56, fontWeight: 'bold'\r\n                                            }}>\r\n                                            {('0' + new Date(p.date).getDate()).slice(-2)}\r\n                                        </div>\r\n                                    </Grid>\r\n                                )\r\n                            })}\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullScreen\r\n                open={isPrescriptionDetailsShow}\r\n            >\r\n                <DialogTitle>\r\n                    <IconButton edge=\"start\" color=\"inherit\"\r\n                        onClick={() => setPrescriptionDetailsShow(false)} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <div style={{ textAlign: 'right', marginTop: -40 }}>\r\n                        <LocalHospitalIcon style={{ fontSize: 64, color: '#1976d2' }} />\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            DHB HOSPITAL\r\n                        </Typography>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {prescriptionDetails ? (\r\n                            <>\r\n                                <Typography style={{ margin: '40px 0 20px 0' }}>Prescription</Typography>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Patient name</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Service name</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Service fee</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Date</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Doctor</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {prescriptionDetails?.map(pd => {\r\n                                                const prescription = prescriptions.filter(p => p.id === pd.prescription_id)[0];\r\n                                                return (\r\n                                                    <TableRow>\r\n                                                        <TableCell>{user?.lastName + ' ' + user?.firstName}</TableCell>\r\n                                                        <TableCell>{prescription?.serviceName}</TableCell>\r\n                                                        <TableCell>{prescription?.serviceFee} $</TableCell>\r\n                                                        <TableCell>\r\n                                                            {`${new Date(prescription?.date).getDate()}/${new Date(prescription?.date).getMonth() + 1}/${new Date(prescription?.date).getFullYear()}`}\r\n                                                        </TableCell>\r\n                                                        <TableCell>{doctorOfPrescription?.lastName + ' ' + doctorOfPrescription?.firstName}</TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n\r\n                                <Typography style={{ margin: '40px 0 20px 0' }}>Prescription Details</Typography>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table arial-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>No.</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Medicine</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Description</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Quantity</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Price</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Unit</TableCell>\r\n                                                <TableCell style={{ fontWeight: 'bold' }}>Total</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {prescriptionDetails.map((p, index) => {\r\n                                                const medicine = medicines.filter(m => m.id === p.medicine_id)[0];\r\n                                                return (\r\n                                                    <TableRow key={p.id}>\r\n                                                        <TableCell>{index + 1}</TableCell>\r\n                                                        <TableCell>{medicine?.name}</TableCell>\r\n                                                        <TableCell>{medicine?.description}</TableCell>\r\n                                                        <TableCell>{p.quantity}</TableCell>\r\n                                                        <TableCell>{p.unitPrice}</TableCell>\r\n                                                        <TableCell>{medicine?.unit}</TableCell>\r\n                                                        <TableCell>{p.totalPrice}</TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })}\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={6}>Total price of medicine</TableCell>\r\n                                                <TableCell>\r\n                                                    {prescriptionDetails.map(p => p.totalPrice).reduce((a, b) => a + b, 0)} $\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </>\r\n                        ) : ''}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullScreen\r\n                open={isCovidTestDetailsShow}\r\n            >\r\n                <DialogTitle>\r\n                    <IconButton edge=\"start\" color=\"inherit\"\r\n                        onClick={() => setCovidTestDetailsShow(false)} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <div style={{ textAlign: 'right', marginTop: -40 }}>\r\n                        <LocalHospitalIcon style={{ fontSize: 64, color: '#1976d2' }} />\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            DHB HOSPITAL\r\n                        </Typography>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ fontWeight: 'bold' }}>Service name</TableCell>\r\n                                        <TableCell style={{ fontWeight: 'bold' }}>Service fee</TableCell>\r\n                                        <TableCell style={{ fontWeight: 'bold' }}>Date</TableCell>\r\n                                        <TableCell style={{ fontWeight: 'bold' }}>Description</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {prescriptionWithCovidTest ? (\r\n                                        <TableRow>\r\n                                            <TableCell>{prescriptionWithCovidTest.serviceName}</TableCell>\r\n                                            <TableCell>{prescriptionWithCovidTest.serviceFee} $</TableCell>\r\n                                            <TableCell>\r\n                                                {`${new Date(prescriptionWithCovidTest.date).getDate()}/${new Date(prescriptionWithCovidTest.date).getMonth() + 1}/${new Date(prescriptionWithCovidTest.date).getFullYear()}`}\r\n                                            </TableCell>\r\n                                            <TableCell>{prescriptionWithCovidTest.description}</TableCell>\r\n                                        </TableRow>\r\n                                    ) : ''\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}","import { Button } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../../../API\";\r\nimport { AuthContext } from \"../../../App\";\r\nimport DataTable from \"../../../components/DataTable\";\r\nimport { url } from \"../../../URL\";\r\n\r\nexport default function Categories() {\r\n    const [categories, setCategories] = useState();\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const authContext = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 300,\r\n            editable: authContext.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            width: 690,\r\n            editable: authContext.currentAuth?.role === 'ROLE_ADMIN'\r\n        },\r\n        authContext.currentAuth?.role === 'ROLE_ADMIN' ?\r\n        {\r\n            field: 'action',\r\n            headerName: ' ',\r\n            renderCell: (params) => {\r\n                return (\r\n                    <Button style={{ background: '#e1f5fe', color: 'black' }}\r\n                        variant=\"contained\" onClick={() => handleDelete(params.id)}>Delete</Button>\r\n                )\r\n            }\r\n        } : ''\r\n    ]\r\n\r\n    function handleDelete(id) {\r\n        swal({\r\n            title: 'Are you sure to delete?',\r\n            icon: 'warning',\r\n            buttons: {\r\n                cancel: 'Cancel',\r\n                delete: {\r\n                    text: 'Delete',\r\n                    value: 'delete'\r\n                }\r\n            }\r\n        }).then((value) => {\r\n            switch (value) {\r\n                case \"delete\":\r\n                    return API(`${endpoints['categories']}/${id}`, {\r\n                        method: 'delete',\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                        }\r\n                    })\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                swal('Deleted', '', 'success');\r\n                getCategories(`?p=${currentPage + 1}`);\r\n            }\r\n        }).catch (error => {\r\n        if (error?.response?.status === 401) {\r\n            if (window.confirm('Login expired! Please login again.')) {\r\n                localStorage.clear();\r\n                history.push(url['login']);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction getCategories(page = \"?p=1\") {\r\n    setLoading(true);\r\n    const number = \"n=6\"\r\n\r\n    API.get(`${endpoints['categories']}${page}&${number}`, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    }).then(res => {\r\n        console.log(res);\r\n\r\n        setCategories(res.data.content);\r\n        setCurrentPage(res.data.number);\r\n        setTotalElements(res.data.totalElements);\r\n        setLoading(false);\r\n    })\r\n        .catch(err => console.log(err.response))\r\n}\r\n\r\nfunction handleCellEditCommit({ id, field, value }) {\r\n    API(`${endpoints['categories']}/${id}`, {\r\n        method: 'patch',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        data: { [field]: value }\r\n    }).then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n            swal('Success', '', 'success');\r\n        }\r\n    }).catch(err => swal(err.response?.data?.message, '', 'error'))\r\n}\r\n\r\nfunction handlePageChange(newPage) {\r\n    getCategories(`?p=${newPage + 1}`);\r\n    setCurrentPage(newPage);\r\n}\r\n\r\nuseEffect(() => {\r\n    getCategories();\r\n}, [])\r\n\r\nreturn (\r\n    <div style={{ height: 400, width: '100%', marginTop: 50, background: 'white' }}>\r\n        {loading ? (\r\n            <img style={{ width: '100%', height: 600 }} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} />\r\n        ) : (\r\n            <DataTable header=\"LIST CATEGORY\" rows={categories} server={true}\r\n                columns={columns} pageSize={6} rowCount={totalElements}\r\n                handleCellEditCommit={handleCellEditCommit} createURL=\"/categories/create\"\r\n                handlePageChange={handlePageChange} currentPage={currentPage}\r\n                btnTitle=\"Create\" />\r\n        )}\r\n    </div>\r\n)\r\n}","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useHistory } from \"react-router\";\r\nimport swal from \"sweetalert\";\r\nimport API, { endpoints } from \"../API\";\r\nimport ButtonCustom from \"./Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'white',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n        borderRadius: 3,\r\n        display: 'flex',\r\n        padding: 100,\r\n        marginTop: 20,\r\n        boxShadow: '0 3px 5px 2px rgba(189, 225, 255, 1)',\r\n        borderRadius: '0% 100% 0% 100% / 77% 0% 100% 23% '\r\n    },\r\n})\r\n\r\nexport default function FormCategory(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [category, setCategory] = useState({\r\n        name: '',\r\n        description: ''\r\n    })\r\n\r\n    const handleGoBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        API(`${endpoints['categories']}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: category\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                swal('Success', '', 'success');\r\n                history.goBack();\r\n            }\r\n        }).catch(err => console.log(err.response))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let temp = {...category};\r\n        temp[e.target.name] = e.target.value;\r\n        setCategory(temp);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ValidatorForm id=\"form-medicine\" onSubmit={handleSubmit}>\r\n                <Typography style={{ color: 'black' }} variant='h4'>CREATE CATEGORY</Typography>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={category.name}\r\n                        onChange={handleChange} label=\"Name\" name=\"name\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <div>\r\n                    <TextValidator id=\"standard-required\" value={category.description}\r\n                        onChange={handleChange} label=\"Description\" name=\"description\"\r\n                        validators={['required']}\r\n                        errorMessages={['this field is required']} />\r\n                    <p id=\"error\" className={classes.error}></p>\r\n                </div>\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 0px' }}\r\n                    title={props.type} type='submit' color=\"darkPrimary\" />\r\n                <ButtonCustom style={{ margin: '10px 0px 0px 10px' }}\r\n                    onClick={handleGoBack} title='Go Back' color=\"darkSecondary\" />\r\n            </ValidatorForm>\r\n            <img style={{ height: '400px', marginLeft: '175px' }} src={process.env.PUBLIC_URL + '/images/gui12.svg'} />\r\n        </div>\r\n    )\r\n}","import { Card, CardActions, CardContent, CardHeader, Divider, IconButton, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport API, { endpoints } from '../../API';\r\n\r\nconst colors = ['red', 'green', 'blue', 'yellow', 'black', 'brown', 'pink']\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nexport default function ChartPatient(props) {\r\n    const labelsSevenDays = []\r\n    const [filter, setFilter] = useState(7);\r\n    const [totalPrescriptions, setTotalPrescriptions] = useState([]);\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        let promises = [];\r\n        let totalArr = [];\r\n        const goal = filter ? filter - 1 : 6;\r\n        for (let i = goal; i >= 0; i--) {\r\n            let today = new Date();\r\n            let date = new Date(today.getFullYear(), today.getMonth(), today.getUTCDate() - i + 1)\r\n            labelsSevenDays.push(`${date.getUTCDate()}, ${monthNames[date.getMonth()]}`)\r\n            API(`${endpoints['prescriptions']}/total/date`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                data: date\r\n            }).then(res => {\r\n                totalArr.push(res.data)\r\n            })\r\n                .catch(err => console.log(err.response))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setTotalPrescriptions(totalArr);\r\n\r\n            setTimeout(() => {\r\n                setData({\r\n                    labels: labelsSevenDays,\r\n                    datasets: [{\r\n                        label: 'Latest prescription',\r\n                        data: totalArr,\r\n                        backgroundColor: '#2979ff'\r\n                    }],\r\n                })\r\n            }, 200)\r\n        });\r\n    }, [filter])\r\n\r\n    function handleSelectChange(e) {\r\n        setFilter(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <CardHeader\r\n                title={<Typography variant=\"h6\">Latest prescription</Typography>}\r\n                action={\r\n                    <Select disableUnderline value={filter} style={{ width: 150, marginTop: 10 }}\r\n                        onChange={handleSelectChange}>\r\n                        <MenuItem value=\"7\">Last 7 days</MenuItem>\r\n                        <MenuItem value=\"15\">Last 15 days</MenuItem>\r\n                    </Select>\r\n                }\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <Bar style={{ marginTop: 30 }} data={data} />\r\n            </CardContent>\r\n            \r\n            {props.footer ? (\r\n                <>\r\n                <Divider style={{ marginTop: 120 }} />\r\n                <CardActions style={{ flexDirection: 'row-reverse' }}>\r\n                    <Typography variant=\"caption\" style={{ padding: 10, color: \"#2979ff\" }}>OVERVIEW</Typography>\r\n                </CardActions>\r\n                </>\r\n            ) : ''}\r\n        </Card>\r\n    )\r\n}","import { Button, Card, CardActions, CardContent, CardHeader, Divider, Typography } from \"@material-ui/core\";\r\nimport { getGridDateOperators } from \"@material-ui/data-grid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport API, { endpoints } from \"../../API\";\r\n\r\nexport default function ChartService(props) {\r\n    const [data, setData] = useState({});\r\n    const [totalService1, setTotalService1] = useState(0);\r\n    const [totalService2, setTotalService2] = useState(0);\r\n    const [totalService3, setTotalService3] = useState(0);\r\n\r\n    async function getData() {\r\n        const services = [];\r\n\r\n        await API.get(`${endpoints['services']}/1/bookings`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setTotalService1(res.data);\r\n\r\n            services.push(res.data);\r\n        })\r\n            .catch(err => console.log(err.response));\r\n\r\n        await API.get(`${endpoints['services']}/2/bookings`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setTotalService2(res.data);\r\n\r\n            services.push(res.data);\r\n        })\r\n            .catch(err => console.log(err.response));\r\n\r\n        await API.get(`${endpoints['services']}/3/bookings`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setTotalService3(res.data);\r\n\r\n            services.push(res.data);\r\n        })\r\n            .catch(err => console.log(err.response));\r\n\r\n        setTimeout(() => {\r\n            setData({\r\n                labels: ['Medical examination', 'Covid test', 'Covid vaccination'],\r\n                datasets: [{\r\n                    data: [services[0], services[1], services[2]],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                }],\r\n            });\r\n        }, 200)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                title={<Typography variant=\"h6\">Service rate</Typography>}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <Doughnut data={data} />\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button style={{background: 'rgba(255, 99, 132, 0.2)', marginLeft: 17}}>\r\n                    Medical examination <br/>\r\n                    {(totalService1 / parseFloat(totalService1 + totalService2 + totalService3) * 100).toFixed(2)} %\r\n                </Button>\r\n                <Button style={{background: 'rgba(54, 162, 235, 0.2)'}}>\r\n                    Covid test <br/>\r\n                    {(totalService2 / parseFloat(totalService1 + totalService2 + totalService3) * 100).toFixed(2)} %\r\n                </Button>\r\n                <Button style={{background: 'rgba(255, 206, 86, 0.2)'}}>\r\n                    Covid vaccination <br/>\r\n                    {(totalService3 / parseFloat(totalService1 + totalService2 + totalService3) * 100).toFixed(2)} %\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import { Card, CardActions, CardContent, CardHeader, Divider, Tab, Table, TableBody, TableCell, \r\n    TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../API\";\r\n\r\nexport default function LatestBookings() {\r\n    const [bookings, setBookings] = useState([]);\r\n    const [tokens, setTokens] = useState([]);\r\n\r\n    async function getLatestBookings() {\r\n        const sort = \"?s=date\";\r\n        const bookingIds = await API.get(`${endpoints['bookings']}${sort}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            setBookings(res.data.content);\r\n\r\n            return res.data.content.map(b => b.id);\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        let promises = [];\r\n        let tokenArr = [];\r\n        for (let i = 0; i < bookingIds?.length; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['bookings']}/${bookingIds[i]}/tokens`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => tokenArr.push(res.data))\r\n                .catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => setTokens(tokenArr));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLatestBookings();\r\n    }, [])\r\n\r\n    return (\r\n        <Card style={{height: '100%'}}>\r\n            <CardHeader\r\n                title={<Typography variant=\"h6\">Latest Bookings</Typography>}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{textAlign: 'left'}}>Booking Id</TableCell>\r\n                                <TableCell style={{textAlign: 'left'}}>Patient</TableCell>\r\n                                <TableCell style={{textAlign: 'left'}}>Date</TableCell>\r\n                                <TableCell style={{textAlign: 'left'}}>Status</TableCell>\r\n                            </TableRow>    \r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {bookings && bookings.map(b => {\r\n                                const token = tokens.filter(t => t.booking_id === b.id)[0];\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableCell style={{textAlign: 'left'}}>{b.id}</TableCell>\r\n                                        <TableCell style={{textAlign: 'left'}}>{b.fullName}</TableCell>\r\n                                        <TableCell style={{textAlign: 'left'}}>\r\n                                            {`${new Date(b.date).getDate()}/${new Date(b.date).getMonth() + 1}/${new Date(b.date).getFullYear()}`}\r\n                                        </TableCell>\r\n                                        <TableCell style={{textAlign: 'left'}}>\r\n                                            {token?.confirmedAt ? \r\n                                            <Typography \r\n                                            style={{color: 'white', background: '#2979ff', \r\n                                            textAlign: 'center', borderRadius: 20, padding: 3}}>confirmed</Typography> : \r\n                                            <Typography \r\n                                            style={{color: 'white', background: '#3f51b5',\r\n                                            textAlign: 'center', borderRadius: 20, padding: 3}}>pending</Typography>}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </CardContent>\r\n            <CardActions style={{ flexDirection: 'row-reverse', marginTop: 25 }}>\r\n                <Typography variant=\"caption\" style={{ padding: 10, color: \"#2979ff\" }}>VIEW ALL</Typography>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card, CardActions, CardContent, CardHeader, Divider, IconButton, Paper, Table, TableBody,\r\n    TableCell,\r\n    TableContainer, TableRow, Typography\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../API\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function LatestMedicines() {\r\n    const [medicines, setMedicines] = useState([]);\r\n\r\n    function getLatestMedicines() {\r\n        const sort = \"?s=createdDate\";\r\n        API.get(`${endpoints['medicines']}${sort}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setMedicines(res.data.content))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLatestMedicines();\r\n    }, [])\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                title={<Typography variant=\"h6\">Latest Medicines</Typography>}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {medicines && medicines.map(m => {\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableCell width=\"150\">\r\n                                            <img style={{ width: '100%' }} src={m.image} />\r\n                                        </TableCell>\r\n                                        <TableCell width=\"300\">\r\n                                            <Typography>{m.name}</Typography>\r\n                                            <Typography variant=\"caption\">\r\n                                                Updated on {`${new Date(m.updatedDate).getDate()}/${new Date(m.updatedDate).getMonth() + 1}/${new Date(m.updatedDate).getFullYear()}`}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton>\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </CardContent>\r\n            <CardActions style={{ flexDirection: 'row-reverse' }}>\r\n                <Typography variant=\"caption\" style={{ padding: 10, color: \"#2979ff\" }}>VIEW ALL</Typography>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../API\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nexport default function TotalBookings(props) {\r\n    const date = props.date;\r\n    const [totalBookings, setTotalBookings] = useState(0);\r\n\r\n    useEffect(() => {\r\n        API(`${endpoints['bookings']}/total/date`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: date ? new Date(date) : new Date()\r\n        }).then(res => setTotalBookings(res.data))\r\n            .catch(err => console.log(err.response));\r\n    }, [])\r\n\r\n    return (\r\n        <Card style={{ display: 'flex' }}>\r\n            <CardContent style={{ flex: '1 0 auto' }}>\r\n                <Typography variant=\"h5\">Total bookings today</Typography>\r\n                <Typography variant=\"h4\">{('0' + totalBookings).slice(-2)}</Typography>\r\n            </CardContent>\r\n            <div>\r\n                <LibraryBooksIcon style={{ fontSize: 84, marginTop: 10, fill: '#2979ff' }} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { AccessibleForward } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport API, { endpoints } from \"../../API\";\r\n\r\nexport default function TotalPatients(props) {\r\n    const [totalPatients, setTotalPatients] = useState(0);\r\n\r\n    useEffect(() => {\r\n        API.get(`${endpoints['patients']}/total`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => setTotalPatients(res.data))\r\n            .catch(err => console.log(err.response))\r\n    }, [])\r\n\r\n    return (\r\n        <Card style={{ display: 'flex' }}>\r\n            <CardContent style={{ flex: '1 0 auto' }}>\r\n                <Typography variant=\"h5\">Total of patients</Typography>\r\n                <Typography variant=\"h4\">{('0' + totalPatients).slice(-2)}</Typography>\r\n            </CardContent>\r\n            <div>\r\n                <AccessibleForward style={{ fontSize: 84, marginTop: 10, fill: '#2979ff' }} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport API, { endpoints } from \"../../API\";\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nexport default function TotalSales(props) {\r\n    const date = props.date;\r\n    const [totalSales, setTotalSales] = useState(0);\r\n\r\n    useEffect(() => {\r\n        API(`${endpoints['invoices']}/totalSales/date`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: date ? new Date(date) : new Date()\r\n        }).then(res => setTotalSales(res.data))\r\n        .catch(err => console.log(err.response))\r\n    }, [])\r\n\r\n    return (\r\n        <Card style={{ display: 'flex' }}>\r\n            <CardContent style={{ flex: '1 0 auto' }}>\r\n                <Typography variant=\"h5\">Sales today</Typography>\r\n                <Typography variant=\"h4\">{(Math.round(totalSales * 100) / 100).toFixed(2)} $</Typography>\r\n            </CardContent>\r\n            <div>\r\n                <MonetizationOnIcon style={{ fontSize: 84, marginTop: 10, fill: '#2979ff' }} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport ChartPrescription from \"../../../components/dashboard/ChartPrescription\";\r\nimport ChartService from \"../../../components/dashboard/ChartService\";\r\nimport LatestBookings from \"../../../components/dashboard/LatestBookings\";\r\nimport LatestMedicines from \"../../../components/dashboard/LatestMedicines\";\r\nimport TotalBookings from \"../../../components/dashboard/TotalBookings\";\r\nimport TotalPatients from \"../../../components/dashboard/TotalPatients\";\r\nimport TotalSales from \"../../../components/dashboard/TotalSales\";\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={4}>\r\n                    <TotalPatients />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TotalBookings date={new Date()} />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TotalSales date={new Date()} />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <ChartPrescription footer={true} />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <ChartService />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <LatestMedicines />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <LatestBookings />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { Card, CardContent } from \"@material-ui/core\";\r\n\r\nexport default function ChartMedicine() {\r\n    return (\r\n        <Card>\r\n            <CardContent></CardContent>\r\n        </Card>\r\n    )\r\n}","import { Button, Card, CardContent, CardHeader, Dialog, DialogContent, DialogContentText, DialogTitle, Divider, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport API, { endpoints } from \"../../API\";\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nexport default function ChartPatient() {\r\n    const [data, setData] = useState({});\r\n    const [filter, setFilter] = useState({\r\n        date: new Date(),\r\n        month: 0,\r\n        year: 0\r\n    });\r\n    const [dialog, setDialog] = useState({\r\n        date: false,\r\n        month: false,\r\n        year: false\r\n    })\r\n\r\n    const handleSelectChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value === 'date') {\r\n            setDialog({ ...dialog, date: true })\r\n        } else if (value === 'month') {\r\n            setDialog({ ...dialog, month: true })\r\n        } else if (value === 'year') {\r\n            setDialog({ ...dialog, year: true })\r\n        }\r\n    }\r\n\r\n    function getBookingsByDate(date = new Date()) {\r\n        API(`${endpoints['bookings']}/date`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            data: date\r\n        }).then(res => {\r\n            console.log(res.data.content.length)\r\n            setData({\r\n                labels: [date],\r\n                datasets: [{\r\n                    label: 'Total patients by date',\r\n                    data: [res.data.content.length],\r\n                    backgroundColor: '#2979ff'\r\n                }]\r\n            })\r\n        }).catch(err => console.log(err.response))\r\n    }\r\n\r\n    function getBookingsByMonth(month) {\r\n        API.get(`${endpoints['bookings']}/month/${month}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            console.log(res.data.content.length)\r\n            setData({\r\n                labels: [monthNames[month - 1]],\r\n                datasets: [{\r\n                    label: 'Total patients by month',\r\n                    data: [res.data.content.length],\r\n                    backgroundColor: '#2979ff'\r\n                }]\r\n            })\r\n        })\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n    function handleDateChange(date) {\r\n        setFilter({ ...filter, date: date })\r\n        getBookingsByDate(date);\r\n    }\r\n\r\n    function handleMonthChange(e) {\r\n        setFilter({ ...filter, month: e.target.value })\r\n        getBookingsByMonth(e.target.value);\r\n    }\r\n\r\n    function handleYearChange(e) {\r\n        setFilter({ ...filter, year: e.target.value });\r\n    }\r\n\r\n    async function getBookingsByYear() {\r\n        let promises = [];\r\n        let totalArr = [];\r\n        for(let i = 1; i <= 12; i++) {\r\n            promises.push(\r\n                API.get(`${endpoints['bookings']}/month/${i}?year=${filter.year}`, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                    }\r\n                }).then(res => {\r\n                    totalArr.push(res.data.content.length);\r\n                }).catch(err => console.log(err.response))\r\n            )\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setData({\r\n                labels: monthNames,\r\n                datasets: [{\r\n                    label: 'Total patients by year',\r\n                    data: totalArr,\r\n                    backgroundColor: '#2979ff'\r\n                }]\r\n            })\r\n            setDialog({...dialog, year:false})\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filter.date) {\r\n            getBookingsByDate(filter.date);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader\r\n                    title={<Typography variant=\"h6\">Total patients</Typography>}\r\n                    action={\r\n                        <Select disableUnderline value={filter} style={{ width: 100, marginTop: 10 }}\r\n                            onChange={handleSelectChange}>\r\n                            <MenuItem value=\"date\">Date</MenuItem>\r\n                            <MenuItem value=\"month\">Month</MenuItem>\r\n                            <MenuItem value=\"year\">Year</MenuItem>\r\n                        </Select>\r\n                    }\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Bar style={{ marginTop: 30 }} data={data} />\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog\r\n                open={dialog.date}\r\n                onClose={() => setDialog({ ...dialog, date: false })}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography>Enter a date</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker style={{ width: 200 }} color=\"primary\"\r\n                                label=\"Date *\" format=\"dd-MM-yyyy\"\r\n                                onChange={(date) => handleDateChange(date)}\r\n                                name=\"date\" value={filter.date} />\r\n                        </MuiPickersUtilsProvider>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.month}\r\n                onClose={() => setDialog({ ...dialog, month: false })}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography>Enter a month</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Select value={filter.month} onChange={handleMonthChange}>\r\n                            <MenuItem value=\"0\">Choose a month</MenuItem>\r\n                            <MenuItem value=\"1\">January</MenuItem>\r\n                            <MenuItem value=\"2\">February</MenuItem>\r\n                            <MenuItem value=\"3\">March</MenuItem>\r\n                            <MenuItem value=\"4\">April</MenuItem>\r\n                            <MenuItem value=\"5\">May</MenuItem>\r\n                            <MenuItem value=\"6\">June</MenuItem>\r\n                            <MenuItem value=\"7\">July</MenuItem>\r\n                            <MenuItem value=\"8\">August</MenuItem>\r\n                            <MenuItem value=\"9\">September</MenuItem>\r\n                            <MenuItem value=\"10\">October</MenuItem>\r\n                            <MenuItem value=\"11\">November</MenuItem>\r\n                            <MenuItem value=\"12\">December</MenuItem>\r\n                        </Select>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.year}\r\n                onClose={() => setDialog({ ...dialog, year: false })}\r\n            >\r\n                <DialogTitle>\r\n                    <Typography>Enter a year</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <TextField label=\"Enter a year\" value={filter.year}\r\n                            onChange={handleYearChange} />\r\n                            <br/>\r\n                        <Button onClick={getBookingsByYear} variant=\"outlined\" \r\n                        color=\"primary\" style={{marginTop: 20}}>Ok</Button>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { Card, CardContent } from \"@material-ui/core\";\r\n\r\nexport default function ChartSale() {\r\n    return (\r\n        <Card>\r\n            <CardContent></CardContent>\r\n        </Card>\r\n    )\r\n}","import { Grid } from \"@material-ui/core\";\r\nimport ChartMedicine from \"../../../components/chart/ChartMedicine\";\r\nimport ChartPatient from \"../../../components/chart/ChartPatient\";\r\nimport ChartSale from \"../../../components/chart/ChartSale\";\r\nimport ChartPrescription from \"../../../components/dashboard/ChartPrescription\";\r\n\r\n\r\nexport default function Chart() {\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={6}>\r\n                <ChartPatient />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <ChartPrescription footer={false} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <ChartSale />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <ChartMedicine />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import {\r\n    Avatar, Dialog, DialogContent, DialogContentText, DialogTitle,\r\n    Grid, IconButton, makeStyles, Tab, Tabs, TextField, Tooltip, Typography\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {\r\n    getFirestore, collection, addDoc, Timestamp,\r\n    where, query, getDocs, onSnapshot, setDoc, doc, documentId\r\n} from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    sender: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 16,\r\n        borderRadius: 30,\r\n        background: '#eeeeee',\r\n        width: '50%',\r\n        padding: '8px 8px 8px 15px',\r\n        fontWeight: 'bold'\r\n    },\r\n    receiver: {\r\n        display: 'inline-block',\r\n        marginTop: 16,\r\n        marginLeft: 10,\r\n        borderRadius: 30,\r\n        background: '#3d5afe',\r\n        color: 'white',\r\n        width: '50%',\r\n        padding: '8px 8px 8px 15px',\r\n        marginLeft: 270\r\n    }\r\n})\r\n\r\nexport default function Chat(props) {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageSelected, setMessageSelected] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const classes = useStyles();\r\n    const uid = props.uid;\r\n\r\n    const handleOpenChat = () => {\r\n        const db = getFirestore();\r\n\r\n        onSnapshot(collection(db, 'chats'),\r\n            (snapShot) => {\r\n                let arr = [];\r\n                let promises = [];\r\n                snapShot.docs.forEach(async (doc) => {\r\n\r\n                    const q = query(collection(db, 'users'), where(documentId(), \"==\", doc.id));\r\n                    promises.push(getDocs(q).then(value => {\r\n                        const element = {\r\n                            messageId: doc.id,\r\n                            messages: doc.data().messages,\r\n                            from: value.docs[0].data()\r\n                        }\r\n                        arr.push(element);\r\n                    }).catch(err => console.log(err))\r\n                    )\r\n                })\r\n                Promise.all(promises).then(() => {\r\n                    setMessages(arr);\r\n                })\r\n\r\n            },\r\n            (error) => { console.log(error) }\r\n        )\r\n\r\n        setTimeout(() => {\r\n            setOpen(true);\r\n        }, 200)\r\n\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const handleChangeTab = (e, value) => {\r\n        setTabValue(value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(messages);\r\n        const data = {\r\n            messages: [\r\n                ...messages[tabValue].messages,\r\n                {\r\n                    content: message,\r\n                    uid: uid || '',\r\n                    time: Timestamp.now()\r\n                }\r\n            ]\r\n        }\r\n        const db = getFirestore();\r\n        const ref = collection(db, 'chats');\r\n        const docId = messages[tabValue].messageId;\r\n        const docRef = doc(ref, docId);\r\n        setDoc(docRef, data, { merge: true })\r\n            .then(res => setMessage(''))\r\n            .catch(err => console.log(err));\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ position: 'fixed', bottom: 20, right: 7, cursor: 'pointer', width: 70 }}\r\n                onClick={handleOpenChat}>\r\n                <img width=\"100%\" src='https://res.cloudinary.com/dk5jgf3xj/image/upload/v1633499175/doank18/logo/chat-removebg-preview_xbkxge.png'\r\n                    alt=\"Chat\" />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={() => setOpen(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle>\r\n                    <Typography>Chat with hospital</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={3}>\r\n                                <Tabs\r\n                                    orientation=\"vertical\"\r\n                                    variant=\"scrollable\"\r\n                                    sx={{ borderRight: 1, borderColor: 'divider' }}\r\n                                    value={tabValue}\r\n                                    onChange={handleChangeTab}\r\n                                >\r\n                                    {messages && messages.map(m => {\r\n                                        return (\r\n                                            <Tab\r\n                                                icon={<Avatar\r\n                                                    src={m.from?.photoURL} />}\r\n                                                label={m.from?.displayName} />\r\n                                        )\r\n                                    })}\r\n                                </Tabs>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <div style={{ height: 300, overflow: 'auto' }}>\r\n                                    {messages[tabValue]?.messages && messages[tabValue]?.messages.map(m => {\r\n                                        let time = new Date(1970, 0, 1);\r\n                                        time.setUTCSeconds(m.time?.seconds);\r\n                                        \r\n                                        const message = messages.filter(m => m.messageId !== m.uid)[tabValue];\r\n\r\n                                        return (\r\n                                            <div>\r\n                                                {m.uid !== uid ? (\r\n                                                    <Tooltip title={time.toString()}>\r\n                                                        <Avatar\r\n                                                            style={{ display: 'inline-block', width: 30, height: 30 }}\r\n                                                            src={message?.from?.photoURL || \"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\"} />\r\n                                                    </Tooltip>\r\n                                                ) : ''}\r\n                                                <span className={m.uid !== uid ? classes.sender : classes.receiver}\r\n                                                >\r\n                                                    {m.content}\r\n                                                </span>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <form\r\n                                    style={{ width: 650, marginTop: 20 }}\r\n                                    onSubmit={handleSubmit}>\r\n                                    <TextField placeholder=\"Aa\" style={{ width: '90%' }}\r\n                                        onChange={handleChange} value={message} />\r\n                                    <IconButton disabled={message === \"\"} type=\"submit\">\r\n                                        <SendIcon color={message === \"\" ? '' : 'primary'} />\r\n                                    </IconButton>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport {\n  BrowserRouter, Route, Switch\n} from 'react-router-dom';\nimport MiniDrawer from './pages/management/Drawer';\nimport ProtectedRoute from './ProtectedAuth';\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login';\nimport axios from 'axios';\nimport Roles from './pages/management/roles';\nimport FormRole from './components/FormRole';\nimport RoleDetails from './pages/management/roles/details';\nimport Accounts from './pages/management/accounts';\nimport Medicines from './pages/management/medicines';\nimport FormMedicine from './components/FormMedicine';\nimport Shifts from './pages/management/shifts';\nimport FormShift from './components/FormShift';\nimport AccountDetails from './pages/management/accounts/details';\nimport Admins from './pages/management/admins';\nimport Doctors from './pages/management/doctors';\nimport Employees from './pages/management/employees';\nimport Schedules from './pages/management/schedules';\nimport FormSchedules from './components/FormSchedule';\nimport Bookings from './pages/management/bookings';\nimport FormBooking from './components/FormBooking';\nimport Patients from './pages/management/patients';\nimport Prescriptions from './pages/management/prescriptions';\nimport FormPrescription from './components/FormPrescription';\nimport Invoices from './pages/management/invoices';\nimport FormInvoice from './components/FormInvoice';\nimport { makeStyles } from '@material-ui/core';\nimport { indexToSubStrCurrentEndpoint } from './currentEndpoint';\nimport UserDetails from './components/UserDetails';\nimport { useHistory } from 'react-router';\nimport Categories from './pages/management/categories';\nimport FormCategory from './components/FormCategory';\nimport Dashboard from './pages/management/dashboard';\nimport Chart from './pages/management/charts/Chart';\nimport Chat from './components/Chat';\n\nexport const AuthContext = React.createContext();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(10),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(1)\n    }\n  }\n}))\n\nfunction App() {\n  const [currentAuth, setCurrentAuth] = useState();\n  const [isAuth, setAuth] = useState(localStorage.getItem('token') ? true : false);\n  const [page, setPage] = useState(window.location.href.substring(indexToSubStrCurrentEndpoint));\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (localStorage.getItem('token'))\n      getCurrentUser();\n  }, [])\n\n  function getCurrentUser() {\n    axios.get('http://localhost:8080/auth/admin/user', {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(res => {\n      setCurrentAuth(res.data);\n    }).catch(err => {\n      console.log(err);\n      setAuth(false);\n    });\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth: isAuth,\n      setAuth: setAuth,\n      currentAuth: currentAuth,\n      setCurrentAuth: setCurrentAuth,\n      page: page,\n      setPage: setPage\n    }}>\n      <div className={classes.root}>\n        <BrowserRouter>\n          <ProtectedRoute path=\"/\" component={MiniDrawer} isAuth={isAuth} />\n          <Switch>\n            <Route path=\"/login\" exact>\n              <Login />\n            </Route>\n            <main className={classes.content}>\n              <Route exact path=\"/\">\n                <Dashboard />\n              </Route>\n              <Route exact path=\"/roles\">\n                <Roles />\n              </Route>\n              <Route exact path=\"/roles/create\">\n                <FormRole type='create' />\n              </Route>\n              <Route exact path=\"/roles/:roleId\">\n                <RoleDetails />\n              </Route>\n              <Route exact path=\"/accounts\">\n                <Accounts />\n              </Route>\n              <Route exact path=\"/medicines\">\n                <Medicines />\n              </Route>\n              <Route exact path=\"/medicines/create\">\n                <FormMedicine type='create' />\n              </Route>\n              <Route exact path=\"/shifts\">\n                <Shifts />\n              </Route>\n              <Route exact path=\"/shifts/create\">\n                <FormShift type=\"Create\" />\n              </Route>\n              <Route exact path=\"/accounts/:accountId\">\n                <AccountDetails />\n              </Route>\n              <Route exact path=\"/admins\">\n                <Admins />\n              </Route>\n              <Route exact path=\"/doctors\">\n                <Doctors />\n              </Route>\n              <Route exact path=\"/employees\">\n                <Employees />\n              </Route>\n              <Route exact path=\"/schedules\">\n                <Schedules />\n              </Route>\n              <Route exact path=\"/schedules/create\">\n                <FormSchedules />\n              </Route>\n              <Route exact path=\"/bookings\">\n                <Bookings />\n              </Route>\n              <Route exact path=\"/bookings/create\">\n                <FormBooking />\n              </Route>\n              <Route exact path=\"/patients\">\n                <Patients />\n              </Route>\n              <Route exact path=\"/prescriptions\">\n                <Prescriptions />\n              </Route>\n              <Route exact path=\"/prescriptions/create\">\n                <FormPrescription />\n              </Route>\n              <Route exact path=\"/invoices\">\n                <Invoices />\n              </Route>\n              <Route exact path=\"/invoices/create\">\n                <FormInvoice />\n              </Route>\n              <Route exact path=\"/patients/:userId\">\n                <UserDetails role=\"patients\" /> \n              </Route>\n              <Route exact path=\"/categories\">\n                <Categories />\n              </Route>\n              <Route exact path=\"/categories/create\">\n                <FormCategory type=\"create\" />\n              </Route>\n              <Route exact path=\"/chart\">\n                <Chart />\n              </Route>\n              {currentAuth?.role === 'ROLE_EMPLOYEE' ? <Chat uid={currentAuth.userId} /> : ''}\n            </main>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}